
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000474  00800100  00002e5a  00002eee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000123  00800574  00800574  00003362  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003362  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003394  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  000033d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003565  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aff  00000000  00000000  00006ab1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001825  00000000  00000000  000075b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006bc  00000000  00000000  00008dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000648  00000000  00000000  00009494  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003508  00000000  00000000  00009adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000cfe4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 02 	jmp	0x564	; 0x564 <__ctors_end>
       4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       8:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      10:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      14:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      18:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      1c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      20:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      24:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      28:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      2c:	0c 94 bf 13 	jmp	0x277e	; 0x277e <__vector_11>
      30:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      34:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      38:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      3c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      40:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      44:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      48:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      4c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      50:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      54:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      58:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      5c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      60:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      64:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 7c       	andi	r16, 0xC0	; 192
      6e:	da f2       	brmi	.-74     	; 0x26 <__FUSE_REGION_LENGTH__+0x23>
      70:	da 7c       	andi	r29, 0xCA	; 202
      72:	7c d6       	rcall	.+3320   	; 0xd6c <clearcircle+0x86>
      74:	f2 d6       	rcall	.+3556   	; 0xe5a <drawline+0xa>
      76:	7c 38       	cpi	r23, 0x8C	; 140
      78:	7c 3e       	cpi	r23, 0xEC	; 236
      7a:	7c 38       	cpi	r23, 0x8C	; 140
      7c:	18 3c       	cpi	r17, 0xC8	; 200
      7e:	7e 3c       	cpi	r23, 0xCE	; 206
      80:	18 38       	cpi	r17, 0x88	; 136
      82:	ea be       	out	0x3a, r14	; 58
      84:	ea 38       	cpi	r30, 0x8A	; 138
      86:	38 7a       	andi	r19, 0xA8	; 168
      88:	fe 7a       	andi	r31, 0xAE	; 174
      8a:	38 00       	.word	0x0038	; ????
      8c:	18 3c       	cpi	r17, 0xC8	; 200
      8e:	18 00       	.word	0x0018	; ????
      90:	ff e7       	ldi	r31, 0x7F	; 127
      92:	c3 e7       	ldi	r28, 0x73	; 115
      94:	ff 00       	.word	0x00ff	; ????
      96:	18 24       	eor	r1, r8
      98:	18 00       	.word	0x0018	; ????
      9a:	ff e7       	ldi	r31, 0x7F	; 127
      9c:	db e7       	ldi	r29, 0x7B	; 123
      9e:	ff 0c       	add	r15, r15
      a0:	12 5c       	subi	r17, 0xC2	; 194
      a2:	60 70       	andi	r22, 0x00	; 0
      a4:	64 94       	.word	0x9464	; ????
      a6:	9e 94 64 02 	call	0x2404c8	; 0x2404c8 <__TEXT_REGION_LENGTH__+0x2204c8>
      aa:	fe a0       	ldd	r15, Y+38	; 0x26
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	02 fe       	sbrs	r0, 2
      b0:	a0 a4       	ldd	r10, Z+40	; 0x28
      b2:	fc 5a       	subi	r31, 0xAC	; 172
      b4:	3c e7       	ldi	r19, 0x7C	; 124
      b6:	3c 5a       	subi	r19, 0xAC	; 172
      b8:	fe 7c       	andi	r31, 0xCE	; 206
      ba:	38 38       	cpi	r19, 0x88	; 136
      bc:	10 10       	cpse	r1, r0
      be:	38 38       	cpi	r19, 0x88	; 136
      c0:	7c fe       	.word	0xfe7c	; ????
      c2:	28 44       	sbci	r18, 0x48	; 72
      c4:	fe 44       	sbci	r31, 0x4E	; 78
      c6:	28 fa       	.word	0xfa28	; ????
      c8:	fa 00       	.word	0x00fa	; ????
      ca:	fa fa       	.word	0xfafa	; ????
      cc:	60 90 fe 80 	lds	r6, 0x80FE	; 0x8080fe <__bss_end+0x7a67>
      d0:	fe 00       	.word	0x00fe	; ????
      d2:	66 91       	elpm	r22, Z
      d4:	a9 56       	subi	r26, 0x69	; 105
      d6:	06 06       	cpc	r0, r22
      d8:	06 06       	cpc	r0, r22
      da:	06 29       	or	r16, r6
      dc:	45 ff       	sbrs	r20, 5
      de:	45 29       	or	r20, r5
      e0:	10 20       	and	r1, r0
      e2:	7e 20       	and	r7, r14
      e4:	10 08       	sbc	r1, r0
      e6:	04 7e       	andi	r16, 0xE4	; 228
      e8:	04 08       	sbc	r0, r4
      ea:	10 10       	cpse	r1, r0
      ec:	54 38       	cpi	r21, 0x84	; 132
      ee:	10 10       	cpse	r1, r0
      f0:	38 54       	subi	r19, 0x48	; 72
      f2:	10 10       	cpse	r1, r0
      f4:	78 08       	sbc	r7, r8
      f6:	08 08       	sbc	r0, r8
      f8:	08 30       	cpi	r16, 0x08	; 8
      fa:	78 30       	cpi	r23, 0x08	; 8
      fc:	78 30       	cpi	r23, 0x08	; 8
      fe:	0c 1c       	adc	r0, r12
     100:	7c 1c       	adc	r7, r12
     102:	0c 60       	ori	r16, 0x0C	; 12
     104:	70 7c       	andi	r23, 0xC0	; 192
     106:	70 60       	ori	r23, 0x00	; 0
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	00 fa       	bst	r0, 0
     110:	00 00       	nop
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	00 e0       	ldi	r16, 0x00	; 0
     116:	00 28       	or	r0, r0
     118:	fe 28       	or	r15, r14
     11a:	fe 28       	or	r15, r14
     11c:	24 54       	subi	r18, 0x44	; 68
     11e:	fe 54       	subi	r31, 0x4E	; 78
     120:	48 c4       	rjmp	.+2192   	; 0x9b2 <fill+0x22>
     122:	c8 10       	cpse	r12, r8
     124:	26 46       	sbci	r18, 0x66	; 102
     126:	6c 92       	st	X, r6
     128:	6a 04       	cpc	r6, r10
     12a:	0a 00       	.word	0x000a	; ????
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	c0 00       	.word	0x00c0	; ????
     130:	00 38       	cpi	r16, 0x80	; 128
     132:	44 82       	std	Z+4, r4	; 0x04
     134:	00 00       	nop
     136:	82 44       	sbci	r24, 0x42	; 66
     138:	38 00       	.word	0x0038	; ????
     13a:	54 38       	cpi	r21, 0x84	; 132
     13c:	fe 38       	cpi	r31, 0x8E	; 142
     13e:	54 10       	cpse	r5, r4
     140:	10 7c       	andi	r17, 0xC0	; 192
     142:	10 10       	cpse	r1, r0
     144:	00 01       	movw	r0, r0
     146:	0e 0c       	add	r0, r14
     148:	00 10       	cpse	r0, r0
     14a:	10 10       	cpse	r1, r0
     14c:	10 10       	cpse	r1, r0
     14e:	00 00       	nop
     150:	06 06       	cpc	r0, r22
     152:	00 04       	cpc	r0, r0
     154:	08 10       	cpse	r0, r8
     156:	20 40       	sbci	r18, 0x00	; 0
     158:	7c 8a       	std	Y+20, r7	; 0x14
     15a:	92 a2       	std	Z+34, r9	; 0x22
     15c:	7c 00       	.word	0x007c	; ????
     15e:	42 fe       	sbrs	r4, 2
     160:	02 00       	.word	0x0002	; ????
     162:	4e 92       	st	-X, r4
     164:	92 92       	st	-Z, r9
     166:	62 84       	ldd	r6, Z+10	; 0x0a
     168:	82 92       	st	-Z, r8
     16a:	b2 cc       	rjmp	.-1692   	; 0xfffffad0 <__eeprom_end+0xff7efad0>
     16c:	18 28       	or	r1, r8
     16e:	48 fe       	.word	0xfe48	; ????
     170:	08 e4       	ldi	r16, 0x48	; 72
     172:	a2 a2       	std	Z+34, r10	; 0x22
     174:	a2 9c       	mul	r10, r2
     176:	3c 52       	subi	r19, 0x2C	; 44
     178:	92 92       	st	-Z, r9
     17a:	8c 82       	std	Y+4, r8	; 0x04
     17c:	84 88       	ldd	r8, Z+20	; 0x14
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	6c 92       	st	X, r6
     182:	92 92       	st	-Z, r9
     184:	6c 62       	ori	r22, 0x2C	; 44
     186:	92 92       	st	-Z, r9
     188:	94 78       	andi	r25, 0x84	; 132
     18a:	00 00       	nop
     18c:	28 00       	.word	0x0028	; ????
     18e:	00 00       	nop
     190:	02 2c       	mov	r0, r2
     192:	00 00       	nop
     194:	00 10       	cpse	r0, r0
     196:	28 44       	sbci	r18, 0x48	; 72
     198:	82 28       	or	r8, r2
     19a:	28 28       	or	r2, r8
     19c:	28 28       	or	r2, r8
     19e:	00 82       	st	Z, r0
     1a0:	44 28       	or	r4, r4
     1a2:	10 40       	sbci	r17, 0x00	; 0
     1a4:	80 9a       	sbi	0x10, 0	; 16
     1a6:	90 60       	ori	r25, 0x00	; 0
     1a8:	7c 82       	std	Y+4, r7	; 0x04
     1aa:	ba 9a       	sbi	0x17, 2	; 23
     1ac:	72 3e       	cpi	r23, 0xE2	; 226
     1ae:	48 88       	ldd	r4, Y+16	; 0x10
     1b0:	48 3e       	cpi	r20, 0xE8	; 232
     1b2:	fe 92       	st	-X, r15
     1b4:	92 92       	st	-Z, r9
     1b6:	6c 7c       	andi	r22, 0xCC	; 204
     1b8:	82 82       	std	Z+2, r8	; 0x02
     1ba:	82 44       	sbci	r24, 0x42	; 66
     1bc:	fe 82       	std	Y+6, r15	; 0x06
     1be:	82 82       	std	Z+2, r8	; 0x02
     1c0:	7c fe       	.word	0xfe7c	; ????
     1c2:	92 92       	st	-Z, r9
     1c4:	92 82       	std	Z+2, r9	; 0x02
     1c6:	fe 90       	ld	r15, -X
     1c8:	90 90 80 7c 	lds	r9, 0x7C80	; 0x807c80 <__bss_end+0x75e9>
     1cc:	82 82       	std	Z+2, r8	; 0x02
     1ce:	8a ce       	rjmp	.-748    	; 0xfffffee4 <__eeprom_end+0xff7efee4>
     1d0:	fe 10       	cpse	r15, r14
     1d2:	10 10       	cpse	r1, r0
     1d4:	fe 00       	.word	0x00fe	; ????
     1d6:	82 fe       	sbrs	r8, 2
     1d8:	82 00       	.word	0x0082	; ????
     1da:	04 02       	muls	r16, r20
     1dc:	82 fc       	sbrc	r8, 2
     1de:	80 fe       	sbrs	r8, 0
     1e0:	10 28       	or	r1, r0
     1e2:	44 82       	std	Z+4, r4	; 0x04
     1e4:	fe 02       	muls	r31, r30
     1e6:	02 02       	muls	r16, r18
     1e8:	02 fe       	sbrs	r0, 2
     1ea:	40 38       	cpi	r20, 0x80	; 128
     1ec:	40 fe       	sbrs	r4, 0
     1ee:	fe 20       	and	r15, r14
     1f0:	10 08       	sbc	r1, r0
     1f2:	fe 7c       	andi	r31, 0xCE	; 206
     1f4:	82 82       	std	Z+2, r8	; 0x02
     1f6:	82 7c       	andi	r24, 0xC2	; 194
     1f8:	fe 90       	ld	r15, -X
     1fa:	90 90 60 7c 	lds	r9, 0x7C60	; 0x807c60 <__bss_end+0x75c9>
     1fe:	82 8a       	std	Z+18, r8	; 0x12
     200:	84 7a       	andi	r24, 0xA4	; 164
     202:	fe 90       	ld	r15, -X
     204:	98 94       	clz
     206:	62 64       	ori	r22, 0x42	; 66
     208:	92 92       	st	-Z, r9
     20a:	92 4c       	sbci	r25, 0xC2	; 194
     20c:	c0 80       	ld	r12, Z
     20e:	fe 80       	ldd	r15, Y+6	; 0x06
     210:	c0 fc       	sbrc	r12, 0
     212:	02 02       	muls	r16, r18
     214:	02 fc       	sbrc	r0, 2
     216:	f8 04       	cpc	r15, r8
     218:	02 04       	cpc	r0, r2
     21a:	f8 fc       	.word	0xfcf8	; ????
     21c:	02 1c       	adc	r0, r2
     21e:	02 fc       	sbrc	r0, 2
     220:	c6 28       	or	r12, r6
     222:	10 28       	or	r1, r0
     224:	c6 c0       	rjmp	.+396    	; 0x3b2 <__trampolines_end+0x34a>
     226:	20 1e       	adc	r2, r16
     228:	20 c0       	rjmp	.+64     	; 0x26a <__trampolines_end+0x202>
     22a:	86 9a       	sbi	0x10, 6	; 16
     22c:	92 b2       	in	r9, 0x12	; 18
     22e:	c2 00       	.word	0x00c2	; ????
     230:	fe 82       	std	Y+6, r15	; 0x06
     232:	82 82       	std	Z+2, r8	; 0x02
     234:	40 20       	and	r4, r0
     236:	10 08       	sbc	r1, r0
     238:	04 00       	.word	0x0004	; ????
     23a:	82 82       	std	Z+2, r8	; 0x02
     23c:	82 fe       	sbrs	r8, 2
     23e:	20 40       	sbci	r18, 0x00	; 0
     240:	80 40       	sbci	r24, 0x00	; 0
     242:	20 02       	muls	r18, r16
     244:	02 02       	muls	r16, r18
     246:	02 02       	muls	r16, r18
     248:	00 c0       	rjmp	.+0      	; 0x24a <__trampolines_end+0x1e2>
     24a:	e0 10       	cpse	r14, r0
     24c:	00 04       	cpc	r0, r0
     24e:	2a 2a       	or	r2, r26
     250:	1e 02       	muls	r17, r30
     252:	fe 14       	cp	r15, r14
     254:	22 22       	and	r2, r18
     256:	1c 1c       	adc	r1, r12
     258:	22 22       	and	r2, r18
     25a:	22 14       	cp	r2, r2
     25c:	1c 22       	and	r1, r28
     25e:	22 14       	cp	r2, r2
     260:	fe 1c       	adc	r15, r14
     262:	2a 2a       	or	r2, r26
     264:	2a 18       	sub	r2, r10
     266:	00 10       	cpse	r0, r0
     268:	7e 90       	ld	r7, -X
     26a:	40 18       	sub	r4, r0
     26c:	25 25       	eor	r18, r5
     26e:	39 1e       	adc	r3, r25
     270:	fe 10       	cpse	r15, r14
     272:	20 20       	and	r2, r0
     274:	1e 00       	.word	0x001e	; ????
     276:	22 be       	out	0x32, r2	; 50
     278:	02 00       	.word	0x0002	; ????
     27a:	04 02       	muls	r16, r20
     27c:	02 bc       	out	0x22, r0	; 34
     27e:	00 fe       	sbrs	r0, 0
     280:	08 14       	cp	r0, r8
     282:	22 00       	.word	0x0022	; ????
     284:	00 82       	st	Z, r0
     286:	fe 02       	muls	r31, r30
     288:	00 3e       	cpi	r16, 0xE0	; 224
     28a:	20 1e       	adc	r2, r16
     28c:	20 1e       	adc	r2, r16
     28e:	3e 10       	cpse	r3, r14
     290:	20 20       	and	r2, r0
     292:	1e 1c       	adc	r1, r14
     294:	22 22       	and	r2, r18
     296:	22 1c       	adc	r2, r2
     298:	3f 18       	sub	r3, r15
     29a:	24 24       	eor	r2, r4
     29c:	18 18       	sub	r1, r8
     29e:	24 24       	eor	r2, r4
     2a0:	18 3f       	cpi	r17, 0xF8	; 248
     2a2:	3e 10       	cpse	r3, r14
     2a4:	20 20       	and	r2, r0
     2a6:	10 12       	cpse	r1, r16
     2a8:	2a 2a       	or	r2, r26
     2aa:	2a 24       	eor	r2, r10
     2ac:	20 20       	and	r2, r0
     2ae:	fc 22       	and	r15, r28
     2b0:	24 3c       	cpi	r18, 0xC4	; 196
     2b2:	02 02       	muls	r16, r18
     2b4:	04 3e       	cpi	r16, 0xE4	; 228
     2b6:	38 04       	cpc	r3, r8
     2b8:	02 04       	cpc	r0, r2
     2ba:	38 3c       	cpi	r19, 0xC8	; 200
     2bc:	02 0c       	add	r0, r2
     2be:	02 3c       	cpi	r16, 0xC2	; 194
     2c0:	22 14       	cp	r2, r2
     2c2:	08 14       	cp	r0, r8
     2c4:	22 32       	cpi	r18, 0x22	; 34
     2c6:	09 09       	sbc	r16, r9
     2c8:	09 3e       	cpi	r16, 0xE9	; 233
     2ca:	22 26       	eor	r2, r18
     2cc:	2a 32       	cpi	r18, 0x2A	; 42
     2ce:	22 00       	.word	0x0022	; ????
     2d0:	10 6c       	ori	r17, 0xC0	; 192
     2d2:	82 00       	.word	0x0082	; ????
     2d4:	00 00       	nop
     2d6:	ee 00       	.word	0x00ee	; ????
     2d8:	00 00       	nop
     2da:	82 6c       	ori	r24, 0xC2	; 194
     2dc:	10 00       	.word	0x0010	; ????
     2de:	40 80       	ld	r4, Z
     2e0:	40 20       	and	r4, r0
     2e2:	40 3c       	cpi	r20, 0xC0	; 192
     2e4:	64 c4       	rjmp	.+2248   	; 0xbae <fillcircle+0x12e>
     2e6:	64 3c       	cpi	r22, 0xC4	; 196
     2e8:	78 85       	ldd	r23, Y+8	; 0x08
     2ea:	85 86       	std	Z+13, r8	; 0x0d
     2ec:	48 5c       	subi	r20, 0xC8	; 200
     2ee:	02 02       	muls	r16, r18
     2f0:	04 5e       	subi	r16, 0xE4	; 228
     2f2:	1c 2a       	or	r1, r28
     2f4:	2a aa       	std	Y+50, r2	; 0x32
     2f6:	9a 84       	ldd	r9, Y+10	; 0x0a
     2f8:	aa aa       	std	Y+50, r10	; 0x32
     2fa:	9e 82       	std	Y+6, r9	; 0x06
     2fc:	84 2a       	or	r8, r20
     2fe:	2a 1e       	adc	r2, r26
     300:	82 84       	ldd	r8, Z+10	; 0x0a
     302:	aa 2a       	or	r10, r26
     304:	1e 02       	muls	r17, r30
     306:	04 2a       	or	r0, r20
     308:	aa 9e       	mul	r10, r26
     30a:	02 30       	cpi	r16, 0x02	; 2
     30c:	78 4a       	sbci	r23, 0xA8	; 168
     30e:	4e 48       	sbci	r20, 0x8E	; 142
     310:	9c aa       	std	Y+52, r9	; 0x34
     312:	aa aa       	std	Y+50, r10	; 0x32
     314:	9a 9c       	mul	r9, r10
     316:	2a 2a       	or	r2, r26
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	9c aa       	std	Y+52, r9	; 0x34
     31c:	2a 2a       	or	r2, r26
     31e:	1a 00       	.word	0x001a	; ????
     320:	00 a2       	std	Z+32, r0	; 0x20
     322:	3e 82       	std	Y+6, r3	; 0x06
     324:	00 40       	sbci	r16, 0x00	; 0
     326:	a2 be       	out	0x32, r10	; 50
     328:	42 00       	.word	0x0042	; ????
     32a:	80 a2       	std	Z+32, r8	; 0x20
     32c:	3e 02       	muls	r19, r30
     32e:	0f 94 24 94 	call	0x32848	; 0x32848 <__TEXT_REGION_LENGTH__+0x12848>
     332:	0f 0f       	add	r16, r31
     334:	14 a4       	ldd	r1, Z+44	; 0x2c
     336:	14 0f       	add	r17, r20
     338:	3e 2a       	or	r3, r30
     33a:	aa a2       	std	Y+34, r10	; 0x22
     33c:	00 04       	cpc	r0, r0
     33e:	2a 2a       	or	r2, r26
     340:	3e 2a       	or	r3, r30
     342:	3e 50       	subi	r19, 0x0E	; 14
     344:	90 fe       	sbrs	r9, 0
     346:	92 4c       	sbci	r25, 0xC2	; 194
     348:	92 92       	st	-Z, r9
     34a:	92 4c       	sbci	r25, 0xC2	; 194
     34c:	4c 12       	cpse	r4, r28
     34e:	12 12       	cpse	r1, r18
     350:	4c 4c       	sbci	r20, 0xCC	; 204
     352:	52 12       	cpse	r5, r18
     354:	12 0c       	add	r1, r2
     356:	5c 82       	std	Y+4, r5	; 0x04
     358:	82 84       	ldd	r8, Z+10	; 0x0a
     35a:	5e 5c       	subi	r21, 0xCE	; 206
     35c:	42 02       	muls	r20, r18
     35e:	04 1e       	adc	r0, r20
     360:	00 b9       	out	0x00, r16	; 0
     362:	05 05       	cpc	r16, r5
     364:	be 9c       	mul	r11, r14
     366:	22 22       	and	r2, r18
     368:	22 9c       	mul	r2, r2
     36a:	bc 02       	muls	r27, r28
     36c:	02 02       	muls	r16, r18
     36e:	bc 3c       	cpi	r27, 0xCC	; 204
     370:	24 ff       	sbrs	r18, 4
     372:	24 24       	eor	r2, r4
     374:	12 7e       	andi	r17, 0xE2	; 226
     376:	92 c2       	rjmp	.+1316   	; 0x89c <drawstring+0x3c>
     378:	66 d4       	rcall	.+2252   	; 0xc46 <clear+0x44>
     37a:	f4 3f       	cpi	r31, 0xF4	; 244
     37c:	f4 d4       	rcall	.+2536   	; 0xd66 <clearcircle+0x80>
     37e:	ff 90       	pop	r15
     380:	94 6f       	ori	r25, 0xF4	; 244
     382:	04 03       	mulsu	r16, r20
     384:	11 7e       	andi	r17, 0xE1	; 225
     386:	90 c0       	rjmp	.+288    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     388:	04 2a       	or	r0, r20
     38a:	2a 9e       	mul	r2, r26
     38c:	82 00       	.word	0x0082	; ????
     38e:	00 22       	and	r0, r16
     390:	be 82       	std	Y+6, r11	; 0x06
     392:	0c 12       	cpse	r0, r28
     394:	12 52       	subi	r17, 0x22	; 34
     396:	4c 1c       	adc	r4, r12
     398:	02 02       	muls	r16, r18
     39a:	44 5e       	subi	r20, 0xE4	; 228
     39c:	00 5e       	subi	r16, 0xE0	; 224
     39e:	50 50       	subi	r21, 0x00	; 0
     3a0:	4e be       	out	0x3e, r4	; 62
     3a2:	b0 98       	cbi	0x16, 0	; 22
     3a4:	8c be       	out	0x3c, r8	; 60
     3a6:	64 94       	.word	0x9464	; ????
     3a8:	94 f4       	brge	.+36     	; 0x3ce <__trampolines_end+0x366>
     3aa:	14 64       	ori	r17, 0x44	; 68
     3ac:	94 94       	.word	0x9494	; ????
     3ae:	94 64       	ori	r25, 0x44	; 68
     3b0:	0c 12       	cpse	r0, r28
     3b2:	b2 02       	muls	r27, r18
     3b4:	04 1c       	adc	r0, r4
     3b6:	10 10       	cpse	r1, r0
     3b8:	10 10       	cpse	r1, r0
     3ba:	10 10       	cpse	r1, r0
     3bc:	10 10       	cpse	r1, r0
     3be:	1c f4       	brge	.+6      	; 0x3c6 <__trampolines_end+0x35e>
     3c0:	08 13       	cpse	r16, r24
     3c2:	35 5d       	subi	r19, 0xD5	; 213
     3c4:	f4 08       	sbc	r15, r4
     3c6:	14 2c       	mov	r1, r4
     3c8:	5f 00       	.word	0x005f	; ????
     3ca:	00 de       	rcall	.-1024   	; 0xffffffcc <__eeprom_end+0xff7effcc>
     3cc:	00 00       	nop
     3ce:	10 28       	or	r1, r0
     3d0:	54 28       	or	r5, r4
     3d2:	44 44       	sbci	r20, 0x44	; 68
     3d4:	28 54       	subi	r18, 0x48	; 72
     3d6:	28 10       	cpse	r2, r8
     3d8:	55 00       	.word	0x0055	; ????
     3da:	aa 00       	.word	0x00aa	; ????
     3dc:	55 55       	subi	r21, 0x55	; 85
     3de:	aa 55       	subi	r26, 0x5A	; 90
     3e0:	aa 55       	subi	r26, 0x5A	; 90
     3e2:	aa 55       	subi	r26, 0x5A	; 90
     3e4:	aa 55       	subi	r26, 0x5A	; 90
     3e6:	aa 00       	.word	0x00aa	; ????
     3e8:	00 00       	nop
     3ea:	ff 00       	.word	0x00ff	; ????
     3ec:	08 08       	sbc	r0, r8
     3ee:	08 ff       	.word	0xff08	; ????
     3f0:	00 28       	or	r0, r0
     3f2:	28 28       	or	r2, r8
     3f4:	ff 00       	.word	0x00ff	; ????
     3f6:	08 08       	sbc	r0, r8
     3f8:	ff 00       	.word	0x00ff	; ????
     3fa:	ff 08       	sbc	r15, r15
     3fc:	08 0f       	add	r16, r24
     3fe:	08 0f       	add	r16, r24
     400:	28 28       	or	r2, r8
     402:	28 3f       	cpi	r18, 0xF8	; 248
     404:	00 28       	or	r0, r0
     406:	28 ef       	ldi	r18, 0xF8	; 248
     408:	00 ff       	sbrs	r16, 0
     40a:	00 00       	nop
     40c:	ff 00       	.word	0x00ff	; ????
     40e:	ff 28       	or	r15, r15
     410:	28 2f       	mov	r18, r24
     412:	20 3f       	cpi	r18, 0xF0	; 240
     414:	28 28       	or	r2, r8
     416:	e8 08       	sbc	r14, r8
     418:	f8 08       	sbc	r15, r8
     41a:	08 f8       	.word	0xf808	; ????
     41c:	08 f8       	.word	0xf808	; ????
     41e:	28 28       	or	r2, r8
     420:	28 f8       	.word	0xf828	; ????
     422:	00 08       	sbc	r0, r0
     424:	08 08       	sbc	r0, r8
     426:	0f 00       	.word	0x000f	; ????
     428:	00 00       	nop
     42a:	00 f8       	bld	r0, 0
     42c:	08 08       	sbc	r0, r8
     42e:	08 08       	sbc	r0, r8
     430:	f8 08       	sbc	r15, r8
     432:	08 08       	sbc	r0, r8
     434:	08 0f       	add	r16, r24
     436:	08 00       	.word	0x0008	; ????
     438:	00 00       	nop
     43a:	ff 08       	sbc	r15, r15
     43c:	08 08       	sbc	r0, r8
     43e:	08 08       	sbc	r0, r8
     440:	08 08       	sbc	r0, r8
     442:	08 08       	sbc	r0, r8
     444:	ff 08       	sbc	r15, r15
     446:	00 00       	nop
     448:	00 ff       	sbrs	r16, 0
     44a:	28 00       	.word	0x0028	; ????
     44c:	00 ff       	sbrs	r16, 0
     44e:	00 ff       	sbrs	r16, 0
     450:	00 00       	nop
     452:	f8 08       	sbc	r15, r8
     454:	e8 00       	.word	0x00e8	; ????
     456:	00 3f       	cpi	r16, 0xF0	; 240
     458:	20 2f       	mov	r18, r16
     45a:	28 28       	or	r2, r8
     45c:	e8 08       	sbc	r14, r8
     45e:	e8 28       	or	r14, r8
     460:	28 2f       	mov	r18, r24
     462:	20 2f       	mov	r18, r16
     464:	00 00       	nop
     466:	ff 00       	.word	0x00ff	; ????
     468:	ef 28       	or	r14, r15
     46a:	28 28       	or	r2, r8
     46c:	28 28       	or	r2, r8
     46e:	28 28       	or	r2, r8
     470:	ef 00       	.word	0x00ef	; ????
     472:	ef 28       	or	r14, r15
     474:	28 28       	or	r2, r8
     476:	e8 28       	or	r14, r8
     478:	08 08       	sbc	r0, r8
     47a:	f8 08       	sbc	r15, r8
     47c:	f8 28       	or	r15, r8
     47e:	28 28       	or	r2, r8
     480:	2f 28       	or	r2, r15
     482:	08 08       	sbc	r0, r8
     484:	0f 08       	sbc	r0, r15
     486:	0f 00       	.word	0x000f	; ????
     488:	00 f8       	bld	r0, 0
     48a:	08 f8       	.word	0xf808	; ????
     48c:	00 00       	nop
     48e:	00 f8       	bld	r0, 0
     490:	28 00       	.word	0x0028	; ????
     492:	00 00       	nop
     494:	3f 28       	or	r3, r15
     496:	00 00       	nop
     498:	0f 08       	sbc	r0, r15
     49a:	0f 08       	sbc	r0, r15
     49c:	08 ff       	.word	0xff08	; ????
     49e:	08 ff       	.word	0xff08	; ????
     4a0:	28 28       	or	r2, r8
     4a2:	28 ff       	.word	0xff28	; ????
     4a4:	28 08       	sbc	r2, r8
     4a6:	08 08       	sbc	r0, r8
     4a8:	f8 00       	.word	0x00f8	; ????
     4aa:	00 00       	nop
     4ac:	00 0f       	add	r16, r16
     4ae:	08 ff       	.word	0xff08	; ????
     4b0:	ff ff       	.word	0xffff	; ????
     4b2:	ff ff       	.word	0xffff	; ????
     4b4:	0f 0f       	add	r16, r31
     4b6:	0f 0f       	add	r16, r31
     4b8:	0f ff       	.word	0xff0f	; ????
     4ba:	ff ff       	.word	0xffff	; ????
     4bc:	00 00       	nop
     4be:	00 00       	nop
     4c0:	00 ff       	sbrs	r16, 0
     4c2:	ff f0       	brie	.+62     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c4:	f0 f0       	brcs	.+60     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c6:	f0 f0       	brcs	.+60     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     4c8:	1c 22       	and	r1, r28
     4ca:	22 1c       	adc	r2, r2
     4cc:	22 3e       	cpi	r18, 0xE2	; 226
     4ce:	54 54       	subi	r21, 0x44	; 68
     4d0:	7c 28       	or	r7, r12
     4d2:	7e 40       	sbci	r23, 0x0E	; 14
     4d4:	40 60       	ori	r20, 0x00	; 0
     4d6:	60 40       	sbci	r22, 0x00	; 0
     4d8:	7e 40       	sbci	r23, 0x0E	; 14
     4da:	7e 40       	sbci	r23, 0x0E	; 14
     4dc:	c6 aa       	std	Z+54, r12	; 0x36
     4de:	92 82       	std	Z+2, r9	; 0x02
     4e0:	c6 1c       	adc	r12, r6
     4e2:	22 22       	and	r2, r18
     4e4:	3c 20       	and	r3, r12
     4e6:	02 7e       	andi	r16, 0xE2	; 226
     4e8:	04 78       	andi	r16, 0x84	; 132
     4ea:	04 60       	ori	r16, 0x04	; 4
     4ec:	40 7e       	andi	r20, 0xE0	; 224
     4ee:	40 40       	sbci	r20, 0x00	; 0
     4f0:	99 a5       	ldd	r25, Y+41	; 0x29
     4f2:	e7 a5       	ldd	r30, Z+47	; 0x2f
     4f4:	99 38       	cpi	r25, 0x89	; 137
     4f6:	54 92       	xch	Z, r5
     4f8:	54 38       	cpi	r21, 0x84	; 132
     4fa:	32 4e       	sbci	r19, 0xE2	; 226
     4fc:	80 4e       	sbci	r24, 0xE0	; 224
     4fe:	32 0c       	add	r3, r2
     500:	52 b2       	in	r5, 0x12	; 18
     502:	b2 0c       	add	r11, r2
     504:	0c 12       	cpse	r0, r28
     506:	1e 12       	cpse	r1, r30
     508:	0c 3d       	cpi	r16, 0xDC	; 220
     50a:	46 5a       	subi	r20, 0xA6	; 166
     50c:	62 bc       	out	0x22, r6	; 34
     50e:	7c 92       	st	X, r7
     510:	92 92       	st	-Z, r9
     512:	00 7e       	andi	r16, 0xE0	; 224
     514:	80 80       	ld	r8, Z
     516:	80 7e       	andi	r24, 0xE0	; 224
     518:	54 54       	subi	r21, 0x44	; 68
     51a:	54 54       	subi	r21, 0x44	; 68
     51c:	54 22       	and	r5, r20
     51e:	22 fa       	bst	r2, 2
     520:	22 22       	and	r2, r18
     522:	02 8a       	std	Z+18, r0	; 0x12
     524:	52 22       	and	r5, r18
     526:	02 02       	muls	r16, r18
     528:	22 52       	subi	r18, 0x22	; 34
     52a:	8a 02       	muls	r24, r26
     52c:	00 00       	nop
     52e:	ff 80       	ldd	r15, Y+7	; 0x07
     530:	c0 07       	cpc	r28, r16
     532:	01 ff       	sbrs	r16, 1
     534:	00 00       	nop
     536:	10 10       	cpse	r1, r0
     538:	d6 d6       	rcall	.+3500   	; 0x12e6 <movepad1+0x7e>
     53a:	10 6c       	ori	r17, 0xC0	; 192
     53c:	48 6c       	ori	r20, 0xC8	; 200
     53e:	24 6c       	ori	r18, 0xC4	; 196
     540:	60 f0       	brcs	.+24     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
     542:	90 f0       	brcs	.+36     	; 0x568 <__ctors_end+0x4>
     544:	60 00       	.word	0x0060	; ????
     546:	00 18       	sub	r0, r0
     548:	18 00       	.word	0x0018	; ????
     54a:	00 00       	nop
     54c:	08 08       	sbc	r0, r8
     54e:	00 0c       	add	r0, r0
     550:	02 ff       	sbrs	r16, 2
     552:	80 80       	ld	r8, Z
     554:	00 f8       	bld	r0, 0
     556:	80 80       	ld	r8, Z
     558:	78 00       	.word	0x0078	; ????
     55a:	98 b8       	out	0x08, r9	; 8
     55c:	e8 48       	sbci	r30, 0x88	; 136
     55e:	00 3c       	cpi	r16, 0xC0	; 192
     560:	3c 3c       	cpi	r19, 0xCC	; 204
     562:	3c 00       	.word	0x003c	; ????

00000564 <__ctors_end>:
     564:	11 24       	eor	r1, r1
     566:	1f be       	out	0x3f, r1	; 63
     568:	cf ef       	ldi	r28, 0xFF	; 255
     56a:	d8 e0       	ldi	r29, 0x08	; 8
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	cd bf       	out	0x3d, r28	; 61

00000570 <__do_copy_data>:
     570:	15 e0       	ldi	r17, 0x05	; 5
     572:	a0 e0       	ldi	r26, 0x00	; 0
     574:	b1 e0       	ldi	r27, 0x01	; 1
     576:	ea e5       	ldi	r30, 0x5A	; 90
     578:	fe e2       	ldi	r31, 0x2E	; 46
     57a:	02 c0       	rjmp	.+4      	; 0x580 <__do_copy_data+0x10>
     57c:	05 90       	lpm	r0, Z+
     57e:	0d 92       	st	X+, r0
     580:	a4 37       	cpi	r26, 0x74	; 116
     582:	b1 07       	cpc	r27, r17
     584:	d9 f7       	brne	.-10     	; 0x57c <__do_copy_data+0xc>

00000586 <__do_clear_bss>:
     586:	26 e0       	ldi	r18, 0x06	; 6
     588:	a4 e7       	ldi	r26, 0x74	; 116
     58a:	b5 e0       	ldi	r27, 0x05	; 5
     58c:	01 c0       	rjmp	.+2      	; 0x590 <.do_clear_bss_start>

0000058e <.do_clear_bss_loop>:
     58e:	1d 92       	st	X+, r1

00000590 <.do_clear_bss_start>:
     590:	a7 39       	cpi	r26, 0x97	; 151
     592:	b2 07       	cpc	r27, r18
     594:	e1 f7       	brne	.-8      	; 0x58e <.do_clear_bss_loop>
     596:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <main>
     59a:	0c 94 2b 17 	jmp	0x2e56	; 0x2e56 <_exit>

0000059e <__bad_interrupt>:
     59e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005a2 <putstring>:
	DDRB |= 0x00;PORTB &= ~0x00;PORTB |= 0x00;
	_delay_ms(100);
	DDRD &= ~0x80;PORTD |= 0x80;PORTD |= 0x00;
	DDRB &= ~0x00;PORTB |= 0x00;PORTB |= 0x00;
	DDRD |= 0x80;PORTD &= ~0x80;PORTD |= 0x00;
	DDRB |= 0x01;PORTB &= ~0x01;PORTB |= 0x00;
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
     5a6:	fc 01       	movw	r30, r24
     5a8:	20 81       	ld	r18, Z
     5aa:	22 23       	and	r18, r18
     5ac:	69 f0       	breq	.+26     	; 0x5c8 <putstring+0x26>
     5ae:	dc 01       	movw	r26, r24
     5b0:	11 96       	adiw	r26, 0x01	; 1
     5b2:	e0 ec       	ldi	r30, 0xC0	; 192
     5b4:	f0 e0       	ldi	r31, 0x00	; 0
     5b6:	c6 ec       	ldi	r28, 0xC6	; 198
     5b8:	d0 e0       	ldi	r29, 0x00	; 0
     5ba:	90 81       	ld	r25, Z
     5bc:	95 ff       	sbrs	r25, 5
     5be:	fd cf       	rjmp	.-6      	; 0x5ba <putstring+0x18>
     5c0:	28 83       	st	Y, r18
     5c2:	2d 91       	ld	r18, X+
     5c4:	21 11       	cpse	r18, r1
     5c6:	f9 cf       	rjmp	.-14     	; 0x5ba <putstring+0x18>
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <putnum>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
     5d6:	60 97       	sbiw	r28, 0x10	; 16
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	f8 94       	cli
     5dc:	de bf       	out	0x3e, r29	; 62
     5de:	0f be       	out	0x3f, r0	; 63
     5e0:	cd bf       	out	0x3d, r28	; 61
     5e2:	4a e0       	ldi	r20, 0x0A	; 10
     5e4:	be 01       	movw	r22, r28
     5e6:	6f 5f       	subi	r22, 0xFF	; 255
     5e8:	7f 4f       	sbci	r23, 0xFF	; 255
     5ea:	0e 94 a2 16 	call	0x2d44	; 0x2d44 <__itoa_ncheck>
     5ee:	ce 01       	movw	r24, r28
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
     5f6:	60 96       	adiw	r28, 0x10	; 16
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	de bf       	out	0x3e, r29	; 62
     5fe:	0f be       	out	0x3f, r0	; 63
     600:	cd bf       	out	0x3d, r28	; 61
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	08 95       	ret

00000608 <adc_init>:
     608:	82 e0       	ldi	r24, 0x02	; 2
     60a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     60e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     612:	8f ec       	ldi	r24, 0xCF	; 207
     614:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     618:	88 e1       	ldi	r24, 0x18	; 24
     61a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     61e:	ec e7       	ldi	r30, 0x7C	; 124
     620:	f0 e0       	ldi	r31, 0x00	; 0
     622:	80 81       	ld	r24, Z
     624:	80 64       	ori	r24, 0x40	; 64
     626:	80 83       	st	Z, r24
     628:	ea e7       	ldi	r30, 0x7A	; 122
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	87 e8       	ldi	r24, 0x87	; 135
     62e:	80 83       	st	Z, r24
     630:	80 81       	ld	r24, Z
     632:	80 62       	ori	r24, 0x20	; 32
     634:	80 83       	st	Z, r24
     636:	80 81       	ld	r24, Z
     638:	80 64       	ori	r24, 0x40	; 64
     63a:	80 83       	st	Z, r24
     63c:	2f ef       	ldi	r18, 0xFF	; 255
     63e:	83 ec       	ldi	r24, 0xC3	; 195
     640:	99 e0       	ldi	r25, 0x09	; 9
     642:	21 50       	subi	r18, 0x01	; 1
     644:	80 40       	sbci	r24, 0x00	; 0
     646:	90 40       	sbci	r25, 0x00	; 0
     648:	e1 f7       	brne	.-8      	; 0x642 <adc_init+0x3a>
     64a:	00 c0       	rjmp	.+0      	; 0x64c <adc_init+0x44>
     64c:	00 00       	nop
     64e:	08 95       	ret

00000650 <adc_read>:
     650:	ec e7       	ldi	r30, 0x7C	; 124
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	90 81       	ld	r25, Z
     656:	98 7f       	andi	r25, 0xF8	; 248
     658:	87 70       	andi	r24, 0x07	; 7
     65a:	89 2b       	or	r24, r25
     65c:	80 83       	st	Z, r24
     65e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     662:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     666:	08 95       	ret

00000668 <lcd_command>:
     668:	5c 98       	cbi	0x0b, 4	; 11
     66a:	27 e0       	ldi	r18, 0x07	; 7
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	5d 98       	cbi	0x0b, 5	; 11
     672:	ac 01       	movw	r20, r24
     674:	02 2e       	mov	r0, r18
     676:	02 c0       	rjmp	.+4      	; 0x67c <lcd_command+0x14>
     678:	55 95       	asr	r21
     67a:	47 95       	ror	r20
     67c:	0a 94       	dec	r0
     67e:	e2 f7       	brpl	.-8      	; 0x678 <lcd_command+0x10>
     680:	40 ff       	sbrs	r20, 0
     682:	02 c0       	rjmp	.+4      	; 0x688 <lcd_command+0x20>
     684:	5e 9a       	sbi	0x0b, 6	; 11
     686:	01 c0       	rjmp	.+2      	; 0x68a <lcd_command+0x22>
     688:	5e 98       	cbi	0x0b, 6	; 11
     68a:	5d 9a       	sbi	0x0b, 5	; 11
     68c:	21 50       	subi	r18, 0x01	; 1
     68e:	31 09       	sbc	r19, r1
     690:	78 f7       	brcc	.-34     	; 0x670 <lcd_command+0x8>
     692:	08 95       	ret

00000694 <lcd_init>:
     694:	56 9a       	sbi	0x0a, 6	; 10
     696:	55 9a       	sbi	0x0a, 5	; 10
     698:	54 9a       	sbi	0x0a, 4	; 10
     69a:	53 9a       	sbi	0x0a, 3	; 10
     69c:	52 9a       	sbi	0x0a, 2	; 10
     69e:	5a 98       	cbi	0x0b, 2	; 11
     6a0:	5b 98       	cbi	0x0b, 3	; 11
     6a2:	2f ef       	ldi	r18, 0xFF	; 255
     6a4:	89 e6       	ldi	r24, 0x69	; 105
     6a6:	98 e1       	ldi	r25, 0x18	; 24
     6a8:	21 50       	subi	r18, 0x01	; 1
     6aa:	80 40       	sbci	r24, 0x00	; 0
     6ac:	90 40       	sbci	r25, 0x00	; 0
     6ae:	e1 f7       	brne	.-8      	; 0x6a8 <lcd_init+0x14>
     6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <lcd_init+0x1e>
     6b2:	00 00       	nop
     6b4:	5b 9a       	sbi	0x0b, 3	; 11
     6b6:	83 ea       	ldi	r24, 0xA3	; 163
     6b8:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6bc:	80 ea       	ldi	r24, 0xA0	; 160
     6be:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6c2:	80 ec       	ldi	r24, 0xC0	; 192
     6c4:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6c8:	80 e4       	ldi	r24, 0x40	; 64
     6ca:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6ce:	8c e2       	ldi	r24, 0x2C	; 44
     6d0:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6d4:	2f ef       	ldi	r18, 0xFF	; 255
     6d6:	80 e7       	ldi	r24, 0x70	; 112
     6d8:	92 e0       	ldi	r25, 0x02	; 2
     6da:	21 50       	subi	r18, 0x01	; 1
     6dc:	80 40       	sbci	r24, 0x00	; 0
     6de:	90 40       	sbci	r25, 0x00	; 0
     6e0:	e1 f7       	brne	.-8      	; 0x6da <lcd_init+0x46>
     6e2:	00 c0       	rjmp	.+0      	; 0x6e4 <lcd_init+0x50>
     6e4:	00 00       	nop
     6e6:	8e e2       	ldi	r24, 0x2E	; 46
     6e8:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     6ec:	2f ef       	ldi	r18, 0xFF	; 255
     6ee:	80 e7       	ldi	r24, 0x70	; 112
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	21 50       	subi	r18, 0x01	; 1
     6f4:	80 40       	sbci	r24, 0x00	; 0
     6f6:	90 40       	sbci	r25, 0x00	; 0
     6f8:	e1 f7       	brne	.-8      	; 0x6f2 <lcd_init+0x5e>
     6fa:	00 c0       	rjmp	.+0      	; 0x6fc <lcd_init+0x68>
     6fc:	00 00       	nop
     6fe:	8f e2       	ldi	r24, 0x2F	; 47
     700:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     704:	8f e3       	ldi	r24, 0x3F	; 63
     706:	9c e9       	ldi	r25, 0x9C	; 156
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <lcd_init+0x74>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <lcd_init+0x7a>
     70e:	00 00       	nop
     710:	86 e2       	ldi	r24, 0x26	; 38
     712:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     716:	08 95       	ret

00000718 <lcd_data>:
     718:	5c 9a       	sbi	0x0b, 4	; 11
     71a:	27 e0       	ldi	r18, 0x07	; 7
     71c:	30 e0       	ldi	r19, 0x00	; 0
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	5d 98       	cbi	0x0b, 5	; 11
     722:	ac 01       	movw	r20, r24
     724:	02 2e       	mov	r0, r18
     726:	02 c0       	rjmp	.+4      	; 0x72c <lcd_data+0x14>
     728:	55 95       	asr	r21
     72a:	47 95       	ror	r20
     72c:	0a 94       	dec	r0
     72e:	e2 f7       	brpl	.-8      	; 0x728 <lcd_data+0x10>
     730:	40 ff       	sbrs	r20, 0
     732:	02 c0       	rjmp	.+4      	; 0x738 <lcd_data+0x20>
     734:	5e 9a       	sbi	0x0b, 6	; 11
     736:	01 c0       	rjmp	.+2      	; 0x73a <lcd_data+0x22>
     738:	5e 98       	cbi	0x0b, 6	; 11
     73a:	5d 9a       	sbi	0x0b, 5	; 11
     73c:	21 50       	subi	r18, 0x01	; 1
     73e:	31 09       	sbc	r19, r1
     740:	78 f7       	brcc	.-34     	; 0x720 <lcd_data+0x8>
     742:	08 95       	ret

00000744 <lcd_set_brightness>:
     744:	cf 93       	push	r28
     746:	c8 2f       	mov	r28, r24
     748:	81 e8       	ldi	r24, 0x81	; 129
     74a:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     74e:	8c 2f       	mov	r24, r28
     750:	8f 73       	andi	r24, 0x3F	; 63
     752:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     756:	cf 91       	pop	r28
     758:	08 95       	ret

0000075a <write_buffer>:
     75a:	cf 92       	push	r12
     75c:	df 92       	push	r13
     75e:	ef 92       	push	r14
     760:	ff 92       	push	r15
     762:	0f 93       	push	r16
     764:	1f 93       	push	r17
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
     76a:	0f 2e       	mov	r0, r31
     76c:	f4 e0       	ldi	r31, 0x04	; 4
     76e:	ef 2e       	mov	r14, r31
     770:	f5 e0       	ldi	r31, 0x05	; 5
     772:	ff 2e       	mov	r15, r31
     774:	f0 2d       	mov	r31, r0
     776:	ec 01       	movw	r28, r24
     778:	0f 2e       	mov	r0, r31
     77a:	f4 e1       	ldi	r31, 0x14	; 20
     77c:	cf 2e       	mov	r12, r31
     77e:	f5 e0       	ldi	r31, 0x05	; 5
     780:	df 2e       	mov	r13, r31
     782:	f0 2d       	mov	r31, r0
     784:	f7 01       	movw	r30, r14
     786:	80 81       	ld	r24, Z
     788:	f2 e0       	ldi	r31, 0x02	; 2
     78a:	ef 0e       	add	r14, r31
     78c:	f1 1c       	adc	r15, r1
     78e:	80 6b       	ori	r24, 0xB0	; 176
     790:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     79a:	80 e1       	ldi	r24, 0x10	; 16
     79c:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     7a0:	80 ee       	ldi	r24, 0xE0	; 224
     7a2:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
     7a6:	8f ef       	ldi	r24, 0xFF	; 255
     7a8:	0e 94 8c 03 	call	0x718	; 0x718 <lcd_data>
     7ac:	8e 01       	movw	r16, r28
     7ae:	00 58       	subi	r16, 0x80	; 128
     7b0:	1f 4f       	sbci	r17, 0xFF	; 255
     7b2:	89 91       	ld	r24, Y+
     7b4:	0e 94 8c 03 	call	0x718	; 0x718 <lcd_data>
     7b8:	c0 17       	cp	r28, r16
     7ba:	d1 07       	cpc	r29, r17
     7bc:	d1 f7       	brne	.-12     	; 0x7b2 <write_buffer+0x58>
     7be:	e8 01       	movw	r28, r16
     7c0:	ce 14       	cp	r12, r14
     7c2:	df 04       	cpc	r13, r15
     7c4:	f9 f6       	brne	.-66     	; 0x784 <write_buffer+0x2a>
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	1f 91       	pop	r17
     7cc:	0f 91       	pop	r16
     7ce:	ff 90       	pop	r15
     7d0:	ef 90       	pop	r14
     7d2:	df 90       	pop	r13
     7d4:	cf 90       	pop	r12
     7d6:	08 95       	ret

000007d8 <clear_buffer>:
     7d8:	20 e0       	ldi	r18, 0x00	; 0
     7da:	34 e0       	ldi	r19, 0x04	; 4
     7dc:	fc 01       	movw	r30, r24
     7de:	a9 01       	movw	r20, r18
     7e0:	11 92       	st	Z+, r1
     7e2:	41 50       	subi	r20, 0x01	; 1
     7e4:	50 40       	sbci	r21, 0x00	; 0
     7e6:	e1 f7       	brne	.-8      	; 0x7e0 <clear_buffer+0x8>
     7e8:	08 95       	ret

000007ea <setpixel>:
     7ea:	24 2f       	mov	r18, r20
     7ec:	26 95       	lsr	r18
     7ee:	26 95       	lsr	r18
     7f0:	26 95       	lsr	r18
     7f2:	e6 2f       	mov	r30, r22
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	30 e8       	ldi	r19, 0x80	; 128
     7f8:	23 9f       	mul	r18, r19
     7fa:	e0 0d       	add	r30, r0
     7fc:	f1 1d       	adc	r31, r1
     7fe:	11 24       	eor	r1, r1
     800:	e8 0f       	add	r30, r24
     802:	f9 1f       	adc	r31, r25
     804:	50 e0       	ldi	r21, 0x00	; 0
     806:	40 95       	com	r20
     808:	50 95       	com	r21
     80a:	47 70       	andi	r20, 0x07	; 7
     80c:	55 27       	eor	r21, r21
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	02 c0       	rjmp	.+4      	; 0x818 <setpixel+0x2e>
     814:	88 0f       	add	r24, r24
     816:	99 1f       	adc	r25, r25
     818:	4a 95       	dec	r20
     81a:	e2 f7       	brpl	.-8      	; 0x814 <setpixel+0x2a>
     81c:	90 81       	ld	r25, Z
     81e:	89 2b       	or	r24, r25
     820:	80 83       	st	Z, r24
     822:	08 95       	ret

00000824 <clearpixel>:
     824:	24 2f       	mov	r18, r20
     826:	26 95       	lsr	r18
     828:	26 95       	lsr	r18
     82a:	26 95       	lsr	r18
     82c:	e6 2f       	mov	r30, r22
     82e:	f0 e0       	ldi	r31, 0x00	; 0
     830:	30 e8       	ldi	r19, 0x80	; 128
     832:	23 9f       	mul	r18, r19
     834:	e0 0d       	add	r30, r0
     836:	f1 1d       	adc	r31, r1
     838:	11 24       	eor	r1, r1
     83a:	e8 0f       	add	r30, r24
     83c:	f9 1f       	adc	r31, r25
     83e:	50 e0       	ldi	r21, 0x00	; 0
     840:	40 95       	com	r20
     842:	50 95       	com	r21
     844:	47 70       	andi	r20, 0x07	; 7
     846:	55 27       	eor	r21, r21
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	02 c0       	rjmp	.+4      	; 0x852 <clearpixel+0x2e>
     84e:	88 0f       	add	r24, r24
     850:	99 1f       	adc	r25, r25
     852:	4a 95       	dec	r20
     854:	e2 f7       	brpl	.-8      	; 0x84e <clearpixel+0x2a>
     856:	80 95       	com	r24
     858:	90 81       	ld	r25, Z
     85a:	89 23       	and	r24, r25
     85c:	80 83       	st	Z, r24
     85e:	08 95       	ret

00000860 <drawstring>:
     860:	df 92       	push	r13
     862:	ef 92       	push	r14
     864:	ff 92       	push	r15
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	8c 01       	movw	r16, r24
     870:	d6 2e       	mov	r13, r22
     872:	e9 01       	movw	r28, r18
     874:	88 81       	ld	r24, Y
     876:	88 23       	and	r24, r24
     878:	71 f1       	breq	.+92     	; 0x8d6 <drawstring+0x76>
     87a:	80 e8       	ldi	r24, 0x80	; 128
     87c:	48 9f       	mul	r20, r24
     87e:	70 01       	movw	r14, r0
     880:	11 24       	eor	r1, r1
     882:	25 c0       	rjmp	.+74     	; 0x8ce <drawstring+0x6e>
     884:	d7 01       	movw	r26, r14
     886:	a4 0f       	add	r26, r20
     888:	b1 1d       	adc	r27, r1
     88a:	a0 0f       	add	r26, r16
     88c:	b1 1f       	adc	r27, r17
     88e:	88 81       	ld	r24, Y
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	fc 01       	movw	r30, r24
     894:	ee 0f       	add	r30, r30
     896:	ff 1f       	adc	r31, r31
     898:	ee 0f       	add	r30, r30
     89a:	ff 1f       	adc	r31, r31
     89c:	e8 0f       	add	r30, r24
     89e:	f9 1f       	adc	r31, r25
     8a0:	e2 0f       	add	r30, r18
     8a2:	f3 1f       	adc	r31, r19
     8a4:	e8 59       	subi	r30, 0x98	; 152
     8a6:	ff 4f       	sbci	r31, 0xFF	; 255
     8a8:	e4 91       	lpm	r30, Z
     8aa:	8c 91       	ld	r24, X
     8ac:	e8 2b       	or	r30, r24
     8ae:	ec 93       	st	X, r30
     8b0:	4f 5f       	subi	r20, 0xFF	; 255
     8b2:	2f 5f       	subi	r18, 0xFF	; 255
     8b4:	3f 4f       	sbci	r19, 0xFF	; 255
     8b6:	25 30       	cpi	r18, 0x05	; 5
     8b8:	31 05       	cpc	r19, r1
     8ba:	21 f7       	brne	.-56     	; 0x884 <drawstring+0x24>
     8bc:	85 e0       	ldi	r24, 0x05	; 5
     8be:	d8 0e       	add	r13, r24
     8c0:	c8 01       	movw	r24, r16
     8c2:	0e 94 ad 03 	call	0x75a	; 0x75a <write_buffer>
     8c6:	21 96       	adiw	r28, 0x01	; 1
     8c8:	88 81       	ld	r24, Y
     8ca:	88 23       	and	r24, r24
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <drawstring+0x76>
     8ce:	4d 2d       	mov	r20, r13
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	d7 cf       	rjmp	.-82     	; 0x884 <drawstring+0x24>
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	1f 91       	pop	r17
     8dc:	0f 91       	pop	r16
     8de:	ff 90       	pop	r15
     8e0:	ef 90       	pop	r14
     8e2:	df 90       	pop	r13
     8e4:	08 95       	ret

000008e6 <drawrect>:
     8e6:	8f 92       	push	r8
     8e8:	9f 92       	push	r9
     8ea:	af 92       	push	r10
     8ec:	bf 92       	push	r11
     8ee:	cf 92       	push	r12
     8f0:	df 92       	push	r13
     8f2:	ef 92       	push	r14
     8f4:	ff 92       	push	r15
     8f6:	0f 93       	push	r16
     8f8:	1f 93       	push	r17
     8fa:	cf 93       	push	r28
     8fc:	df 93       	push	r29
     8fe:	7c 01       	movw	r14, r24
     900:	a6 2e       	mov	r10, r22
     902:	c4 2f       	mov	r28, r20
     904:	b2 2e       	mov	r11, r18
     906:	82 2e       	mov	r8, r18
     908:	91 2c       	mov	r9, r1
     90a:	d6 2f       	mov	r29, r22
     90c:	c1 2c       	mov	r12, r1
     90e:	d1 2c       	mov	r13, r1
     910:	14 2f       	mov	r17, r20
     912:	10 0f       	add	r17, r16
     914:	20 e0       	ldi	r18, 0x00	; 0
     916:	4c 2f       	mov	r20, r28
     918:	6d 2f       	mov	r22, r29
     91a:	c7 01       	movw	r24, r14
     91c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	41 2f       	mov	r20, r17
     924:	6d 2f       	mov	r22, r29
     926:	c7 01       	movw	r24, r14
     928:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     92c:	8f ef       	ldi	r24, 0xFF	; 255
     92e:	c8 1a       	sub	r12, r24
     930:	d8 0a       	sbc	r13, r24
     932:	df 5f       	subi	r29, 0xFF	; 255
     934:	8c 14       	cp	r8, r12
     936:	9d 04       	cpc	r9, r13
     938:	6c f7       	brge	.-38     	; 0x914 <__stack+0x15>
     93a:	c0 2e       	mov	r12, r16
     93c:	d1 2c       	mov	r13, r1
     93e:	c6 01       	movw	r24, r12
     940:	01 97       	sbiw	r24, 0x01	; 1
     942:	18 16       	cp	r1, r24
     944:	19 06       	cpc	r1, r25
     946:	bc f4       	brge	.+46     	; 0x976 <__stack+0x77>
     948:	cf 5f       	subi	r28, 0xFF	; 255
     94a:	01 e0       	ldi	r16, 0x01	; 1
     94c:	10 e0       	ldi	r17, 0x00	; 0
     94e:	db 2d       	mov	r29, r11
     950:	da 0d       	add	r29, r10
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	4c 2f       	mov	r20, r28
     956:	6a 2d       	mov	r22, r10
     958:	c7 01       	movw	r24, r14
     95a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	4c 2f       	mov	r20, r28
     962:	6d 2f       	mov	r22, r29
     964:	c7 01       	movw	r24, r14
     966:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     96a:	0f 5f       	subi	r16, 0xFF	; 255
     96c:	1f 4f       	sbci	r17, 0xFF	; 255
     96e:	cf 5f       	subi	r28, 0xFF	; 255
     970:	0c 15       	cp	r16, r12
     972:	1d 05       	cpc	r17, r13
     974:	71 f7       	brne	.-36     	; 0x952 <__stack+0x53>
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	ff 90       	pop	r15
     980:	ef 90       	pop	r14
     982:	df 90       	pop	r13
     984:	cf 90       	pop	r12
     986:	bf 90       	pop	r11
     988:	af 90       	pop	r10
     98a:	9f 90       	pop	r9
     98c:	8f 90       	pop	r8
     98e:	08 95       	ret

00000990 <fill>:
     990:	7f 92       	push	r7
     992:	8f 92       	push	r8
     994:	9f 92       	push	r9
     996:	af 92       	push	r10
     998:	bf 92       	push	r11
     99a:	cf 92       	push	r12
     99c:	df 92       	push	r13
     99e:	ef 92       	push	r14
     9a0:	ff 92       	push	r15
     9a2:	0f 93       	push	r16
     9a4:	1f 93       	push	r17
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
     9aa:	7c 01       	movw	r14, r24
     9ac:	14 2f       	mov	r17, r20
     9ae:	a6 2e       	mov	r10, r22
     9b0:	b1 2c       	mov	r11, r1
     9b2:	c2 2e       	mov	r12, r18
     9b4:	d1 2c       	mov	r13, r1
     9b6:	45 01       	movw	r8, r10
     9b8:	8c 0c       	add	r8, r12
     9ba:	9d 1c       	adc	r9, r13
     9bc:	8a 14       	cp	r8, r10
     9be:	9b 04       	cpc	r9, r11
     9c0:	0c f4       	brge	.+2      	; 0x9c4 <fill+0x34>
     9c2:	41 c0       	rjmp	.+130    	; 0xa46 <fill+0xb6>
     9c4:	e5 01       	movw	r28, r10
     9c6:	70 2e       	mov	r7, r16
     9c8:	74 0e       	add	r7, r20
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	47 2d       	mov	r20, r7
     9ce:	6c 2f       	mov	r22, r28
     9d0:	c7 01       	movw	r24, r14
     9d2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     9d6:	21 96       	adiw	r28, 0x01	; 1
     9d8:	8c 16       	cp	r8, r28
     9da:	9d 06       	cpc	r9, r29
     9dc:	b4 f7       	brge	.-20     	; 0x9ca <fill+0x3a>
     9de:	3a c0       	rjmp	.+116    	; 0xa54 <fill+0xc4>
     9e0:	6e 01       	movw	r12, r28
     9e2:	70 2e       	mov	r7, r16
     9e4:	71 0e       	add	r7, r17
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	47 2d       	mov	r20, r7
     9ea:	6c 2d       	mov	r22, r12
     9ec:	c7 01       	movw	r24, r14
     9ee:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     9f2:	8f ef       	ldi	r24, 0xFF	; 255
     9f4:	c8 1a       	sub	r12, r24
     9f6:	d8 0a       	sbc	r13, r24
     9f8:	ca 14       	cp	r12, r10
     9fa:	db 04       	cpc	r13, r11
     9fc:	a4 f3       	brlt	.-24     	; 0x9e6 <fill+0x56>
     9fe:	1f c0       	rjmp	.+62     	; 0xa3e <fill+0xae>
     a00:	65 01       	movw	r12, r10
     a02:	71 2e       	mov	r7, r17
     a04:	70 1a       	sub	r7, r16
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	47 2d       	mov	r20, r7
     a0a:	6c 2d       	mov	r22, r12
     a0c:	c7 01       	movw	r24, r14
     a0e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     a12:	8f ef       	ldi	r24, 0xFF	; 255
     a14:	c8 1a       	sub	r12, r24
     a16:	d8 0a       	sbc	r13, r24
     a18:	8c 14       	cp	r8, r12
     a1a:	9d 04       	cpc	r9, r13
     a1c:	a4 f7       	brge	.-24     	; 0xa06 <fill+0x76>
     a1e:	ca 15       	cp	r28, r10
     a20:	db 05       	cpc	r29, r11
     a22:	04 f5       	brge	.+64     	; 0xa64 <fill+0xd4>
     a24:	d1 2e       	mov	r13, r17
     a26:	d0 1a       	sub	r13, r16
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	4d 2d       	mov	r20, r13
     a2c:	6c 2f       	mov	r22, r28
     a2e:	c7 01       	movw	r24, r14
     a30:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     a34:	21 96       	adiw	r28, 0x01	; 1
     a36:	ca 15       	cp	r28, r10
     a38:	db 05       	cpc	r29, r11
     a3a:	b4 f3       	brlt	.-20     	; 0xa28 <fill+0x98>
     a3c:	13 c0       	rjmp	.+38     	; 0xa64 <fill+0xd4>
     a3e:	8a 14       	cp	r8, r10
     a40:	9b 04       	cpc	r9, r11
     a42:	f4 f6       	brge	.-68     	; 0xa00 <fill+0x70>
     a44:	ef cf       	rjmp	.-34     	; 0xa24 <fill+0x94>
     a46:	e5 01       	movw	r28, r10
     a48:	cc 19       	sub	r28, r12
     a4a:	dd 09       	sbc	r29, r13
     a4c:	ca 15       	cp	r28, r10
     a4e:	db 05       	cpc	r29, r11
     a50:	4c f4       	brge	.+18     	; 0xa64 <fill+0xd4>
     a52:	c6 cf       	rjmp	.-116    	; 0x9e0 <fill+0x50>
     a54:	e5 01       	movw	r28, r10
     a56:	cc 19       	sub	r28, r12
     a58:	dd 09       	sbc	r29, r13
     a5a:	ca 15       	cp	r28, r10
     a5c:	db 05       	cpc	r29, r11
     a5e:	0c f4       	brge	.+2      	; 0xa62 <fill+0xd2>
     a60:	bf cf       	rjmp	.-130    	; 0x9e0 <fill+0x50>
     a62:	ce cf       	rjmp	.-100    	; 0xa00 <fill+0x70>
     a64:	df 91       	pop	r29
     a66:	cf 91       	pop	r28
     a68:	1f 91       	pop	r17
     a6a:	0f 91       	pop	r16
     a6c:	ff 90       	pop	r15
     a6e:	ef 90       	pop	r14
     a70:	df 90       	pop	r13
     a72:	cf 90       	pop	r12
     a74:	bf 90       	pop	r11
     a76:	af 90       	pop	r10
     a78:	9f 90       	pop	r9
     a7a:	8f 90       	pop	r8
     a7c:	7f 90       	pop	r7
     a7e:	08 95       	ret

00000a80 <fillcircle>:
     a80:	9f 92       	push	r9
     a82:	af 92       	push	r10
     a84:	bf 92       	push	r11
     a86:	cf 92       	push	r12
     a88:	df 92       	push	r13
     a8a:	ef 92       	push	r14
     a8c:	ff 92       	push	r15
     a8e:	0f 93       	push	r16
     a90:	1f 93       	push	r17
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	6c 01       	movw	r12, r24
     a98:	16 2f       	mov	r17, r22
     a9a:	f4 2e       	mov	r15, r20
     a9c:	c2 2f       	mov	r28, r18
     a9e:	62 2f       	mov	r22, r18
     aa0:	61 0f       	add	r22, r17
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     aa8:	e1 2c       	mov	r14, r1
     aaa:	00 e0       	ldi	r16, 0x00	; 0
     aac:	2c 2f       	mov	r18, r28
     aae:	4f 2d       	mov	r20, r15
     ab0:	61 2f       	mov	r22, r17
     ab2:	c6 01       	movw	r24, r12
     ab4:	0e 94 c8 04 	call	0x990	; 0x990 <fill>
     ab8:	cc 23       	and	r28, r28
     aba:	09 f4       	brne	.+2      	; 0xabe <fillcircle+0x3e>
     abc:	96 c0       	rjmp	.+300    	; 0xbea <fillcircle+0x16a>
     abe:	20 e0       	ldi	r18, 0x00	; 0
     ac0:	4f 2d       	mov	r20, r15
     ac2:	61 2f       	mov	r22, r17
     ac4:	6c 1b       	sub	r22, r28
     ac6:	c6 01       	movw	r24, r12
     ac8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	4c 2f       	mov	r20, r28
     ad0:	4f 0d       	add	r20, r15
     ad2:	61 2f       	mov	r22, r17
     ad4:	c6 01       	movw	r24, r12
     ad6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	4f 2d       	mov	r20, r15
     ade:	4c 1b       	sub	r20, r28
     ae0:	61 2f       	mov	r22, r17
     ae2:	c6 01       	movw	r24, r12
     ae4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	5c 01       	movw	r10, r24
     aee:	ac 1a       	sub	r10, r28
     af0:	b1 08       	sbc	r11, r1
     af2:	d1 e0       	ldi	r29, 0x01	; 1
     af4:	01 c0       	rjmp	.+2      	; 0xaf8 <fillcircle+0x78>
     af6:	d8 2f       	mov	r29, r24
     af8:	1a 14       	cp	r1, r10
     afa:	1b 04       	cpc	r1, r11
     afc:	5c f0       	brlt	.+22     	; 0xb14 <fillcircle+0x94>
     afe:	8d 2f       	mov	r24, r29
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	88 0f       	add	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	8a 0d       	add	r24, r10
     b08:	9b 1d       	adc	r25, r11
     b0a:	5c 01       	movw	r10, r24
     b0c:	2f ef       	ldi	r18, 0xFF	; 255
     b0e:	a2 1a       	sub	r10, r18
     b10:	b2 0a       	sbc	r11, r18
     b12:	11 c0       	rjmp	.+34     	; 0xb36 <fillcircle+0xb6>
     b14:	c1 50       	subi	r28, 0x01	; 1
     b16:	8d 2f       	mov	r24, r29
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	88 0f       	add	r24, r24
     b1c:	99 1f       	adc	r25, r25
     b1e:	8a 0d       	add	r24, r10
     b20:	9b 1d       	adc	r25, r11
     b22:	2c 2f       	mov	r18, r28
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	22 0f       	add	r18, r18
     b28:	33 1f       	adc	r19, r19
     b2a:	82 1b       	sub	r24, r18
     b2c:	93 0b       	sbc	r25, r19
     b2e:	5c 01       	movw	r10, r24
     b30:	2f ef       	ldi	r18, 0xFF	; 255
     b32:	a2 1a       	sub	r10, r18
     b34:	b2 0a       	sbc	r11, r18
     b36:	cd 17       	cp	r28, r29
     b38:	08 f4       	brcc	.+2      	; 0xb3c <fillcircle+0xbc>
     b3a:	57 c0       	rjmp	.+174    	; 0xbea <fillcircle+0x16a>
     b3c:	20 e0       	ldi	r18, 0x00	; 0
     b3e:	0f 2d       	mov	r16, r15
     b40:	0d 0f       	add	r16, r29
     b42:	40 2f       	mov	r20, r16
     b44:	9c 2e       	mov	r9, r28
     b46:	91 0e       	add	r9, r17
     b48:	69 2d       	mov	r22, r9
     b4a:	c6 01       	movw	r24, r12
     b4c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	40 2f       	mov	r20, r16
     b54:	01 2f       	mov	r16, r17
     b56:	0c 1b       	sub	r16, r28
     b58:	60 2f       	mov	r22, r16
     b5a:	c6 01       	movw	r24, r12
     b5c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     b60:	20 e0       	ldi	r18, 0x00	; 0
     b62:	ef 2c       	mov	r14, r15
     b64:	ed 1a       	sub	r14, r29
     b66:	4e 2d       	mov	r20, r14
     b68:	69 2d       	mov	r22, r9
     b6a:	c6 01       	movw	r24, r12
     b6c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	4e 2d       	mov	r20, r14
     b74:	60 2f       	mov	r22, r16
     b76:	c6 01       	movw	r24, r12
     b78:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     b7c:	e1 2c       	mov	r14, r1
     b7e:	0d 2f       	mov	r16, r29
     b80:	2c 2f       	mov	r18, r28
     b82:	4f 2d       	mov	r20, r15
     b84:	61 2f       	mov	r22, r17
     b86:	c6 01       	movw	r24, r12
     b88:	0e 94 c8 04 	call	0x990	; 0x990 <fill>
     b8c:	cd 17       	cp	r28, r29
     b8e:	69 f1       	breq	.+90     	; 0xbea <fillcircle+0x16a>
     b90:	91 2e       	mov	r9, r17
     b92:	9d 0e       	add	r9, r29
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	0c 2f       	mov	r16, r28
     b98:	0f 0d       	add	r16, r15
     b9a:	40 2f       	mov	r20, r16
     b9c:	69 2d       	mov	r22, r9
     b9e:	c6 01       	movw	r24, r12
     ba0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     ba4:	e1 2e       	mov	r14, r17
     ba6:	ed 1a       	sub	r14, r29
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	40 2f       	mov	r20, r16
     bac:	6e 2d       	mov	r22, r14
     bae:	c6 01       	movw	r24, r12
     bb0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	0f 2d       	mov	r16, r15
     bb8:	0c 1b       	sub	r16, r28
     bba:	40 2f       	mov	r20, r16
     bbc:	69 2d       	mov	r22, r9
     bbe:	c6 01       	movw	r24, r12
     bc0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     bc4:	20 e0       	ldi	r18, 0x00	; 0
     bc6:	40 2f       	mov	r20, r16
     bc8:	6e 2d       	mov	r22, r14
     bca:	c6 01       	movw	r24, r12
     bcc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     bd0:	e1 2c       	mov	r14, r1
     bd2:	0c 2f       	mov	r16, r28
     bd4:	2d 2f       	mov	r18, r29
     bd6:	4f 2d       	mov	r20, r15
     bd8:	61 2f       	mov	r22, r17
     bda:	c6 01       	movw	r24, r12
     bdc:	0e 94 c8 04 	call	0x990	; 0x990 <fill>
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	8d 0f       	add	r24, r29
     be4:	dc 17       	cp	r29, r28
     be6:	08 f4       	brcc	.+2      	; 0xbea <fillcircle+0x16a>
     be8:	86 cf       	rjmp	.-244    	; 0xaf6 <fillcircle+0x76>
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	ff 90       	pop	r15
     bf4:	ef 90       	pop	r14
     bf6:	df 90       	pop	r13
     bf8:	cf 90       	pop	r12
     bfa:	bf 90       	pop	r11
     bfc:	af 90       	pop	r10
     bfe:	9f 90       	pop	r9
     c00:	08 95       	ret

00000c02 <clear>:
     c02:	7f 92       	push	r7
     c04:	8f 92       	push	r8
     c06:	9f 92       	push	r9
     c08:	af 92       	push	r10
     c0a:	bf 92       	push	r11
     c0c:	cf 92       	push	r12
     c0e:	df 92       	push	r13
     c10:	ef 92       	push	r14
     c12:	ff 92       	push	r15
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	7c 01       	movw	r14, r24
     c1e:	14 2f       	mov	r17, r20
     c20:	a6 2e       	mov	r10, r22
     c22:	b1 2c       	mov	r11, r1
     c24:	c2 2e       	mov	r12, r18
     c26:	d1 2c       	mov	r13, r1
     c28:	45 01       	movw	r8, r10
     c2a:	8c 0c       	add	r8, r12
     c2c:	9d 1c       	adc	r9, r13
     c2e:	8a 14       	cp	r8, r10
     c30:	9b 04       	cpc	r9, r11
     c32:	ec f1       	brlt	.+122    	; 0xcae <clear+0xac>
     c34:	e5 01       	movw	r28, r10
     c36:	70 2e       	mov	r7, r16
     c38:	74 0e       	add	r7, r20
     c3a:	47 2d       	mov	r20, r7
     c3c:	6c 2f       	mov	r22, r28
     c3e:	c7 01       	movw	r24, r14
     c40:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     c44:	21 96       	adiw	r28, 0x01	; 1
     c46:	8c 16       	cp	r8, r28
     c48:	9d 06       	cpc	r9, r29
     c4a:	bc f7       	brge	.-18     	; 0xc3a <clear+0x38>
     c4c:	37 c0       	rjmp	.+110    	; 0xcbc <clear+0xba>
     c4e:	6e 01       	movw	r12, r28
     c50:	70 2e       	mov	r7, r16
     c52:	71 0e       	add	r7, r17
     c54:	47 2d       	mov	r20, r7
     c56:	6c 2d       	mov	r22, r12
     c58:	c7 01       	movw	r24, r14
     c5a:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     c5e:	8f ef       	ldi	r24, 0xFF	; 255
     c60:	c8 1a       	sub	r12, r24
     c62:	d8 0a       	sbc	r13, r24
     c64:	ca 14       	cp	r12, r10
     c66:	db 04       	cpc	r13, r11
     c68:	ac f3       	brlt	.-22     	; 0xc54 <clear+0x52>
     c6a:	1d c0       	rjmp	.+58     	; 0xca6 <clear+0xa4>
     c6c:	65 01       	movw	r12, r10
     c6e:	71 2e       	mov	r7, r17
     c70:	70 1a       	sub	r7, r16
     c72:	47 2d       	mov	r20, r7
     c74:	6c 2d       	mov	r22, r12
     c76:	c7 01       	movw	r24, r14
     c78:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     c7c:	8f ef       	ldi	r24, 0xFF	; 255
     c7e:	c8 1a       	sub	r12, r24
     c80:	d8 0a       	sbc	r13, r24
     c82:	8c 14       	cp	r8, r12
     c84:	9d 04       	cpc	r9, r13
     c86:	ac f7       	brge	.-22     	; 0xc72 <clear+0x70>
     c88:	ca 15       	cp	r28, r10
     c8a:	db 05       	cpc	r29, r11
     c8c:	f4 f4       	brge	.+60     	; 0xcca <clear+0xc8>
     c8e:	d1 2e       	mov	r13, r17
     c90:	d0 1a       	sub	r13, r16
     c92:	4d 2d       	mov	r20, r13
     c94:	6c 2f       	mov	r22, r28
     c96:	c7 01       	movw	r24, r14
     c98:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     c9c:	21 96       	adiw	r28, 0x01	; 1
     c9e:	ca 15       	cp	r28, r10
     ca0:	db 05       	cpc	r29, r11
     ca2:	bc f3       	brlt	.-18     	; 0xc92 <clear+0x90>
     ca4:	12 c0       	rjmp	.+36     	; 0xcca <clear+0xc8>
     ca6:	8a 14       	cp	r8, r10
     ca8:	9b 04       	cpc	r9, r11
     caa:	04 f7       	brge	.-64     	; 0xc6c <clear+0x6a>
     cac:	f0 cf       	rjmp	.-32     	; 0xc8e <clear+0x8c>
     cae:	e5 01       	movw	r28, r10
     cb0:	cc 19       	sub	r28, r12
     cb2:	dd 09       	sbc	r29, r13
     cb4:	ca 15       	cp	r28, r10
     cb6:	db 05       	cpc	r29, r11
     cb8:	44 f4       	brge	.+16     	; 0xcca <clear+0xc8>
     cba:	c9 cf       	rjmp	.-110    	; 0xc4e <clear+0x4c>
     cbc:	e5 01       	movw	r28, r10
     cbe:	cc 19       	sub	r28, r12
     cc0:	dd 09       	sbc	r29, r13
     cc2:	ca 15       	cp	r28, r10
     cc4:	db 05       	cpc	r29, r11
     cc6:	1c f2       	brlt	.-122    	; 0xc4e <clear+0x4c>
     cc8:	d1 cf       	rjmp	.-94     	; 0xc6c <clear+0x6a>
     cca:	df 91       	pop	r29
     ccc:	cf 91       	pop	r28
     cce:	1f 91       	pop	r17
     cd0:	0f 91       	pop	r16
     cd2:	ff 90       	pop	r15
     cd4:	ef 90       	pop	r14
     cd6:	df 90       	pop	r13
     cd8:	cf 90       	pop	r12
     cda:	bf 90       	pop	r11
     cdc:	af 90       	pop	r10
     cde:	9f 90       	pop	r9
     ce0:	8f 90       	pop	r8
     ce2:	7f 90       	pop	r7
     ce4:	08 95       	ret

00000ce6 <clearcircle>:
     ce6:	9f 92       	push	r9
     ce8:	af 92       	push	r10
     cea:	bf 92       	push	r11
     cec:	cf 92       	push	r12
     cee:	df 92       	push	r13
     cf0:	ef 92       	push	r14
     cf2:	ff 92       	push	r15
     cf4:	0f 93       	push	r16
     cf6:	1f 93       	push	r17
     cf8:	cf 93       	push	r28
     cfa:	df 93       	push	r29
     cfc:	6c 01       	movw	r12, r24
     cfe:	16 2f       	mov	r17, r22
     d00:	f4 2e       	mov	r15, r20
     d02:	c2 2f       	mov	r28, r18
     d04:	62 2f       	mov	r22, r18
     d06:	61 0f       	add	r22, r17
     d08:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     d0c:	e1 2c       	mov	r14, r1
     d0e:	00 e0       	ldi	r16, 0x00	; 0
     d10:	2c 2f       	mov	r18, r28
     d12:	4f 2d       	mov	r20, r15
     d14:	61 2f       	mov	r22, r17
     d16:	c6 01       	movw	r24, r12
     d18:	0e 94 01 06 	call	0xc02	; 0xc02 <clear>
     d1c:	cc 23       	and	r28, r28
     d1e:	09 f4       	brne	.+2      	; 0xd22 <clearcircle+0x3c>
     d20:	8b c0       	rjmp	.+278    	; 0xe38 <clearcircle+0x152>
     d22:	4f 2d       	mov	r20, r15
     d24:	61 2f       	mov	r22, r17
     d26:	6c 1b       	sub	r22, r28
     d28:	c6 01       	movw	r24, r12
     d2a:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     d2e:	4c 2f       	mov	r20, r28
     d30:	4f 0d       	add	r20, r15
     d32:	61 2f       	mov	r22, r17
     d34:	c6 01       	movw	r24, r12
     d36:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     d3a:	4f 2d       	mov	r20, r15
     d3c:	4c 1b       	sub	r20, r28
     d3e:	61 2f       	mov	r22, r17
     d40:	c6 01       	movw	r24, r12
     d42:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	5c 01       	movw	r10, r24
     d4c:	ac 1a       	sub	r10, r28
     d4e:	b1 08       	sbc	r11, r1
     d50:	d1 e0       	ldi	r29, 0x01	; 1
     d52:	01 c0       	rjmp	.+2      	; 0xd56 <clearcircle+0x70>
     d54:	d8 2f       	mov	r29, r24
     d56:	1a 14       	cp	r1, r10
     d58:	1b 04       	cpc	r1, r11
     d5a:	5c f0       	brlt	.+22     	; 0xd72 <clearcircle+0x8c>
     d5c:	8d 2f       	mov	r24, r29
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	88 0f       	add	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	8a 0d       	add	r24, r10
     d66:	9b 1d       	adc	r25, r11
     d68:	5c 01       	movw	r10, r24
     d6a:	2f ef       	ldi	r18, 0xFF	; 255
     d6c:	a2 1a       	sub	r10, r18
     d6e:	b2 0a       	sbc	r11, r18
     d70:	11 c0       	rjmp	.+34     	; 0xd94 <clearcircle+0xae>
     d72:	c1 50       	subi	r28, 0x01	; 1
     d74:	8d 2f       	mov	r24, r29
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	88 0f       	add	r24, r24
     d7a:	99 1f       	adc	r25, r25
     d7c:	8a 0d       	add	r24, r10
     d7e:	9b 1d       	adc	r25, r11
     d80:	2c 2f       	mov	r18, r28
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	22 0f       	add	r18, r18
     d86:	33 1f       	adc	r19, r19
     d88:	82 1b       	sub	r24, r18
     d8a:	93 0b       	sbc	r25, r19
     d8c:	5c 01       	movw	r10, r24
     d8e:	2f ef       	ldi	r18, 0xFF	; 255
     d90:	a2 1a       	sub	r10, r18
     d92:	b2 0a       	sbc	r11, r18
     d94:	cd 17       	cp	r28, r29
     d96:	08 f4       	brcc	.+2      	; 0xd9a <clearcircle+0xb4>
     d98:	4f c0       	rjmp	.+158    	; 0xe38 <clearcircle+0x152>
     d9a:	0f 2d       	mov	r16, r15
     d9c:	0d 0f       	add	r16, r29
     d9e:	40 2f       	mov	r20, r16
     da0:	ec 2e       	mov	r14, r28
     da2:	e1 0e       	add	r14, r17
     da4:	6e 2d       	mov	r22, r14
     da6:	c6 01       	movw	r24, r12
     da8:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     dac:	40 2f       	mov	r20, r16
     dae:	01 2f       	mov	r16, r17
     db0:	0c 1b       	sub	r16, r28
     db2:	60 2f       	mov	r22, r16
     db4:	c6 01       	movw	r24, r12
     db6:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     dba:	9f 2c       	mov	r9, r15
     dbc:	9d 1a       	sub	r9, r29
     dbe:	49 2d       	mov	r20, r9
     dc0:	6e 2d       	mov	r22, r14
     dc2:	c6 01       	movw	r24, r12
     dc4:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     dc8:	49 2d       	mov	r20, r9
     dca:	60 2f       	mov	r22, r16
     dcc:	c6 01       	movw	r24, r12
     dce:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     dd2:	e1 2c       	mov	r14, r1
     dd4:	0d 2f       	mov	r16, r29
     dd6:	2c 2f       	mov	r18, r28
     dd8:	4f 2d       	mov	r20, r15
     dda:	61 2f       	mov	r22, r17
     ddc:	c6 01       	movw	r24, r12
     dde:	0e 94 01 06 	call	0xc02	; 0xc02 <clear>
     de2:	cd 17       	cp	r28, r29
     de4:	49 f1       	breq	.+82     	; 0xe38 <clearcircle+0x152>
     de6:	91 2e       	mov	r9, r17
     de8:	9d 0e       	add	r9, r29
     dea:	0c 2f       	mov	r16, r28
     dec:	0f 0d       	add	r16, r15
     dee:	40 2f       	mov	r20, r16
     df0:	69 2d       	mov	r22, r9
     df2:	c6 01       	movw	r24, r12
     df4:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     df8:	e1 2e       	mov	r14, r17
     dfa:	ed 1a       	sub	r14, r29
     dfc:	40 2f       	mov	r20, r16
     dfe:	6e 2d       	mov	r22, r14
     e00:	c6 01       	movw	r24, r12
     e02:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     e06:	0f 2d       	mov	r16, r15
     e08:	0c 1b       	sub	r16, r28
     e0a:	40 2f       	mov	r20, r16
     e0c:	69 2d       	mov	r22, r9
     e0e:	c6 01       	movw	r24, r12
     e10:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     e14:	40 2f       	mov	r20, r16
     e16:	6e 2d       	mov	r22, r14
     e18:	c6 01       	movw	r24, r12
     e1a:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
     e1e:	e1 2c       	mov	r14, r1
     e20:	0c 2f       	mov	r16, r28
     e22:	2d 2f       	mov	r18, r29
     e24:	4f 2d       	mov	r20, r15
     e26:	61 2f       	mov	r22, r17
     e28:	c6 01       	movw	r24, r12
     e2a:	0e 94 01 06 	call	0xc02	; 0xc02 <clear>
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	8d 0f       	add	r24, r29
     e32:	dc 17       	cp	r29, r28
     e34:	08 f4       	brcc	.+2      	; 0xe38 <clearcircle+0x152>
     e36:	8e cf       	rjmp	.-228    	; 0xd54 <clearcircle+0x6e>
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	df 90       	pop	r13
     e46:	cf 90       	pop	r12
     e48:	bf 90       	pop	r11
     e4a:	af 90       	pop	r10
     e4c:	9f 90       	pop	r9
     e4e:	08 95       	ret

00000e50 <drawline>:
     e50:	2f 92       	push	r2
     e52:	3f 92       	push	r3
     e54:	4f 92       	push	r4
     e56:	5f 92       	push	r5
     e58:	6f 92       	push	r6
     e5a:	7f 92       	push	r7
     e5c:	8f 92       	push	r8
     e5e:	9f 92       	push	r9
     e60:	af 92       	push	r10
     e62:	bf 92       	push	r11
     e64:	cf 92       	push	r12
     e66:	df 92       	push	r13
     e68:	ef 92       	push	r14
     e6a:	ff 92       	push	r15
     e6c:	0f 93       	push	r16
     e6e:	1f 93       	push	r17
     e70:	cf 93       	push	r28
     e72:	df 93       	push	r29
     e74:	00 d0       	rcall	.+0      	; 0xe76 <drawline+0x26>
     e76:	00 d0       	rcall	.+0      	; 0xe78 <drawline+0x28>
     e78:	cd b7       	in	r28, 0x3d	; 61
     e7a:	de b7       	in	r29, 0x3e	; 62
     e7c:	7c 01       	movw	r14, r24
     e7e:	36 2e       	mov	r3, r22
     e80:	49 83       	std	Y+1, r20	; 0x01
     e82:	22 2e       	mov	r2, r18
     e84:	0a 83       	std	Y+2, r16	; 0x02
     e86:	82 2f       	mov	r24, r18
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	86 1b       	sub	r24, r22
     e8c:	91 09       	sbc	r25, r1
     e8e:	20 2f       	mov	r18, r16
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	24 1b       	sub	r18, r20
     e94:	31 09       	sbc	r19, r1
     e96:	a9 01       	movw	r20, r18
     e98:	22 f4       	brpl	.+8      	; 0xea2 <drawline+0x52>
     e9a:	44 27       	eor	r20, r20
     e9c:	55 27       	eor	r21, r21
     e9e:	42 1b       	sub	r20, r18
     ea0:	53 0b       	sbc	r21, r19
     ea2:	9c 01       	movw	r18, r24
     ea4:	99 23       	and	r25, r25
     ea6:	24 f4       	brge	.+8      	; 0xeb0 <drawline+0x60>
     ea8:	22 27       	eor	r18, r18
     eaa:	33 27       	eor	r19, r19
     eac:	28 1b       	sub	r18, r24
     eae:	39 0b       	sbc	r19, r25
     eb0:	42 17       	cp	r20, r18
     eb2:	53 07       	cpc	r21, r19
     eb4:	0c f0       	brlt	.+2      	; 0xeb8 <drawline+0x68>
     eb6:	4c c0       	rjmp	.+152    	; 0xf50 <drawline+0x100>
     eb8:	99 23       	and	r25, r25
     eba:	3c f4       	brge	.+14     	; 0xeca <drawline+0x7a>
     ebc:	89 81       	ldd	r24, Y+1	; 0x01
     ebe:	4a 81       	ldd	r20, Y+2	; 0x02
     ec0:	49 83       	std	Y+1, r20	; 0x01
     ec2:	8a 83       	std	Y+2, r24	; 0x02
     ec4:	83 2d       	mov	r24, r3
     ec6:	32 2c       	mov	r3, r2
     ec8:	28 2e       	mov	r2, r24
     eca:	89 81       	ldd	r24, Y+1	; 0x01
     ecc:	68 2e       	mov	r6, r24
     ece:	71 2c       	mov	r7, r1
     ed0:	23 01       	movw	r4, r6
     ed2:	9a 81       	ldd	r25, Y+2	; 0x02
     ed4:	49 1a       	sub	r4, r25
     ed6:	51 08       	sbc	r5, r1
     ed8:	62 01       	movw	r12, r4
     eda:	22 f4       	brpl	.+8      	; 0xee4 <drawline+0x94>
     edc:	cc 24       	eor	r12, r12
     ede:	dd 24       	eor	r13, r13
     ee0:	c4 18       	sub	r12, r4
     ee2:	d5 08       	sbc	r13, r5
     ee4:	cc 0c       	add	r12, r12
     ee6:	dd 1c       	adc	r13, r13
     ee8:	a2 2c       	mov	r10, r2
     eea:	b1 2c       	mov	r11, r1
     eec:	03 2d       	mov	r16, r3
     eee:	10 e0       	ldi	r17, 0x00	; 0
     ef0:	45 01       	movw	r8, r10
     ef2:	80 1a       	sub	r8, r16
     ef4:	91 0a       	sbc	r9, r17
     ef6:	c6 01       	movw	r24, r12
     ef8:	88 19       	sub	r24, r8
     efa:	99 09       	sbc	r25, r9
     efc:	9c 83       	std	Y+4, r25	; 0x04
     efe:	8b 83       	std	Y+3, r24	; 0x03
     f00:	a0 16       	cp	r10, r16
     f02:	b1 06       	cpc	r11, r17
     f04:	2c f1       	brlt	.+74     	; 0xf50 <drawline+0x100>
     f06:	88 0c       	add	r8, r8
     f08:	99 1c       	adc	r9, r9
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	46 2d       	mov	r20, r6
     f0e:	60 2f       	mov	r22, r16
     f10:	c7 01       	movw	r24, r14
     f12:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	9c 81       	ldd	r25, Y+4	; 0x04
     f1a:	8c 0d       	add	r24, r12
     f1c:	9d 1d       	adc	r25, r13
     f1e:	9c 83       	std	Y+4, r25	; 0x04
     f20:	8b 83       	std	Y+3, r24	; 0x03
     f22:	99 23       	and	r25, r25
     f24:	84 f0       	brlt	.+32     	; 0xf46 <drawline+0xf6>
     f26:	14 14       	cp	r1, r4
     f28:	15 04       	cpc	r1, r5
     f2a:	24 f4       	brge	.+8      	; 0xf34 <drawline+0xe4>
     f2c:	91 e0       	ldi	r25, 0x01	; 1
     f2e:	69 1a       	sub	r6, r25
     f30:	71 08       	sbc	r7, r1
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <drawline+0xea>
     f34:	4f ef       	ldi	r20, 0xFF	; 255
     f36:	64 1a       	sub	r6, r20
     f38:	74 0a       	sbc	r7, r20
     f3a:	8b 81       	ldd	r24, Y+3	; 0x03
     f3c:	9c 81       	ldd	r25, Y+4	; 0x04
     f3e:	88 19       	sub	r24, r8
     f40:	99 09       	sbc	r25, r9
     f42:	9c 83       	std	Y+4, r25	; 0x04
     f44:	8b 83       	std	Y+3, r24	; 0x03
     f46:	0f 5f       	subi	r16, 0xFF	; 255
     f48:	1f 4f       	sbci	r17, 0xFF	; 255
     f4a:	a0 16       	cp	r10, r16
     f4c:	b1 06       	cpc	r11, r17
     f4e:	ec f6       	brge	.-70     	; 0xf0a <drawline+0xba>
     f50:	9a 81       	ldd	r25, Y+2	; 0x02
     f52:	e9 2f       	mov	r30, r25
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	49 81       	ldd	r20, Y+1	; 0x01
     f58:	24 2f       	mov	r18, r20
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	cf 01       	movw	r24, r30
     f5e:	82 1b       	sub	r24, r18
     f60:	93 0b       	sbc	r25, r19
     f62:	bc 01       	movw	r22, r24
     f64:	22 f4       	brpl	.+8      	; 0xf6e <drawline+0x11e>
     f66:	66 27       	eor	r22, r22
     f68:	77 27       	eor	r23, r23
     f6a:	68 1b       	sub	r22, r24
     f6c:	79 0b       	sbc	r23, r25
     f6e:	82 2d       	mov	r24, r2
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	83 19       	sub	r24, r3
     f74:	91 09       	sbc	r25, r1
     f76:	ac 01       	movw	r20, r24
     f78:	22 f4       	brpl	.+8      	; 0xf82 <drawline+0x132>
     f7a:	44 27       	eor	r20, r20
     f7c:	55 27       	eor	r21, r21
     f7e:	48 1b       	sub	r20, r24
     f80:	59 0b       	sbc	r21, r25
     f82:	46 17       	cp	r20, r22
     f84:	57 07       	cpc	r21, r23
     f86:	0c f0       	brlt	.+2      	; 0xf8a <drawline+0x13a>
     f88:	49 c0       	rjmp	.+146    	; 0x101c <drawline+0x1cc>
     f8a:	2e 1b       	sub	r18, r30
     f8c:	3f 0b       	sbc	r19, r31
     f8e:	3a f4       	brpl	.+14     	; 0xf9e <drawline+0x14e>
     f90:	89 81       	ldd	r24, Y+1	; 0x01
     f92:	9a 81       	ldd	r25, Y+2	; 0x02
     f94:	99 83       	std	Y+1, r25	; 0x01
     f96:	8a 83       	std	Y+2, r24	; 0x02
     f98:	83 2d       	mov	r24, r3
     f9a:	32 2c       	mov	r3, r2
     f9c:	28 2e       	mov	r2, r24
     f9e:	a3 2c       	mov	r10, r3
     fa0:	b1 2c       	mov	r11, r1
     fa2:	42 2c       	mov	r4, r2
     fa4:	51 2c       	mov	r5, r1
     fa6:	4a 18       	sub	r4, r10
     fa8:	5b 08       	sbc	r5, r11
     faa:	32 01       	movw	r6, r4
     fac:	22 f4       	brpl	.+8      	; 0xfb6 <drawline+0x166>
     fae:	66 24       	eor	r6, r6
     fb0:	77 24       	eor	r7, r7
     fb2:	64 18       	sub	r6, r4
     fb4:	75 08       	sbc	r7, r5
     fb6:	66 0c       	add	r6, r6
     fb8:	77 1c       	adc	r7, r7
     fba:	99 81       	ldd	r25, Y+1	; 0x01
     fbc:	89 2f       	mov	r24, r25
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	9c 83       	std	Y+4, r25	; 0x04
     fc2:	8b 83       	std	Y+3, r24	; 0x03
     fc4:	4a 81       	ldd	r20, Y+2	; 0x02
     fc6:	04 2f       	mov	r16, r20
     fc8:	10 e0       	ldi	r17, 0x00	; 0
     fca:	4c 01       	movw	r8, r24
     fcc:	80 1a       	sub	r8, r16
     fce:	91 0a       	sbc	r9, r17
     fd0:	63 01       	movw	r12, r6
     fd2:	c8 18       	sub	r12, r8
     fd4:	d9 08       	sbc	r13, r9
     fd6:	80 17       	cp	r24, r16
     fd8:	91 07       	cpc	r25, r17
     fda:	04 f1       	brlt	.+64     	; 0x101c <drawline+0x1cc>
     fdc:	88 0c       	add	r8, r8
     fde:	99 1c       	adc	r9, r9
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	4b 81       	ldd	r20, Y+3	; 0x03
     fe4:	6a 2d       	mov	r22, r10
     fe6:	c7 01       	movw	r24, r14
     fe8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
     fec:	c6 0c       	add	r12, r6
     fee:	d7 1c       	adc	r13, r7
     ff0:	dd 20       	and	r13, r13
     ff2:	64 f0       	brlt	.+24     	; 0x100c <drawline+0x1bc>
     ff4:	14 14       	cp	r1, r4
     ff6:	15 04       	cpc	r1, r5
     ff8:	24 f4       	brge	.+8      	; 0x1002 <drawline+0x1b2>
     ffa:	8f ef       	ldi	r24, 0xFF	; 255
     ffc:	a8 1a       	sub	r10, r24
     ffe:	b8 0a       	sbc	r11, r24
    1000:	03 c0       	rjmp	.+6      	; 0x1008 <drawline+0x1b8>
    1002:	91 e0       	ldi	r25, 0x01	; 1
    1004:	a9 1a       	sub	r10, r25
    1006:	b1 08       	sbc	r11, r1
    1008:	c8 18       	sub	r12, r8
    100a:	d9 08       	sbc	r13, r9
    100c:	8b 81       	ldd	r24, Y+3	; 0x03
    100e:	9c 81       	ldd	r25, Y+4	; 0x04
    1010:	01 97       	sbiw	r24, 0x01	; 1
    1012:	9c 83       	std	Y+4, r25	; 0x04
    1014:	8b 83       	std	Y+3, r24	; 0x03
    1016:	80 17       	cp	r24, r16
    1018:	91 07       	cpc	r25, r17
    101a:	14 f7       	brge	.-60     	; 0xfe0 <drawline+0x190>
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	0f 90       	pop	r0
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	1f 91       	pop	r17
    102a:	0f 91       	pop	r16
    102c:	ff 90       	pop	r15
    102e:	ef 90       	pop	r14
    1030:	df 90       	pop	r13
    1032:	cf 90       	pop	r12
    1034:	bf 90       	pop	r11
    1036:	af 90       	pop	r10
    1038:	9f 90       	pop	r9
    103a:	8f 90       	pop	r8
    103c:	7f 90       	pop	r7
    103e:	6f 90       	pop	r6
    1040:	5f 90       	pop	r5
    1042:	4f 90       	pop	r4
    1044:	3f 90       	pop	r3
    1046:	2f 90       	pop	r2
    1048:	08 95       	ret

0000104a <drawpad>:
    104a:	af 92       	push	r10
    104c:	bf 92       	push	r11
    104e:	cf 92       	push	r12
    1050:	df 92       	push	r13
    1052:	ff 92       	push	r15
    1054:	0f 93       	push	r16
    1056:	1f 93       	push	r17
    1058:	cf 93       	push	r28
    105a:	df 93       	push	r29
    105c:	8c 01       	movw	r16, r24
    105e:	41 11       	cpse	r20, r1
    1060:	1c c0       	rjmp	.+56     	; 0x109a <drawpad+0x50>
    1062:	ff 24       	eor	r15, r15
    1064:	f3 94       	inc	r15
    1066:	a6 2e       	mov	r10, r22
    1068:	b1 2c       	mov	r11, r1
    106a:	65 01       	movw	r12, r10
    106c:	85 e0       	ldi	r24, 0x05	; 5
    106e:	c8 0e       	add	r12, r24
    1070:	d1 1c       	adc	r13, r1
    1072:	e5 01       	movw	r28, r10
    1074:	25 97       	sbiw	r28, 0x05	; 5
    1076:	cc 16       	cp	r12, r28
    1078:	dd 06       	cpc	r13, r29
    107a:	54 f0       	brlt	.+20     	; 0x1090 <drawpad+0x46>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	4c 2f       	mov	r20, r28
    1080:	6f 2d       	mov	r22, r15
    1082:	c8 01       	movw	r24, r16
    1084:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
    1088:	21 96       	adiw	r28, 0x01	; 1
    108a:	cc 16       	cp	r12, r28
    108c:	dd 06       	cpc	r13, r29
    108e:	b4 f7       	brge	.-20     	; 0x107c <drawpad+0x32>
    1090:	f3 94       	inc	r15
    1092:	83 e0       	ldi	r24, 0x03	; 3
    1094:	f8 12       	cpse	r15, r24
    1096:	ed cf       	rjmp	.-38     	; 0x1072 <drawpad+0x28>
    1098:	1d c0       	rjmp	.+58     	; 0x10d4 <drawpad+0x8a>
    109a:	0f 2e       	mov	r0, r31
    109c:	fd e7       	ldi	r31, 0x7D	; 125
    109e:	ff 2e       	mov	r15, r31
    10a0:	f0 2d       	mov	r31, r0
    10a2:	a6 2e       	mov	r10, r22
    10a4:	b1 2c       	mov	r11, r1
    10a6:	65 01       	movw	r12, r10
    10a8:	85 e0       	ldi	r24, 0x05	; 5
    10aa:	c8 0e       	add	r12, r24
    10ac:	d1 1c       	adc	r13, r1
    10ae:	e5 01       	movw	r28, r10
    10b0:	25 97       	sbiw	r28, 0x05	; 5
    10b2:	cc 16       	cp	r12, r28
    10b4:	dd 06       	cpc	r13, r29
    10b6:	54 f0       	brlt	.+20     	; 0x10cc <drawpad+0x82>
    10b8:	20 e0       	ldi	r18, 0x00	; 0
    10ba:	4c 2f       	mov	r20, r28
    10bc:	6f 2d       	mov	r22, r15
    10be:	c8 01       	movw	r24, r16
    10c0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <setpixel>
    10c4:	21 96       	adiw	r28, 0x01	; 1
    10c6:	cc 16       	cp	r12, r28
    10c8:	dd 06       	cpc	r13, r29
    10ca:	b4 f7       	brge	.-20     	; 0x10b8 <drawpad+0x6e>
    10cc:	f3 94       	inc	r15
    10ce:	8f e7       	ldi	r24, 0x7F	; 127
    10d0:	f8 12       	cpse	r15, r24
    10d2:	ed cf       	rjmp	.-38     	; 0x10ae <drawpad+0x64>
    10d4:	df 91       	pop	r29
    10d6:	cf 91       	pop	r28
    10d8:	1f 91       	pop	r17
    10da:	0f 91       	pop	r16
    10dc:	ff 90       	pop	r15
    10de:	df 90       	pop	r13
    10e0:	cf 90       	pop	r12
    10e2:	bf 90       	pop	r11
    10e4:	af 90       	pop	r10
    10e6:	08 95       	ret

000010e8 <drawbackground>:
    10e8:	ef 92       	push	r14
    10ea:	0f 93       	push	r16
    10ec:	cf 93       	push	r28
    10ee:	e1 2c       	mov	r14, r1
    10f0:	0f e3       	ldi	r16, 0x3F	; 63
    10f2:	2f e7       	ldi	r18, 0x7F	; 127
    10f4:	40 e0       	ldi	r20, 0x00	; 0
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	84 e0       	ldi	r24, 0x04	; 4
    10fa:	91 e0       	ldi	r25, 0x01	; 1
    10fc:	0e 94 73 04 	call	0x8e6	; 0x8e6 <drawrect>
    1100:	40 e0       	ldi	r20, 0x00	; 0
    1102:	60 e2       	ldi	r22, 0x20	; 32
    1104:	84 e0       	ldi	r24, 0x04	; 4
    1106:	91 e0       	ldi	r25, 0x01	; 1
    1108:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    110c:	41 e0       	ldi	r20, 0x01	; 1
    110e:	60 e2       	ldi	r22, 0x20	; 32
    1110:	84 e0       	ldi	r24, 0x04	; 4
    1112:	91 e0       	ldi	r25, 0x01	; 1
    1114:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    1118:	c0 e0       	ldi	r28, 0x00	; 0
    111a:	03 e0       	ldi	r16, 0x03	; 3
    111c:	0c 0f       	add	r16, r28
    111e:	e1 2c       	mov	r14, r1
    1120:	2f e3       	ldi	r18, 0x3F	; 63
    1122:	4c 2f       	mov	r20, r28
    1124:	6f e3       	ldi	r22, 0x3F	; 63
    1126:	84 e0       	ldi	r24, 0x04	; 4
    1128:	91 e0       	ldi	r25, 0x01	; 1
    112a:	0e 94 28 07 	call	0xe50	; 0xe50 <drawline>
    112e:	ca 5f       	subi	r28, 0xFA	; 250
    1130:	c2 34       	cpi	r28, 0x42	; 66
    1132:	99 f7       	brne	.-26     	; 0x111a <drawbackground+0x32>
    1134:	00 e0       	ldi	r16, 0x00	; 0
    1136:	22 e0       	ldi	r18, 0x02	; 2
    1138:	40 e2       	ldi	r20, 0x20	; 32
    113a:	6f e3       	ldi	r22, 0x3F	; 63
    113c:	84 e0       	ldi	r24, 0x04	; 4
    113e:	91 e0       	ldi	r25, 0x01	; 1
    1140:	0e 94 40 05 	call	0xa80	; 0xa80 <fillcircle>
    1144:	cf 91       	pop	r28
    1146:	0f 91       	pop	r16
    1148:	ef 90       	pop	r14
    114a:	08 95       	ret

0000114c <clearpad>:
    114c:	af 92       	push	r10
    114e:	bf 92       	push	r11
    1150:	cf 92       	push	r12
    1152:	df 92       	push	r13
    1154:	ff 92       	push	r15
    1156:	0f 93       	push	r16
    1158:	1f 93       	push	r17
    115a:	cf 93       	push	r28
    115c:	df 93       	push	r29
    115e:	8c 01       	movw	r16, r24
    1160:	41 11       	cpse	r20, r1
    1162:	1b c0       	rjmp	.+54     	; 0x119a <clearpad+0x4e>
    1164:	ff 24       	eor	r15, r15
    1166:	f3 94       	inc	r15
    1168:	a6 2e       	mov	r10, r22
    116a:	b1 2c       	mov	r11, r1
    116c:	65 01       	movw	r12, r10
    116e:	85 e0       	ldi	r24, 0x05	; 5
    1170:	c8 0e       	add	r12, r24
    1172:	d1 1c       	adc	r13, r1
    1174:	e5 01       	movw	r28, r10
    1176:	25 97       	sbiw	r28, 0x05	; 5
    1178:	cc 16       	cp	r12, r28
    117a:	dd 06       	cpc	r13, r29
    117c:	4c f0       	brlt	.+18     	; 0x1190 <clearpad+0x44>
    117e:	4c 2f       	mov	r20, r28
    1180:	6f 2d       	mov	r22, r15
    1182:	c8 01       	movw	r24, r16
    1184:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
    1188:	21 96       	adiw	r28, 0x01	; 1
    118a:	cc 16       	cp	r12, r28
    118c:	dd 06       	cpc	r13, r29
    118e:	bc f7       	brge	.-18     	; 0x117e <clearpad+0x32>
    1190:	f3 94       	inc	r15
    1192:	83 e0       	ldi	r24, 0x03	; 3
    1194:	f8 12       	cpse	r15, r24
    1196:	ee cf       	rjmp	.-36     	; 0x1174 <clearpad+0x28>
    1198:	1c c0       	rjmp	.+56     	; 0x11d2 <clearpad+0x86>
    119a:	0f 2e       	mov	r0, r31
    119c:	fd e7       	ldi	r31, 0x7D	; 125
    119e:	ff 2e       	mov	r15, r31
    11a0:	f0 2d       	mov	r31, r0
    11a2:	a6 2e       	mov	r10, r22
    11a4:	b1 2c       	mov	r11, r1
    11a6:	65 01       	movw	r12, r10
    11a8:	85 e0       	ldi	r24, 0x05	; 5
    11aa:	c8 0e       	add	r12, r24
    11ac:	d1 1c       	adc	r13, r1
    11ae:	e5 01       	movw	r28, r10
    11b0:	25 97       	sbiw	r28, 0x05	; 5
    11b2:	cc 16       	cp	r12, r28
    11b4:	dd 06       	cpc	r13, r29
    11b6:	4c f0       	brlt	.+18     	; 0x11ca <clearpad+0x7e>
    11b8:	4c 2f       	mov	r20, r28
    11ba:	6f 2d       	mov	r22, r15
    11bc:	c8 01       	movw	r24, r16
    11be:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
    11c2:	21 96       	adiw	r28, 0x01	; 1
    11c4:	cc 16       	cp	r12, r28
    11c6:	dd 06       	cpc	r13, r29
    11c8:	bc f7       	brge	.-18     	; 0x11b8 <clearpad+0x6c>
    11ca:	f3 94       	inc	r15
    11cc:	8f e7       	ldi	r24, 0x7F	; 127
    11ce:	f8 12       	cpse	r15, r24
    11d0:	ee cf       	rjmp	.-36     	; 0x11ae <clearpad+0x62>
    11d2:	df 91       	pop	r29
    11d4:	cf 91       	pop	r28
    11d6:	1f 91       	pop	r17
    11d8:	0f 91       	pop	r16
    11da:	ff 90       	pop	r15
    11dc:	df 90       	pop	r13
    11de:	cf 90       	pop	r12
    11e0:	bf 90       	pop	r11
    11e2:	af 90       	pop	r10
    11e4:	08 95       	ret

000011e6 <movepad0>:
    11e6:	ef 92       	push	r14
    11e8:	ff 92       	push	r15
    11ea:	1f 93       	push	r17
    11ec:	cf 93       	push	r28
    11ee:	df 93       	push	r29
    11f0:	7c 01       	movw	r14, r24
    11f2:	d6 2f       	mov	r29, r22
    11f4:	c2 2f       	mov	r28, r18
    11f6:	41 50       	subi	r20, 0x01	; 1
    11f8:	11 e0       	ldi	r17, 0x01	; 1
    11fa:	4e 33       	cpi	r20, 0x3E	; 62
    11fc:	08 f0       	brcs	.+2      	; 0x1200 <movepad0+0x1a>
    11fe:	10 e0       	ldi	r17, 0x00	; 0
    1200:	91 e0       	ldi	r25, 0x01	; 1
    1202:	8f ef       	ldi	r24, 0xFF	; 255
    1204:	8c 0f       	add	r24, r28
    1206:	8f 31       	cpi	r24, 0x1F	; 31
    1208:	08 f0       	brcs	.+2      	; 0x120c <movepad0+0x26>
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	99 23       	and	r25, r25
    120e:	79 f0       	breq	.+30     	; 0x122e <movepad0+0x48>
    1210:	11 23       	and	r17, r17
    1212:	69 f0       	breq	.+26     	; 0x122e <movepad0+0x48>
    1214:	d7 30       	cpi	r29, 0x07	; 7
    1216:	58 f0       	brcs	.+22     	; 0x122e <movepad0+0x48>
    1218:	40 e0       	ldi	r20, 0x00	; 0
    121a:	6d 2f       	mov	r22, r29
    121c:	c7 01       	movw	r24, r14
    121e:	0e 94 a6 08 	call	0x114c	; 0x114c <clearpad>
    1222:	d1 50       	subi	r29, 0x01	; 1
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	6d 2f       	mov	r22, r29
    1228:	c7 01       	movw	r24, r14
    122a:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    122e:	c0 52       	subi	r28, 0x20	; 32
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	cf 31       	cpi	r28, 0x1F	; 31
    1234:	08 f0       	brcs	.+2      	; 0x1238 <movepad0+0x52>
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	88 23       	and	r24, r24
    123a:	79 f0       	breq	.+30     	; 0x125a <movepad0+0x74>
    123c:	11 23       	and	r17, r17
    123e:	69 f0       	breq	.+26     	; 0x125a <movepad0+0x74>
    1240:	d9 33       	cpi	r29, 0x39	; 57
    1242:	58 f4       	brcc	.+22     	; 0x125a <movepad0+0x74>
    1244:	40 e0       	ldi	r20, 0x00	; 0
    1246:	6d 2f       	mov	r22, r29
    1248:	c7 01       	movw	r24, r14
    124a:	0e 94 a6 08 	call	0x114c	; 0x114c <clearpad>
    124e:	df 5f       	subi	r29, 0xFF	; 255
    1250:	40 e0       	ldi	r20, 0x00	; 0
    1252:	6d 2f       	mov	r22, r29
    1254:	c7 01       	movw	r24, r14
    1256:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    125a:	8d 2f       	mov	r24, r29
    125c:	df 91       	pop	r29
    125e:	cf 91       	pop	r28
    1260:	1f 91       	pop	r17
    1262:	ff 90       	pop	r15
    1264:	ef 90       	pop	r14
    1266:	08 95       	ret

00001268 <movepad1>:
    1268:	ef 92       	push	r14
    126a:	ff 92       	push	r15
    126c:	1f 93       	push	r17
    126e:	cf 93       	push	r28
    1270:	df 93       	push	r29
    1272:	7c 01       	movw	r14, r24
    1274:	d6 2f       	mov	r29, r22
    1276:	c2 2f       	mov	r28, r18
    1278:	40 54       	subi	r20, 0x40	; 64
    127a:	11 e0       	ldi	r17, 0x01	; 1
    127c:	4f 33       	cpi	r20, 0x3F	; 63
    127e:	08 f0       	brcs	.+2      	; 0x1282 <movepad1+0x1a>
    1280:	10 e0       	ldi	r17, 0x00	; 0
    1282:	91 e0       	ldi	r25, 0x01	; 1
    1284:	8f ef       	ldi	r24, 0xFF	; 255
    1286:	8c 0f       	add	r24, r28
    1288:	8f 31       	cpi	r24, 0x1F	; 31
    128a:	08 f0       	brcs	.+2      	; 0x128e <movepad1+0x26>
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	99 23       	and	r25, r25
    1290:	79 f0       	breq	.+30     	; 0x12b0 <movepad1+0x48>
    1292:	11 23       	and	r17, r17
    1294:	69 f0       	breq	.+26     	; 0x12b0 <movepad1+0x48>
    1296:	d7 30       	cpi	r29, 0x07	; 7
    1298:	58 f0       	brcs	.+22     	; 0x12b0 <movepad1+0x48>
    129a:	41 e0       	ldi	r20, 0x01	; 1
    129c:	6d 2f       	mov	r22, r29
    129e:	c7 01       	movw	r24, r14
    12a0:	0e 94 a6 08 	call	0x114c	; 0x114c <clearpad>
    12a4:	d1 50       	subi	r29, 0x01	; 1
    12a6:	41 e0       	ldi	r20, 0x01	; 1
    12a8:	6d 2f       	mov	r22, r29
    12aa:	c7 01       	movw	r24, r14
    12ac:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    12b0:	c0 52       	subi	r28, 0x20	; 32
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	cf 31       	cpi	r28, 0x1F	; 31
    12b6:	08 f0       	brcs	.+2      	; 0x12ba <movepad1+0x52>
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	88 23       	and	r24, r24
    12bc:	79 f0       	breq	.+30     	; 0x12dc <movepad1+0x74>
    12be:	11 23       	and	r17, r17
    12c0:	69 f0       	breq	.+26     	; 0x12dc <movepad1+0x74>
    12c2:	d9 33       	cpi	r29, 0x39	; 57
    12c4:	58 f4       	brcc	.+22     	; 0x12dc <movepad1+0x74>
    12c6:	41 e0       	ldi	r20, 0x01	; 1
    12c8:	6d 2f       	mov	r22, r29
    12ca:	c7 01       	movw	r24, r14
    12cc:	0e 94 a6 08 	call	0x114c	; 0x114c <clearpad>
    12d0:	df 5f       	subi	r29, 0xFF	; 255
    12d2:	41 e0       	ldi	r20, 0x01	; 1
    12d4:	6d 2f       	mov	r22, r29
    12d6:	c7 01       	movw	r24, r14
    12d8:	0e 94 25 08 	call	0x104a	; 0x104a <drawpad>
    12dc:	8d 2f       	mov	r24, r29
    12de:	df 91       	pop	r29
    12e0:	cf 91       	pop	r28
    12e2:	1f 91       	pop	r17
    12e4:	ff 90       	pop	r15
    12e6:	ef 90       	pop	r14
    12e8:	08 95       	ret

000012ea <blink_purple>:
    12ea:	57 98       	cbi	0x0a, 7	; 10
    12ec:	5f 9a       	sbi	0x0b, 7	; 11
    12ee:	8b b1       	in	r24, 0x0b	; 11
    12f0:	8b b9       	out	0x0b, r24	; 11
    12f2:	20 98       	cbi	0x04, 0	; 4
    12f4:	28 9a       	sbi	0x05, 0	; 5
    12f6:	85 b1       	in	r24, 0x05	; 5
    12f8:	85 b9       	out	0x05, r24	; 5
    12fa:	57 9a       	sbi	0x0a, 7	; 10
    12fc:	5f 98       	cbi	0x0b, 7	; 11
    12fe:	8b b1       	in	r24, 0x0b	; 11
    1300:	8b b9       	out	0x0b, r24	; 11
    1302:	22 9a       	sbi	0x04, 2	; 4
    1304:	2a 98       	cbi	0x05, 2	; 5
    1306:	85 b1       	in	r24, 0x05	; 5
    1308:	85 b9       	out	0x05, r24	; 5
    130a:	2f ef       	ldi	r18, 0xFF	; 255
    130c:	81 ee       	ldi	r24, 0xE1	; 225
    130e:	94 e0       	ldi	r25, 0x04	; 4
    1310:	21 50       	subi	r18, 0x01	; 1
    1312:	80 40       	sbci	r24, 0x00	; 0
    1314:	90 40       	sbci	r25, 0x00	; 0
    1316:	e1 f7       	brne	.-8      	; 0x1310 <blink_purple+0x26>
    1318:	00 c0       	rjmp	.+0      	; 0x131a <blink_purple+0x30>
    131a:	00 00       	nop
    131c:	57 98       	cbi	0x0a, 7	; 10
    131e:	5f 9a       	sbi	0x0b, 7	; 11
    1320:	8b b1       	in	r24, 0x0b	; 11
    1322:	8b b9       	out	0x0b, r24	; 11
    1324:	22 98       	cbi	0x04, 2	; 4
    1326:	2a 9a       	sbi	0x05, 2	; 5
    1328:	85 b1       	in	r24, 0x05	; 5
    132a:	85 b9       	out	0x05, r24	; 5
    132c:	57 9a       	sbi	0x0a, 7	; 10
    132e:	5f 98       	cbi	0x0b, 7	; 11
    1330:	8b b1       	in	r24, 0x0b	; 11
    1332:	8b b9       	out	0x0b, r24	; 11
    1334:	20 9a       	sbi	0x04, 0	; 4
    1336:	28 98       	cbi	0x05, 0	; 5
    1338:	85 b1       	in	r24, 0x05	; 5
    133a:	85 b9       	out	0x05, r24	; 5
    133c:	08 95       	ret

0000133e <blink_white>:
    133e:	57 98       	cbi	0x0a, 7	; 10
    1340:	5f 9a       	sbi	0x0b, 7	; 11
    1342:	8b b1       	in	r24, 0x0b	; 11
    1344:	8b b9       	out	0x0b, r24	; 11
    1346:	20 98       	cbi	0x04, 0	; 4
    1348:	28 9a       	sbi	0x05, 0	; 5
    134a:	85 b1       	in	r24, 0x05	; 5
    134c:	85 b9       	out	0x05, r24	; 5
    134e:	57 9a       	sbi	0x0a, 7	; 10
    1350:	5f 98       	cbi	0x0b, 7	; 11
    1352:	8b b1       	in	r24, 0x0b	; 11
    1354:	8b b9       	out	0x0b, r24	; 11
    1356:	84 b1       	in	r24, 0x04	; 4
    1358:	85 60       	ori	r24, 0x05	; 5
    135a:	84 b9       	out	0x04, r24	; 4
    135c:	85 b1       	in	r24, 0x05	; 5
    135e:	8a 7f       	andi	r24, 0xFA	; 250
    1360:	85 b9       	out	0x05, r24	; 5
    1362:	85 b1       	in	r24, 0x05	; 5
    1364:	85 b9       	out	0x05, r24	; 5
    1366:	2f ef       	ldi	r18, 0xFF	; 255
    1368:	81 ee       	ldi	r24, 0xE1	; 225
    136a:	94 e0       	ldi	r25, 0x04	; 4
    136c:	21 50       	subi	r18, 0x01	; 1
    136e:	80 40       	sbci	r24, 0x00	; 0
    1370:	90 40       	sbci	r25, 0x00	; 0
    1372:	e1 f7       	brne	.-8      	; 0x136c <blink_white+0x2e>
    1374:	00 c0       	rjmp	.+0      	; 0x1376 <blink_white+0x38>
    1376:	00 00       	nop
    1378:	57 98       	cbi	0x0a, 7	; 10
    137a:	5f 9a       	sbi	0x0b, 7	; 11
    137c:	8b b1       	in	r24, 0x0b	; 11
    137e:	8b b9       	out	0x0b, r24	; 11
    1380:	84 b1       	in	r24, 0x04	; 4
    1382:	8a 7f       	andi	r24, 0xFA	; 250
    1384:	84 b9       	out	0x04, r24	; 4
    1386:	85 b1       	in	r24, 0x05	; 5
    1388:	85 60       	ori	r24, 0x05	; 5
    138a:	85 b9       	out	0x05, r24	; 5
    138c:	85 b1       	in	r24, 0x05	; 5
    138e:	85 b9       	out	0x05, r24	; 5
    1390:	57 9a       	sbi	0x0a, 7	; 10
    1392:	5f 98       	cbi	0x0b, 7	; 11
    1394:	8b b1       	in	r24, 0x0b	; 11
    1396:	8b b9       	out	0x0b, r24	; 11
    1398:	20 9a       	sbi	0x04, 0	; 4
    139a:	28 98       	cbi	0x05, 0	; 5
    139c:	85 b1       	in	r24, 0x05	; 5
    139e:	85 b9       	out	0x05, r24	; 5
    13a0:	08 95       	ret

000013a2 <record1>:
}

void record1(int count)
{
    13a2:	0f 93       	push	r16
    13a4:	1f 93       	push	r17
    13a6:	cf 93       	push	r28
    13a8:	df 93       	push	r29
    13aa:	8c 01       	movw	r16, r24
    13ac:	d9 e3       	ldi	r29, 0x39	; 57
    13ae:	0c c0       	rjmp	.+24     	; 0x13c8 <record1+0x26>
	int x,y;
	for( x=57;x<=62;x++)
	{
		for(y=8;y<=15;y++)
		{
			clearpixel(buff, x, y) ;
    13b0:	4c 2f       	mov	r20, r28
    13b2:	6d 2f       	mov	r22, r29
    13b4:	84 e0       	ldi	r24, 0x04	; 4
    13b6:	91 e0       	ldi	r25, 0x01	; 1
    13b8:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
    13bc:	cf 5f       	subi	r28, 0xFF	; 255
void record1(int count)
{
	int x,y;
	for( x=57;x<=62;x++)
	{
		for(y=8;y<=15;y++)
    13be:	c0 31       	cpi	r28, 0x10	; 16
    13c0:	b9 f7       	brne	.-18     	; 0x13b0 <record1+0xe>
    13c2:	df 5f       	subi	r29, 0xFF	; 255
}

void record1(int count)
{
	int x,y;
	for( x=57;x<=62;x++)
    13c4:	df 33       	cpi	r29, 0x3F	; 63
    13c6:	11 f0       	breq	.+4      	; 0x13cc <record1+0x2a>
	DDRD |= 0x80;PORTD &= ~0x80;PORTD |= 0x00;
	DDRB |= 0x01;PORTB &= ~0x01;PORTB |= 0x00;
}

void record1(int count)
{
    13c8:	c8 e0       	ldi	r28, 0x08	; 8
    13ca:	f2 cf       	rjmp	.-28     	; 0x13b0 <record1+0xe>
		{
			clearpixel(buff, x, y) ;
		}
	}

	switch(count)
    13cc:	01 30       	cpi	r16, 0x01	; 1
    13ce:	11 05       	cpc	r17, r1
    13d0:	71 f0       	breq	.+28     	; 0x13ee <record1+0x4c>
    13d2:	02 30       	cpi	r16, 0x02	; 2
    13d4:	11 05       	cpc	r17, r1
    13d6:	a1 f0       	breq	.+40     	; 0x1400 <record1+0x5e>
    13d8:	01 2b       	or	r16, r17
    13da:	d1 f4       	brne	.+52     	; 0x1410 <record1+0x6e>
	{
		case 0:
		drawstring(buff, 57, 1, "0");
    13dc:	26 e1       	ldi	r18, 0x16	; 22
    13de:	35 e0       	ldi	r19, 0x05	; 5
    13e0:	41 e0       	ldi	r20, 0x01	; 1
    13e2:	69 e3       	ldi	r22, 0x39	; 57
    13e4:	84 e0       	ldi	r24, 0x04	; 4
    13e6:	91 e0       	ldi	r25, 0x01	; 1
    13e8:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
    13ec:	11 c0       	rjmp	.+34     	; 0x1410 <record1+0x6e>
		case 1:
		drawstring(buff, 57, 1, "1");
    13ee:	28 e1       	ldi	r18, 0x18	; 24
    13f0:	35 e0       	ldi	r19, 0x05	; 5
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	69 e3       	ldi	r22, 0x39	; 57
    13f6:	84 e0       	ldi	r24, 0x04	; 4
    13f8:	91 e0       	ldi	r25, 0x01	; 1
    13fa:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
    13fe:	08 c0       	rjmp	.+16     	; 0x1410 <record1+0x6e>
		case 2:
		drawstring(buff, 57, 1, "2");
    1400:	2a e1       	ldi	r18, 0x1A	; 26
    1402:	35 e0       	ldi	r19, 0x05	; 5
    1404:	41 e0       	ldi	r20, 0x01	; 1
    1406:	69 e3       	ldi	r22, 0x39	; 57
    1408:	84 e0       	ldi	r24, 0x04	; 4
    140a:	91 e0       	ldi	r25, 0x01	; 1
    140c:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
	}
}
    1410:	df 91       	pop	r29
    1412:	cf 91       	pop	r28
    1414:	1f 91       	pop	r17
    1416:	0f 91       	pop	r16
    1418:	08 95       	ret

0000141a <record2>:
void record2(int count)
{
    141a:	0f 93       	push	r16
    141c:	1f 93       	push	r17
    141e:	cf 93       	push	r28
    1420:	df 93       	push	r29
    1422:	8c 01       	movw	r16, r24
    1424:	d1 e4       	ldi	r29, 0x41	; 65
    1426:	0c c0       	rjmp	.+24     	; 0x1440 <record2+0x26>
	int x,y;
	for( x=65;x<=70;x++)
	{
		for(y=8;y<=15;y++)
		{
			clearpixel(buff, x, y) ;
    1428:	4c 2f       	mov	r20, r28
    142a:	6d 2f       	mov	r22, r29
    142c:	84 e0       	ldi	r24, 0x04	; 4
    142e:	91 e0       	ldi	r25, 0x01	; 1
    1430:	0e 94 12 04 	call	0x824	; 0x824 <clearpixel>
    1434:	cf 5f       	subi	r28, 0xFF	; 255
void record2(int count)
{
	int x,y;
	for( x=65;x<=70;x++)
	{
		for(y=8;y<=15;y++)
    1436:	c0 31       	cpi	r28, 0x10	; 16
    1438:	b9 f7       	brne	.-18     	; 0x1428 <record2+0xe>
    143a:	df 5f       	subi	r29, 0xFF	; 255
	}
}
void record2(int count)
{
	int x,y;
	for( x=65;x<=70;x++)
    143c:	d7 34       	cpi	r29, 0x47	; 71
    143e:	11 f0       	breq	.+4      	; 0x1444 <record2+0x2a>
		drawstring(buff, 57, 1, "2");
		break;
	}
}
void record2(int count)
{
    1440:	c8 e0       	ldi	r28, 0x08	; 8
    1442:	f2 cf       	rjmp	.-28     	; 0x1428 <record2+0xe>
		{
			clearpixel(buff, x, y) ;
		}
	}

	switch(count)
    1444:	01 30       	cpi	r16, 0x01	; 1
    1446:	11 05       	cpc	r17, r1
    1448:	71 f0       	breq	.+28     	; 0x1466 <record2+0x4c>
    144a:	02 30       	cpi	r16, 0x02	; 2
    144c:	11 05       	cpc	r17, r1
    144e:	a1 f0       	breq	.+40     	; 0x1478 <record2+0x5e>
    1450:	01 2b       	or	r16, r17
    1452:	d1 f4       	brne	.+52     	; 0x1488 <record2+0x6e>
	{
		case 0:
		drawstring(buff, 65, 1, "0");
    1454:	26 e1       	ldi	r18, 0x16	; 22
    1456:	35 e0       	ldi	r19, 0x05	; 5
    1458:	41 e0       	ldi	r20, 0x01	; 1
    145a:	61 e4       	ldi	r22, 0x41	; 65
    145c:	84 e0       	ldi	r24, 0x04	; 4
    145e:	91 e0       	ldi	r25, 0x01	; 1
    1460:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
    1464:	11 c0       	rjmp	.+34     	; 0x1488 <record2+0x6e>
		case 1:
		drawstring(buff, 65, 1, "1");
    1466:	28 e1       	ldi	r18, 0x18	; 24
    1468:	35 e0       	ldi	r19, 0x05	; 5
    146a:	41 e0       	ldi	r20, 0x01	; 1
    146c:	61 e4       	ldi	r22, 0x41	; 65
    146e:	84 e0       	ldi	r24, 0x04	; 4
    1470:	91 e0       	ldi	r25, 0x01	; 1
    1472:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
    1476:	08 c0       	rjmp	.+16     	; 0x1488 <record2+0x6e>
		case 2:
		drawstring(buff, 65, 1, "2");
    1478:	2a e1       	ldi	r18, 0x1A	; 26
    147a:	35 e0       	ldi	r19, 0x05	; 5
    147c:	41 e0       	ldi	r20, 0x01	; 1
    147e:	61 e4       	ldi	r22, 0x41	; 65
    1480:	84 e0       	ldi	r24, 0x04	; 4
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		break;
	}
}
    1488:	df 91       	pop	r29
    148a:	cf 91       	pop	r28
    148c:	1f 91       	pop	r17
    148e:	0f 91       	pop	r16
    1490:	08 95       	ret

00001492 <detect>:
int count1 = 0,count2 = 0;
float slope;
int dr, kk;


void detect(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1,uint8_t color) {
    1492:	ef 92       	push	r14
    1494:	ff 92       	push	r15
    1496:	0f 93       	push	r16
    1498:	1f 93       	push	r17
    149a:	cf 93       	push	r28
    149c:	df 93       	push	r29
		
	if(abs(y1-y0)<=abs(x1-x0))
    149e:	10 e0       	ldi	r17, 0x00	; 0
    14a0:	50 e0       	ldi	r21, 0x00	; 0
    14a2:	f8 01       	movw	r30, r16
    14a4:	e4 1b       	sub	r30, r20
    14a6:	f5 0b       	sbc	r31, r21
    14a8:	cf 01       	movw	r24, r30
    14aa:	22 f4       	brpl	.+8      	; 0x14b4 <detect+0x22>
    14ac:	88 27       	eor	r24, r24
    14ae:	99 27       	eor	r25, r25
    14b0:	8e 1b       	sub	r24, r30
    14b2:	9f 0b       	sbc	r25, r31
    14b4:	e2 2e       	mov	r14, r18
    14b6:	f1 2c       	mov	r15, r1
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	97 01       	movw	r18, r14
    14bc:	26 1b       	sub	r18, r22
    14be:	37 0b       	sbc	r19, r23
    14c0:	e9 01       	movw	r28, r18
    14c2:	22 f4       	brpl	.+8      	; 0x14cc <detect+0x3a>
    14c4:	cc 27       	eor	r28, r28
    14c6:	dd 27       	eor	r29, r29
    14c8:	c2 1b       	sub	r28, r18
    14ca:	d3 0b       	sbc	r29, r19
    14cc:	c8 17       	cp	r28, r24
    14ce:	d9 07       	cpc	r29, r25
    14d0:	0c f4       	brge	.+2      	; 0x14d4 <detect+0x42>
    14d2:	c8 c0       	rjmp	.+400    	; 0x1664 <detect+0x1d2>
	{
		length = abs(x1-x0)+1;
    14d4:	cf 5f       	subi	r28, 0xFF	; 255
    14d6:	c0 93 7c 05 	sts	0x057C, r28	; 0x80057c <length>

		int m = 2 * abs(y0 - y1);
    14da:	ca 01       	movw	r24, r20
    14dc:	80 1b       	sub	r24, r16
    14de:	91 0b       	sbc	r25, r17
    14e0:	8c 01       	movw	r16, r24
    14e2:	ec 01       	movw	r28, r24
    14e4:	22 f4       	brpl	.+8      	; 0x14ee <detect+0x5c>
    14e6:	cc 27       	eor	r28, r28
    14e8:	dd 27       	eor	r29, r29
    14ea:	c8 1b       	sub	r28, r24
    14ec:	d9 0b       	sbc	r29, r25
    14ee:	cc 0f       	add	r28, r28
    14f0:	dd 1f       	adc	r29, r29
		int x = 0,y = y0;
		if((x1-x0)>=0)
    14f2:	33 23       	and	r19, r19
    14f4:	6c f1       	brlt	.+90     	; 0x1550 <detect+0xbe>
		{
			int i = 0;
			int slope_error = m - (x1 - x0);
    14f6:	ce 01       	movw	r24, r28
    14f8:	82 1b       	sub	r24, r18
    14fa:	93 0b       	sbc	r25, r19
			for ( x = x0; x <= x1; x++)
    14fc:	e6 16       	cp	r14, r22
    14fe:	f7 06       	cpc	r15, r23
    1500:	0c f4       	brge	.+2      	; 0x1504 <detect+0x72>
    1502:	bb c0       	rjmp	.+374    	; 0x167a <detect+0x1e8>
						if(y>60)
						{
							y = 60;
						}
					}
					slope_error  -= 2 * (x1 - x0);
    1504:	22 0f       	add	r18, r18
    1506:	33 1f       	adc	r19, r19
    1508:	a7 e1       	ldi	r26, 0x17	; 23
    150a:	b6 e0       	ldi	r27, 0x06	; 6
    150c:	ef e8       	ldi	r30, 0x8F	; 143
    150e:	f5 e0       	ldi	r31, 0x05	; 5
		{
			int i = 0;
			int slope_error = m - (x1 - x0);
			for ( x = x0; x <= x1; x++)
			{
				X[i] = x;
    1510:	6d 93       	st	X+, r22
				Y[i] = y;
    1512:	41 93       	st	Z+, r20
				i++;
				// Add slope to increment angle formed
				slope_error += m;
    1514:	8c 0f       	add	r24, r28
    1516:	9d 1f       	adc	r25, r29
				// Slope error reached limit, time to
				// increment y and update slope error.
				if (slope_error >= 0)
    1518:	99 23       	and	r25, r25
    151a:	a4 f0       	brlt	.+40     	; 0x1544 <detect+0xb2>
				{
					if(y0 - y1>0)
    151c:	10 16       	cp	r1, r16
    151e:	11 06       	cpc	r1, r17
    1520:	44 f4       	brge	.+16     	; 0x1532 <detect+0xa0>
					{
						y--;
    1522:	41 50       	subi	r20, 0x01	; 1
    1524:	51 09       	sbc	r21, r1
						if(y<3)
    1526:	43 30       	cpi	r20, 0x03	; 3
    1528:	51 05       	cpc	r21, r1
    152a:	54 f4       	brge	.+20     	; 0x1540 <detect+0xae>
						{
							y = 3;
    152c:	43 e0       	ldi	r20, 0x03	; 3
    152e:	50 e0       	ldi	r21, 0x00	; 0
    1530:	07 c0       	rjmp	.+14     	; 0x1540 <detect+0xae>
    1532:	4f 5f       	subi	r20, 0xFF	; 255
    1534:	5f 4f       	sbci	r21, 0xFF	; 255
    1536:	4d 33       	cpi	r20, 0x3D	; 61
    1538:	51 05       	cpc	r21, r1
    153a:	14 f0       	brlt	.+4      	; 0x1540 <detect+0xae>
    153c:	4c e3       	ldi	r20, 0x3C	; 60
    153e:	50 e0       	ldi	r21, 0x00	; 0
						if(y>60)
						{
							y = 60;
						}
					}
					slope_error  -= 2 * (x1 - x0);
    1540:	82 1b       	sub	r24, r18
    1542:	93 0b       	sbc	r25, r19
		int x = 0,y = y0;
		if((x1-x0)>=0)
		{
			int i = 0;
			int slope_error = m - (x1 - x0);
			for ( x = x0; x <= x1; x++)
    1544:	6f 5f       	subi	r22, 0xFF	; 255
    1546:	7f 4f       	sbci	r23, 0xFF	; 255
    1548:	e6 16       	cp	r14, r22
    154a:	f7 06       	cpc	r15, r23
    154c:	0c f7       	brge	.-62     	; 0x1510 <detect+0x7e>
    154e:	95 c0       	rjmp	.+298    	; 0x167a <detect+0x1e8>
		}
		
		else
		{
			int i = 0;
			int slope_error = m - (x0 - x1);
    1550:	9b 01       	movw	r18, r22
    1552:	2e 19       	sub	r18, r14
    1554:	3f 09       	sbc	r19, r15
    1556:	ce 01       	movw	r24, r28
    1558:	82 1b       	sub	r24, r18
    155a:	93 0b       	sbc	r25, r19
			for ( x = x0; x >= x1; x--)
    155c:	6e 15       	cp	r22, r14
    155e:	7f 05       	cpc	r23, r15
    1560:	0c f4       	brge	.+2      	; 0x1564 <detect+0xd2>
    1562:	8b c0       	rjmp	.+278    	; 0x167a <detect+0x1e8>
						if(y>60)
						{
							y = 60;
						}
					}
					slope_error  -= 2 * (x0 - x1);
    1564:	22 0f       	add	r18, r18
    1566:	33 1f       	adc	r19, r19
    1568:	a7 e1       	ldi	r26, 0x17	; 23
    156a:	b6 e0       	ldi	r27, 0x06	; 6
    156c:	ef e8       	ldi	r30, 0x8F	; 143
    156e:	f5 e0       	ldi	r31, 0x05	; 5
		{
			int i = 0;
			int slope_error = m - (x0 - x1);
			for ( x = x0; x >= x1; x--)
			{
				X[i] = x;
    1570:	6d 93       	st	X+, r22
				Y[i] = y;
    1572:	41 93       	st	Z+, r20
				i++;
				// Add slope to increment angle formed
				slope_error += m;
    1574:	8c 0f       	add	r24, r28
    1576:	9d 1f       	adc	r25, r29
				// Slope error reached limit, time to
				// increment y and update slope error.
				if (slope_error >= 0)
    1578:	99 23       	and	r25, r25
    157a:	a4 f0       	brlt	.+40     	; 0x15a4 <detect+0x112>
				{
					if(y0 - y1>0)
    157c:	10 16       	cp	r1, r16
    157e:	11 06       	cpc	r1, r17
    1580:	44 f4       	brge	.+16     	; 0x1592 <detect+0x100>
					{
						y--;
    1582:	41 50       	subi	r20, 0x01	; 1
    1584:	51 09       	sbc	r21, r1
						if(y<3)
    1586:	43 30       	cpi	r20, 0x03	; 3
    1588:	51 05       	cpc	r21, r1
    158a:	54 f4       	brge	.+20     	; 0x15a0 <detect+0x10e>
						{
							y = 3;
    158c:	43 e0       	ldi	r20, 0x03	; 3
    158e:	50 e0       	ldi	r21, 0x00	; 0
    1590:	07 c0       	rjmp	.+14     	; 0x15a0 <detect+0x10e>
    1592:	4f 5f       	subi	r20, 0xFF	; 255
    1594:	5f 4f       	sbci	r21, 0xFF	; 255
    1596:	4d 33       	cpi	r20, 0x3D	; 61
    1598:	51 05       	cpc	r21, r1
    159a:	14 f0       	brlt	.+4      	; 0x15a0 <detect+0x10e>
    159c:	4c e3       	ldi	r20, 0x3C	; 60
    159e:	50 e0       	ldi	r21, 0x00	; 0
						if(y>60)
						{
							y = 60;
						}
					}
					slope_error  -= 2 * (x0 - x1);
    15a0:	82 1b       	sub	r24, r18
    15a2:	93 0b       	sbc	r25, r19
		
		else
		{
			int i = 0;
			int slope_error = m - (x0 - x1);
			for ( x = x0; x >= x1; x--)
    15a4:	61 50       	subi	r22, 0x01	; 1
    15a6:	71 09       	sbc	r23, r1
    15a8:	6e 15       	cp	r22, r14
    15aa:	7f 05       	cpc	r23, r15
    15ac:	0c f7       	brge	.-62     	; 0x1570 <detect+0xde>
    15ae:	65 c0       	rjmp	.+202    	; 0x167a <detect+0x1e8>
		int m = 2 * abs(x1 - x0);
		int x = x0, y = y0;
		if((y0-y1)>=0)
		{
			int i = 0;
			int slope_error = m - (y0 - y1);
    15b0:	ce 01       	movw	r24, r28
    15b2:	8e 19       	sub	r24, r14
    15b4:	9f 09       	sbc	r25, r15
			for ( y = y0; y >= y1; y--)
    15b6:	40 17       	cp	r20, r16
    15b8:	51 07       	cpc	r21, r17
    15ba:	0c f4       	brge	.+2      	; 0x15be <detect+0x12c>
    15bc:	5e c0       	rjmp	.+188    	; 0x167a <detect+0x1e8>
						if(x<5)
						{
							x = 5;
						}
					}
					slope_error  -= 2 * (y0 - y1);
    15be:	ee 0c       	add	r14, r14
    15c0:	ff 1c       	adc	r15, r15
    15c2:	a7 e1       	ldi	r26, 0x17	; 23
    15c4:	b6 e0       	ldi	r27, 0x06	; 6
    15c6:	ef e8       	ldi	r30, 0x8F	; 143
    15c8:	f5 e0       	ldi	r31, 0x05	; 5
			int i = 0;
			int slope_error = m - (y0 - y1);
			for ( y = y0; y >= y1; y--)
			{
				
				X[i] = x;
    15ca:	6d 93       	st	X+, r22
				Y[i] = y;
    15cc:	41 93       	st	Z+, r20
				i++;
				//setpixel(buff,X[i],Y[i],0);
				// Add slope to increment angle formed
				slope_error += m;
    15ce:	8c 0f       	add	r24, r28
    15d0:	9d 1f       	adc	r25, r29
				// Slope error reached limit, time to
				// increment y and update slope error.
				if (slope_error >= 0)
    15d2:	99 23       	and	r25, r25
    15d4:	a4 f0       	brlt	.+40     	; 0x15fe <detect+0x16c>
				{
					if(x1 - x0>0)
    15d6:	12 16       	cp	r1, r18
    15d8:	13 06       	cpc	r1, r19
    15da:	44 f4       	brge	.+16     	; 0x15ec <detect+0x15a>
    15dc:	6f 5f       	subi	r22, 0xFF	; 255
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	6b 37       	cpi	r22, 0x7B	; 123
    15e2:	71 05       	cpc	r23, r1
    15e4:	54 f0       	brlt	.+20     	; 0x15fa <detect+0x168>
    15e6:	6a e7       	ldi	r22, 0x7A	; 122
    15e8:	70 e0       	ldi	r23, 0x00	; 0
    15ea:	07 c0       	rjmp	.+14     	; 0x15fa <detect+0x168>
							x = 122;
						}
					}
					else
					{
						x--;
    15ec:	61 50       	subi	r22, 0x01	; 1
    15ee:	71 09       	sbc	r23, r1
						if(x<5)
    15f0:	65 30       	cpi	r22, 0x05	; 5
    15f2:	71 05       	cpc	r23, r1
    15f4:	14 f4       	brge	.+4      	; 0x15fa <detect+0x168>
						{
							x = 5;
    15f6:	65 e0       	ldi	r22, 0x05	; 5
    15f8:	70 e0       	ldi	r23, 0x00	; 0
						}
					}
					slope_error  -= 2 * (y0 - y1);
    15fa:	8e 19       	sub	r24, r14
    15fc:	9f 09       	sbc	r25, r15
		int x = x0, y = y0;
		if((y0-y1)>=0)
		{
			int i = 0;
			int slope_error = m - (y0 - y1);
			for ( y = y0; y >= y1; y--)
    15fe:	41 50       	subi	r20, 0x01	; 1
    1600:	51 09       	sbc	r21, r1
    1602:	40 17       	cp	r20, r16
    1604:	51 07       	cpc	r21, r17
    1606:	0c f7       	brge	.-62     	; 0x15ca <detect+0x138>
    1608:	38 c0       	rjmp	.+112    	; 0x167a <detect+0x1e8>
			}
		}
		else
		{
			int i = 0;
			int slope_error = m - (y1 - y0);
    160a:	ce 01       	movw	r24, r28
    160c:	8e 1b       	sub	r24, r30
    160e:	9f 0b       	sbc	r25, r31
			for ( y = y0; y <= y1; y++)
    1610:	04 17       	cp	r16, r20
    1612:	15 07       	cpc	r17, r21
    1614:	94 f1       	brlt	.+100    	; 0x167a <detect+0x1e8>
						if(x<5)
						{
							x = 5;
						}
					}
					slope_error  -= 2 * (y1 - y0);
    1616:	7f 01       	movw	r14, r30
    1618:	ee 0c       	add	r14, r14
    161a:	ff 1c       	adc	r15, r15
    161c:	a7 e1       	ldi	r26, 0x17	; 23
    161e:	b6 e0       	ldi	r27, 0x06	; 6
    1620:	ef e8       	ldi	r30, 0x8F	; 143
    1622:	f5 e0       	ldi	r31, 0x05	; 5
			int i = 0;
			int slope_error = m - (y1 - y0);
			for ( y = y0; y <= y1; y++)
			{
				
				X[i] = x;
    1624:	6d 93       	st	X+, r22
				Y[i] = y;
    1626:	41 93       	st	Z+, r20
				i++;
				//setpixel(buff,X[i],Y[i],0);
				// Add slope to increment angle formed
				slope_error += m;
    1628:	8c 0f       	add	r24, r28
    162a:	9d 1f       	adc	r25, r29
				// Slope error reached limit, time to
				// increment y and update slope error.
				if (slope_error >= 0)
    162c:	99 23       	and	r25, r25
    162e:	a4 f0       	brlt	.+40     	; 0x1658 <detect+0x1c6>
				{
					if(x1 - x0>0)
    1630:	12 16       	cp	r1, r18
    1632:	13 06       	cpc	r1, r19
    1634:	44 f4       	brge	.+16     	; 0x1646 <detect+0x1b4>
    1636:	6f 5f       	subi	r22, 0xFF	; 255
    1638:	7f 4f       	sbci	r23, 0xFF	; 255
    163a:	6b 37       	cpi	r22, 0x7B	; 123
    163c:	71 05       	cpc	r23, r1
    163e:	54 f0       	brlt	.+20     	; 0x1654 <detect+0x1c2>
    1640:	6a e7       	ldi	r22, 0x7A	; 122
    1642:	70 e0       	ldi	r23, 0x00	; 0
    1644:	07 c0       	rjmp	.+14     	; 0x1654 <detect+0x1c2>
							x = 122;
						}
					}
					else
					{
						x--;
    1646:	61 50       	subi	r22, 0x01	; 1
    1648:	71 09       	sbc	r23, r1
						if(x<5)
    164a:	65 30       	cpi	r22, 0x05	; 5
    164c:	71 05       	cpc	r23, r1
    164e:	14 f4       	brge	.+4      	; 0x1654 <detect+0x1c2>
						{
							x = 5;
    1650:	65 e0       	ldi	r22, 0x05	; 5
    1652:	70 e0       	ldi	r23, 0x00	; 0
						}
					}
					slope_error  -= 2 * (y1 - y0);
    1654:	8e 19       	sub	r24, r14
    1656:	9f 09       	sbc	r25, r15
		}
		else
		{
			int i = 0;
			int slope_error = m - (y1 - y0);
			for ( y = y0; y <= y1; y++)
    1658:	4f 5f       	subi	r20, 0xFF	; 255
    165a:	5f 4f       	sbci	r21, 0xFF	; 255
    165c:	04 17       	cp	r16, r20
    165e:	15 07       	cpc	r17, r21
    1660:	0c f7       	brge	.-62     	; 0x1624 <detect+0x192>
    1662:	0b c0       	rjmp	.+22     	; 0x167a <detect+0x1e8>
		
	}
	
	if(abs(y1-y0)>abs(x1-x0))
	{
		length = abs(y1-y0)+1;
    1664:	8f 5f       	subi	r24, 0xFF	; 255
    1666:	80 93 7c 05 	sts	0x057C, r24	; 0x80057c <length>
		int m = 2 * abs(x1 - x0);
    166a:	cc 0f       	add	r28, r28
    166c:	dd 1f       	adc	r29, r29
		int x = x0, y = y0;
		if((y0-y1)>=0)
    166e:	7a 01       	movw	r14, r20
    1670:	e0 1a       	sub	r14, r16
    1672:	f1 0a       	sbc	r15, r17
    1674:	0a f0       	brmi	.+2      	; 0x1678 <detect+0x1e6>
    1676:	9c cf       	rjmp	.-200    	; 0x15b0 <detect+0x11e>
    1678:	c8 cf       	rjmp	.-112    	; 0x160a <detect+0x178>
					slope_error  -= 2 * (y1 - y0);
				}
			}
		}
	}
}
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	1f 91       	pop	r17
    1680:	0f 91       	pop	r16
    1682:	ff 90       	pop	r15
    1684:	ef 90       	pop	r14
    1686:	08 95       	ret

00001688 <path_algorithm>:

uint8_t  path_algorithm(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t dir,float k)
{
    1688:	2f 92       	push	r2
    168a:	3f 92       	push	r3
    168c:	4f 92       	push	r4
    168e:	5f 92       	push	r5
    1690:	6f 92       	push	r6
    1692:	7f 92       	push	r7
    1694:	8f 92       	push	r8
    1696:	9f 92       	push	r9
    1698:	af 92       	push	r10
    169a:	bf 92       	push	r11
    169c:	cf 92       	push	r12
    169e:	df 92       	push	r13
    16a0:	ef 92       	push	r14
    16a2:	ff 92       	push	r15
    16a4:	0f 93       	push	r16
    16a6:	1f 93       	push	r17
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	cd b7       	in	r28, 0x3d	; 61
    16ae:	de b7       	in	r29, 0x3e	; 62
    16b0:	2c 97       	sbiw	r28, 0x0c	; 12
    16b2:	0f b6       	in	r0, 0x3f	; 63
    16b4:	f8 94       	cli
    16b6:	de bf       	out	0x3e, r29	; 62
    16b8:	0f be       	out	0x3f, r0	; 63
    16ba:	cd bf       	out	0x3d, r28	; 61
    16bc:	9f 83       	std	Y+7, r25	; 0x07
    16be:	8e 83       	std	Y+6, r24	; 0x06
    16c0:	26 2e       	mov	r2, r22
    16c2:	49 83       	std	Y+1, r20	; 0x01
    16c4:	30 2e       	mov	r3, r16
    16c6:	46 01       	movw	r8, r12
    16c8:	57 01       	movw	r10, r14
	memset(X,0,128*sizeof(uint8_t));
    16ca:	80 e8       	ldi	r24, 0x80	; 128
    16cc:	e7 e1       	ldi	r30, 0x17	; 23
    16ce:	f6 e0       	ldi	r31, 0x06	; 6
    16d0:	df 01       	movw	r26, r30
    16d2:	28 2f       	mov	r18, r24
    16d4:	1d 92       	st	X+, r1
    16d6:	2a 95       	dec	r18
    16d8:	e9 f7       	brne	.-6      	; 0x16d4 <path_algorithm+0x4c>
	memset(Y,0,128*sizeof(uint8_t));
    16da:	ef e8       	ldi	r30, 0x8F	; 143
    16dc:	f5 e0       	ldi	r31, 0x05	; 5
    16de:	df 01       	movw	r26, r30
    16e0:	1d 92       	st	X+, r1
    16e2:	8a 95       	dec	r24
    16e4:	e9 f7       	brne	.-6      	; 0x16e0 <path_algorithm+0x58>
	//Initial points and Final Points
	
	if (x0 == 122 || x0 == 5)
    16e6:	ba e7       	ldi	r27, 0x7A	; 122
    16e8:	6b 17       	cp	r22, r27
    16ea:	19 f0       	breq	.+6      	; 0x16f2 <path_algorithm+0x6a>
    16ec:	e5 e0       	ldi	r30, 0x05	; 5
    16ee:	6e 13       	cpse	r22, r30
    16f0:	08 c0       	rjmp	.+16     	; 0x1702 <path_algorithm+0x7a>
	{
		dir = !dir;
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	31 10       	cpse	r3, r1
    16f6:	80 e0       	ldi	r24, 0x00	; 0
    16f8:	38 2e       	mov	r3, r24
		k = -k;			
    16fa:	b7 fa       	bst	r11, 7
    16fc:	b0 94       	com	r11
    16fe:	b7 f8       	bld	r11, 7
    1700:	b0 94       	com	r11
	}
	
	if (y0 == 60 || y0 == 3)
    1702:	f9 81       	ldd	r31, Y+1	; 0x01
    1704:	fc 33       	cpi	r31, 0x3C	; 60
    1706:	11 f0       	breq	.+4      	; 0x170c <path_algorithm+0x84>
    1708:	f3 30       	cpi	r31, 0x03	; 3
    170a:	21 f4       	brne	.+8      	; 0x1714 <path_algorithm+0x8c>
	{
		k = -k;	
    170c:	b7 fa       	bst	r11, 7
    170e:	b0 94       	com	r11
    1710:	b7 f8       	bld	r11, 7
    1712:	b0 94       	com	r11
	uint8_t sphere_y = 0;
	uint8_t sphere_x = 0;
	
	
	
	if ((dir == 0)&(k<=0))
    1714:	cc 24       	eor	r12, r12
    1716:	c3 94       	inc	r12
    1718:	31 10       	cpse	r3, r1
    171a:	c1 2c       	mov	r12, r1
    171c:	dd 24       	eor	r13, r13
    171e:	d3 94       	inc	r13
    1720:	20 e0       	ldi	r18, 0x00	; 0
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	a9 01       	movw	r20, r18
    1726:	c5 01       	movw	r24, r10
    1728:	b4 01       	movw	r22, r8
    172a:	0e 94 3e 14 	call	0x287c	; 0x287c <__cmpsf2>
    172e:	18 16       	cp	r1, r24
    1730:	0c f4       	brge	.+2      	; 0x1734 <path_algorithm+0xac>
    1732:	d1 2c       	mov	r13, r1
    1734:	cc 20       	and	r12, r12
    1736:	09 f4       	brne	.+2      	; 0x173a <path_algorithm+0xb2>
    1738:	8a c0       	rjmp	.+276    	; 0x184e <path_algorithm+0x1c6>
    173a:	dd 20       	and	r13, r13
    173c:	09 f4       	brne	.+2      	; 0x1740 <path_algorithm+0xb8>
    173e:	87 c0       	rjmp	.+270    	; 0x184e <path_algorithm+0x1c6>
	{
		float temp=(float)(y0-60)/(x0-122);
    1740:	29 81       	ldd	r18, Y+1	; 0x01
    1742:	02 2f       	mov	r16, r18
    1744:	10 e0       	ldi	r17, 0x00	; 0
    1746:	b8 01       	movw	r22, r16
    1748:	6c 53       	subi	r22, 0x3C	; 60
    174a:	71 09       	sbc	r23, r1
    174c:	07 2e       	mov	r0, r23
    174e:	00 0c       	add	r0, r0
    1750:	88 0b       	sbc	r24, r24
    1752:	99 0b       	sbc	r25, r25
    1754:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1758:	2b 01       	movw	r4, r22
    175a:	3c 01       	movw	r6, r24
    175c:	82 2d       	mov	r24, r2
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	9b 83       	std	Y+3, r25	; 0x03
    1762:	8a 83       	std	Y+2, r24	; 0x02
		if(abs(k*100)<=abs(temp*100))
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	48 ec       	ldi	r20, 0xC8	; 200
    176a:	52 e4       	ldi	r21, 0x42	; 66
    176c:	c5 01       	movw	r24, r10
    176e:	b4 01       	movw	r22, r8
    1770:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1774:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    1778:	7b 01       	movw	r14, r22
    177a:	77 23       	and	r23, r23
    177c:	24 f4       	brge	.+8      	; 0x1786 <path_algorithm+0xfe>
    177e:	ee 24       	eor	r14, r14
    1780:	ff 24       	eor	r15, r15
    1782:	e6 1a       	sub	r14, r22
    1784:	f7 0a       	sbc	r15, r23
    1786:	6a 81       	ldd	r22, Y+2	; 0x02
    1788:	7b 81       	ldd	r23, Y+3	; 0x03
    178a:	6a 57       	subi	r22, 0x7A	; 122
    178c:	71 09       	sbc	r23, r1
    178e:	07 2e       	mov	r0, r23
    1790:	00 0c       	add	r0, r0
    1792:	88 0b       	sbc	r24, r24
    1794:	99 0b       	sbc	r25, r25
    1796:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    179a:	9b 01       	movw	r18, r22
    179c:	ac 01       	movw	r20, r24
    179e:	c3 01       	movw	r24, r6
    17a0:	b2 01       	movw	r22, r4
    17a2:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	48 ec       	ldi	r20, 0xC8	; 200
    17ac:	52 e4       	ldi	r21, 0x42	; 66
    17ae:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    17b2:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    17b6:	9b 01       	movw	r18, r22
    17b8:	77 23       	and	r23, r23
    17ba:	24 f4       	brge	.+8      	; 0x17c4 <path_algorithm+0x13c>
    17bc:	22 27       	eor	r18, r18
    17be:	33 27       	eor	r19, r19
    17c0:	26 1b       	sub	r18, r22
    17c2:	37 0b       	sbc	r19, r23
    17c4:	2e 15       	cp	r18, r14
    17c6:	3f 05       	cpc	r19, r15
    17c8:	24 f1       	brlt	.+72     	; 0x1812 <path_algorithm+0x18a>
		{
			sphere_x = 122;		
			sphere_y = -k*(122-x0)+y0;
    17ca:	6a e7       	ldi	r22, 0x7A	; 122
    17cc:	70 e0       	ldi	r23, 0x00	; 0
    17ce:	aa 81       	ldd	r26, Y+2	; 0x02
    17d0:	bb 81       	ldd	r27, Y+3	; 0x03
    17d2:	6a 1b       	sub	r22, r26
    17d4:	7b 0b       	sbc	r23, r27
    17d6:	07 2e       	mov	r0, r23
    17d8:	00 0c       	add	r0, r0
    17da:	88 0b       	sbc	r24, r24
    17dc:	99 0b       	sbc	r25, r25
    17de:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    17e2:	a5 01       	movw	r20, r10
    17e4:	94 01       	movw	r18, r8
    17e6:	50 58       	subi	r21, 0x80	; 128
    17e8:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    17ec:	2b 01       	movw	r4, r22
    17ee:	3c 01       	movw	r6, r24
    17f0:	b8 01       	movw	r22, r16
    17f2:	11 0f       	add	r17, r17
    17f4:	88 0b       	sbc	r24, r24
    17f6:	99 0b       	sbc	r25, r25
    17f8:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    17fc:	9b 01       	movw	r18, r22
    17fe:	ac 01       	movw	r20, r24
    1800:	c3 01       	movw	r24, r6
    1802:	b2 01       	movw	r22, r4
    1804:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1808:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    180c:	f6 2e       	mov	r15, r22
	if ((dir == 0)&(k<=0))
	{
		float temp=(float)(y0-60)/(x0-122);
		if(abs(k*100)<=abs(temp*100))
		{
			sphere_x = 122;		
    180e:	1a e7       	ldi	r17, 0x7A	; 122
    1810:	20 c0       	rjmp	.+64     	; 0x1852 <path_algorithm+0x1ca>
			sphere_y = -k*(122-x0)+y0;
		}
		else
		{
			sphere_x = (y0-60)/k+x0;
    1812:	a5 01       	movw	r20, r10
    1814:	94 01       	movw	r18, r8
    1816:	c3 01       	movw	r24, r6
    1818:	b2 01       	movw	r22, r4
    181a:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    181e:	2b 01       	movw	r4, r22
    1820:	3c 01       	movw	r6, r24
    1822:	ea 81       	ldd	r30, Y+2	; 0x02
    1824:	fb 81       	ldd	r31, Y+3	; 0x03
    1826:	bf 01       	movw	r22, r30
    1828:	ff 0f       	add	r31, r31
    182a:	88 0b       	sbc	r24, r24
    182c:	99 0b       	sbc	r25, r25
    182e:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1832:	9b 01       	movw	r18, r22
    1834:	ac 01       	movw	r20, r24
    1836:	c3 01       	movw	r24, r6
    1838:	b2 01       	movw	r22, r4
    183a:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    183e:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1842:	16 2f       	mov	r17, r22
			sphere_y = 60;
    1844:	0f 2e       	mov	r0, r31
    1846:	fc e3       	ldi	r31, 0x3C	; 60
    1848:	ff 2e       	mov	r15, r31
    184a:	f0 2d       	mov	r31, r0
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <path_algorithm+0x1ca>
	{
		k = -k;	
	}
	
	uint8_t sphere_y = 0;
	uint8_t sphere_x = 0;
    184e:	10 e0       	ldi	r17, 0x00	; 0
	if (y0 == 60 || y0 == 3)
	{
		k = -k;	
	}
	
	uint8_t sphere_y = 0;
    1850:	f1 2c       	mov	r15, r1
		{
			sphere_x = (y0-60)/k+x0;
			sphere_y = 60;
		}
	}
	if ((dir == 0)&(k>0))
    1852:	77 24       	eor	r7, r7
    1854:	73 94       	inc	r7
    1856:	20 e0       	ldi	r18, 0x00	; 0
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	a9 01       	movw	r20, r18
    185c:	c5 01       	movw	r24, r10
    185e:	b4 01       	movw	r22, r8
    1860:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <__gesf2>
    1864:	18 16       	cp	r1, r24
    1866:	0c f0       	brlt	.+2      	; 0x186a <path_algorithm+0x1e2>
    1868:	71 2c       	mov	r7, r1
    186a:	cc 20       	and	r12, r12
    186c:	09 f4       	brne	.+2      	; 0x1870 <path_algorithm+0x1e8>
    186e:	97 c0       	rjmp	.+302    	; 0x199e <path_algorithm+0x316>
    1870:	77 20       	and	r7, r7
    1872:	09 f4       	brne	.+2      	; 0x1876 <path_algorithm+0x1ee>
    1874:	94 c0       	rjmp	.+296    	; 0x199e <path_algorithm+0x316>
	{
		float temp=(float)(y0-3)/(x0-122);
    1876:	f9 81       	ldd	r31, Y+1	; 0x01
    1878:	0f 2f       	mov	r16, r31
    187a:	10 e0       	ldi	r17, 0x00	; 0
    187c:	b8 01       	movw	r22, r16
    187e:	63 50       	subi	r22, 0x03	; 3
    1880:	71 09       	sbc	r23, r1
    1882:	07 2e       	mov	r0, r23
    1884:	00 0c       	add	r0, r0
    1886:	88 0b       	sbc	r24, r24
    1888:	99 0b       	sbc	r25, r25
    188a:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    188e:	6a 83       	std	Y+2, r22	; 0x02
    1890:	7b 83       	std	Y+3, r23	; 0x03
    1892:	8c 83       	std	Y+4, r24	; 0x04
    1894:	9d 83       	std	Y+5, r25	; 0x05
    1896:	22 2d       	mov	r18, r2
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	39 87       	std	Y+9, r19	; 0x09
    189c:	28 87       	std	Y+8, r18	; 0x08
		if(abs(k*100)<=abs(temp*100))
    189e:	20 e0       	ldi	r18, 0x00	; 0
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	48 ec       	ldi	r20, 0xC8	; 200
    18a4:	52 e4       	ldi	r21, 0x42	; 66
    18a6:	c5 01       	movw	r24, r10
    18a8:	b4 01       	movw	r22, r8
    18aa:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    18ae:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    18b2:	7b 01       	movw	r14, r22
    18b4:	77 23       	and	r23, r23
    18b6:	24 f4       	brge	.+8      	; 0x18c0 <path_algorithm+0x238>
    18b8:	ee 24       	eor	r14, r14
    18ba:	ff 24       	eor	r15, r15
    18bc:	e6 1a       	sub	r14, r22
    18be:	f7 0a       	sbc	r15, r23
    18c0:	68 85       	ldd	r22, Y+8	; 0x08
    18c2:	79 85       	ldd	r23, Y+9	; 0x09
    18c4:	6a 57       	subi	r22, 0x7A	; 122
    18c6:	71 09       	sbc	r23, r1
    18c8:	07 2e       	mov	r0, r23
    18ca:	00 0c       	add	r0, r0
    18cc:	88 0b       	sbc	r24, r24
    18ce:	99 0b       	sbc	r25, r25
    18d0:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    18d4:	9b 01       	movw	r18, r22
    18d6:	ac 01       	movw	r20, r24
    18d8:	6a 81       	ldd	r22, Y+2	; 0x02
    18da:	7b 81       	ldd	r23, Y+3	; 0x03
    18dc:	8c 81       	ldd	r24, Y+4	; 0x04
    18de:	9d 81       	ldd	r25, Y+5	; 0x05
    18e0:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	48 ec       	ldi	r20, 0xC8	; 200
    18ea:	52 e4       	ldi	r21, 0x42	; 66
    18ec:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    18f0:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    18f4:	9b 01       	movw	r18, r22
    18f6:	77 23       	and	r23, r23
    18f8:	24 f4       	brge	.+8      	; 0x1902 <path_algorithm+0x27a>
    18fa:	22 27       	eor	r18, r18
    18fc:	33 27       	eor	r19, r19
    18fe:	26 1b       	sub	r18, r22
    1900:	37 0b       	sbc	r19, r23
    1902:	2e 15       	cp	r18, r14
    1904:	3f 05       	cpc	r19, r15
    1906:	44 f1       	brlt	.+80     	; 0x1958 <path_algorithm+0x2d0>
		{
			sphere_x = 122;
			sphere_y = -k*(122-x0)+y0;
    1908:	6a e7       	ldi	r22, 0x7A	; 122
    190a:	70 e0       	ldi	r23, 0x00	; 0
    190c:	88 85       	ldd	r24, Y+8	; 0x08
    190e:	99 85       	ldd	r25, Y+9	; 0x09
    1910:	68 1b       	sub	r22, r24
    1912:	79 0b       	sbc	r23, r25
    1914:	07 2e       	mov	r0, r23
    1916:	00 0c       	add	r0, r0
    1918:	88 0b       	sbc	r24, r24
    191a:	99 0b       	sbc	r25, r25
    191c:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1920:	a5 01       	movw	r20, r10
    1922:	94 01       	movw	r18, r8
    1924:	50 58       	subi	r21, 0x80	; 128
    1926:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    192a:	6a 83       	std	Y+2, r22	; 0x02
    192c:	7b 83       	std	Y+3, r23	; 0x03
    192e:	8c 83       	std	Y+4, r24	; 0x04
    1930:	9d 83       	std	Y+5, r25	; 0x05
    1932:	b8 01       	movw	r22, r16
    1934:	11 0f       	add	r17, r17
    1936:	88 0b       	sbc	r24, r24
    1938:	99 0b       	sbc	r25, r25
    193a:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    193e:	9b 01       	movw	r18, r22
    1940:	ac 01       	movw	r20, r24
    1942:	6a 81       	ldd	r22, Y+2	; 0x02
    1944:	7b 81       	ldd	r23, Y+3	; 0x03
    1946:	8c 81       	ldd	r24, Y+4	; 0x04
    1948:	9d 81       	ldd	r25, Y+5	; 0x05
    194a:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    194e:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1952:	f6 2e       	mov	r15, r22
	if ((dir == 0)&(k>0))
	{
		float temp=(float)(y0-3)/(x0-122);
		if(abs(k*100)<=abs(temp*100))
		{
			sphere_x = 122;
    1954:	1a e7       	ldi	r17, 0x7A	; 122
    1956:	23 c0       	rjmp	.+70     	; 0x199e <path_algorithm+0x316>
			sphere_y = -k*(122-x0)+y0;
		}
		else
		{
			sphere_x = (y0-3)/k+x0;
    1958:	a5 01       	movw	r20, r10
    195a:	94 01       	movw	r18, r8
    195c:	6a 81       	ldd	r22, Y+2	; 0x02
    195e:	7b 81       	ldd	r23, Y+3	; 0x03
    1960:	8c 81       	ldd	r24, Y+4	; 0x04
    1962:	9d 81       	ldd	r25, Y+5	; 0x05
    1964:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1968:	6a 83       	std	Y+2, r22	; 0x02
    196a:	7b 83       	std	Y+3, r23	; 0x03
    196c:	8c 83       	std	Y+4, r24	; 0x04
    196e:	9d 83       	std	Y+5, r25	; 0x05
    1970:	a8 85       	ldd	r26, Y+8	; 0x08
    1972:	b9 85       	ldd	r27, Y+9	; 0x09
    1974:	bd 01       	movw	r22, r26
    1976:	bb 0f       	add	r27, r27
    1978:	88 0b       	sbc	r24, r24
    197a:	99 0b       	sbc	r25, r25
    197c:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1980:	9b 01       	movw	r18, r22
    1982:	ac 01       	movw	r20, r24
    1984:	6a 81       	ldd	r22, Y+2	; 0x02
    1986:	7b 81       	ldd	r23, Y+3	; 0x03
    1988:	8c 81       	ldd	r24, Y+4	; 0x04
    198a:	9d 81       	ldd	r25, Y+5	; 0x05
    198c:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1990:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1994:	16 2f       	mov	r17, r22
			sphere_y = 3;
    1996:	0f 2e       	mov	r0, r31
    1998:	f3 e0       	ldi	r31, 0x03	; 3
    199a:	ff 2e       	mov	r15, r31
    199c:	f0 2d       	mov	r31, r0
		}
	}

	if ((dir == 1)&(k<=0))
    199e:	b1 e0       	ldi	r27, 0x01	; 1
    19a0:	bc 87       	std	Y+12, r27	; 0x0c
    19a2:	3b 12       	cpse	r3, r27
    19a4:	1c 86       	std	Y+12, r1	; 0x0c
    19a6:	dd 20       	and	r13, r13
    19a8:	09 f4       	brne	.+2      	; 0x19ac <path_algorithm+0x324>
    19aa:	8c c0       	rjmp	.+280    	; 0x1ac4 <path_algorithm+0x43c>
    19ac:	ec 85       	ldd	r30, Y+12	; 0x0c
    19ae:	ee 23       	and	r30, r30
    19b0:	09 f4       	brne	.+2      	; 0x19b4 <path_algorithm+0x32c>
    19b2:	88 c0       	rjmp	.+272    	; 0x1ac4 <path_algorithm+0x43c>
	{
		float temp=(float)(y0-3)/(x0-5);
    19b4:	f9 81       	ldd	r31, Y+1	; 0x01
    19b6:	ef 2e       	mov	r14, r31
    19b8:	f1 2c       	mov	r15, r1
    19ba:	b7 01       	movw	r22, r14
    19bc:	63 50       	subi	r22, 0x03	; 3
    19be:	71 09       	sbc	r23, r1
    19c0:	07 2e       	mov	r0, r23
    19c2:	00 0c       	add	r0, r0
    19c4:	88 0b       	sbc	r24, r24
    19c6:	99 0b       	sbc	r25, r25
    19c8:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    19cc:	6a 83       	std	Y+2, r22	; 0x02
    19ce:	7b 83       	std	Y+3, r23	; 0x03
    19d0:	8c 83       	std	Y+4, r24	; 0x04
    19d2:	9d 83       	std	Y+5, r25	; 0x05
    19d4:	42 2c       	mov	r4, r2
    19d6:	51 2c       	mov	r5, r1
    19d8:	b2 01       	movw	r22, r4
    19da:	65 50       	subi	r22, 0x05	; 5
    19dc:	71 09       	sbc	r23, r1
    19de:	07 2e       	mov	r0, r23
    19e0:	00 0c       	add	r0, r0
    19e2:	88 0b       	sbc	r24, r24
    19e4:	99 0b       	sbc	r25, r25
    19e6:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    19ea:	68 87       	std	Y+8, r22	; 0x08
    19ec:	79 87       	std	Y+9, r23	; 0x09
    19ee:	8a 87       	std	Y+10, r24	; 0x0a
    19f0:	9b 87       	std	Y+11, r25	; 0x0b
		if(abs(k*100)<=abs(temp*100))
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	30 e0       	ldi	r19, 0x00	; 0
    19f6:	48 ec       	ldi	r20, 0xC8	; 200
    19f8:	52 e4       	ldi	r21, 0x42	; 66
    19fa:	c5 01       	movw	r24, r10
    19fc:	b4 01       	movw	r22, r8
    19fe:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1a02:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    1a06:	8b 01       	movw	r16, r22
    1a08:	77 23       	and	r23, r23
    1a0a:	24 f4       	brge	.+8      	; 0x1a14 <path_algorithm+0x38c>
    1a0c:	00 27       	eor	r16, r16
    1a0e:	11 27       	eor	r17, r17
    1a10:	06 1b       	sub	r16, r22
    1a12:	17 0b       	sbc	r17, r23
    1a14:	28 85       	ldd	r18, Y+8	; 0x08
    1a16:	39 85       	ldd	r19, Y+9	; 0x09
    1a18:	4a 85       	ldd	r20, Y+10	; 0x0a
    1a1a:	5b 85       	ldd	r21, Y+11	; 0x0b
    1a1c:	6a 81       	ldd	r22, Y+2	; 0x02
    1a1e:	7b 81       	ldd	r23, Y+3	; 0x03
    1a20:	8c 81       	ldd	r24, Y+4	; 0x04
    1a22:	9d 81       	ldd	r25, Y+5	; 0x05
    1a24:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1a28:	20 e0       	ldi	r18, 0x00	; 0
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	48 ec       	ldi	r20, 0xC8	; 200
    1a2e:	52 e4       	ldi	r21, 0x42	; 66
    1a30:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1a34:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    1a38:	9b 01       	movw	r18, r22
    1a3a:	77 23       	and	r23, r23
    1a3c:	24 f4       	brge	.+8      	; 0x1a46 <path_algorithm+0x3be>
    1a3e:	22 27       	eor	r18, r18
    1a40:	33 27       	eor	r19, r19
    1a42:	26 1b       	sub	r18, r22
    1a44:	37 0b       	sbc	r19, r23
    1a46:	20 17       	cp	r18, r16
    1a48:	31 07       	cpc	r19, r17
    1a4a:	fc f0       	brlt	.+62     	; 0x1a8a <path_algorithm+0x402>
		{
			sphere_x = 5;
			sphere_y = k*(x0-5)+y0;
    1a4c:	28 85       	ldd	r18, Y+8	; 0x08
    1a4e:	39 85       	ldd	r19, Y+9	; 0x09
    1a50:	4a 85       	ldd	r20, Y+10	; 0x0a
    1a52:	5b 85       	ldd	r21, Y+11	; 0x0b
    1a54:	c5 01       	movw	r24, r10
    1a56:	b4 01       	movw	r22, r8
    1a58:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1a5c:	6a 83       	std	Y+2, r22	; 0x02
    1a5e:	7b 83       	std	Y+3, r23	; 0x03
    1a60:	8c 83       	std	Y+4, r24	; 0x04
    1a62:	9d 83       	std	Y+5, r25	; 0x05
    1a64:	b7 01       	movw	r22, r14
    1a66:	ff 0c       	add	r15, r15
    1a68:	88 0b       	sbc	r24, r24
    1a6a:	99 0b       	sbc	r25, r25
    1a6c:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1a70:	9b 01       	movw	r18, r22
    1a72:	ac 01       	movw	r20, r24
    1a74:	6a 81       	ldd	r22, Y+2	; 0x02
    1a76:	7b 81       	ldd	r23, Y+3	; 0x03
    1a78:	8c 81       	ldd	r24, Y+4	; 0x04
    1a7a:	9d 81       	ldd	r25, Y+5	; 0x05
    1a7c:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1a80:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1a84:	f6 2e       	mov	r15, r22
	if ((dir == 1)&(k<=0))
	{
		float temp=(float)(y0-3)/(x0-5);
		if(abs(k*100)<=abs(temp*100))
		{
			sphere_x = 5;
    1a86:	15 e0       	ldi	r17, 0x05	; 5
    1a88:	1d c0       	rjmp	.+58     	; 0x1ac4 <path_algorithm+0x43c>
			sphere_y = k*(x0-5)+y0;
		}
		else
		{
			sphere_x = (y0-3)/k+x0;
    1a8a:	a5 01       	movw	r20, r10
    1a8c:	94 01       	movw	r18, r8
    1a8e:	6a 81       	ldd	r22, Y+2	; 0x02
    1a90:	7b 81       	ldd	r23, Y+3	; 0x03
    1a92:	8c 81       	ldd	r24, Y+4	; 0x04
    1a94:	9d 81       	ldd	r25, Y+5	; 0x05
    1a96:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1a9a:	6b 01       	movw	r12, r22
    1a9c:	7c 01       	movw	r14, r24
    1a9e:	b2 01       	movw	r22, r4
    1aa0:	55 0c       	add	r5, r5
    1aa2:	88 0b       	sbc	r24, r24
    1aa4:	99 0b       	sbc	r25, r25
    1aa6:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1aaa:	9b 01       	movw	r18, r22
    1aac:	ac 01       	movw	r20, r24
    1aae:	c7 01       	movw	r24, r14
    1ab0:	b6 01       	movw	r22, r12
    1ab2:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1ab6:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1aba:	16 2f       	mov	r17, r22
			sphere_y = 3;
    1abc:	0f 2e       	mov	r0, r31
    1abe:	f3 e0       	ldi	r31, 0x03	; 3
    1ac0:	ff 2e       	mov	r15, r31
    1ac2:	f0 2d       	mov	r31, r0
			
		}
	}
	if ((dir == 1)&(k>0))
    1ac4:	77 20       	and	r7, r7
    1ac6:	09 f4       	brne	.+2      	; 0x1aca <path_algorithm+0x442>
    1ac8:	86 c0       	rjmp	.+268    	; 0x1bd6 <path_algorithm+0x54e>
    1aca:	2c 85       	ldd	r18, Y+12	; 0x0c
    1acc:	22 23       	and	r18, r18
    1ace:	09 f4       	brne	.+2      	; 0x1ad2 <path_algorithm+0x44a>
    1ad0:	82 c0       	rjmp	.+260    	; 0x1bd6 <path_algorithm+0x54e>
	{
		float temp=(float)(y0-60)/(x0-5);
    1ad2:	39 81       	ldd	r19, Y+1	; 0x01
    1ad4:	63 2e       	mov	r6, r19
    1ad6:	71 2c       	mov	r7, r1
    1ad8:	b3 01       	movw	r22, r6
    1ada:	6c 53       	subi	r22, 0x3C	; 60
    1adc:	71 09       	sbc	r23, r1
    1ade:	07 2e       	mov	r0, r23
    1ae0:	00 0c       	add	r0, r0
    1ae2:	88 0b       	sbc	r24, r24
    1ae4:	99 0b       	sbc	r25, r25
    1ae6:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1aea:	6b 01       	movw	r12, r22
    1aec:	7c 01       	movw	r14, r24
    1aee:	82 2d       	mov	r24, r2
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	99 87       	std	Y+9, r25	; 0x09
    1af4:	88 87       	std	Y+8, r24	; 0x08
    1af6:	bc 01       	movw	r22, r24
    1af8:	65 50       	subi	r22, 0x05	; 5
    1afa:	71 09       	sbc	r23, r1
    1afc:	07 2e       	mov	r0, r23
    1afe:	00 0c       	add	r0, r0
    1b00:	88 0b       	sbc	r24, r24
    1b02:	99 0b       	sbc	r25, r25
    1b04:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1b08:	6a 83       	std	Y+2, r22	; 0x02
    1b0a:	7b 83       	std	Y+3, r23	; 0x03
    1b0c:	8c 83       	std	Y+4, r24	; 0x04
    1b0e:	9d 83       	std	Y+5, r25	; 0x05
		if(abs(k*100)<=abs(temp*100))
    1b10:	20 e0       	ldi	r18, 0x00	; 0
    1b12:	30 e0       	ldi	r19, 0x00	; 0
    1b14:	48 ec       	ldi	r20, 0xC8	; 200
    1b16:	52 e4       	ldi	r21, 0x42	; 66
    1b18:	c5 01       	movw	r24, r10
    1b1a:	b4 01       	movw	r22, r8
    1b1c:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1b20:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    1b24:	8b 01       	movw	r16, r22
    1b26:	77 23       	and	r23, r23
    1b28:	24 f4       	brge	.+8      	; 0x1b32 <path_algorithm+0x4aa>
    1b2a:	00 27       	eor	r16, r16
    1b2c:	11 27       	eor	r17, r17
    1b2e:	06 1b       	sub	r16, r22
    1b30:	17 0b       	sbc	r17, r23
    1b32:	2a 81       	ldd	r18, Y+2	; 0x02
    1b34:	3b 81       	ldd	r19, Y+3	; 0x03
    1b36:	4c 81       	ldd	r20, Y+4	; 0x04
    1b38:	5d 81       	ldd	r21, Y+5	; 0x05
    1b3a:	c7 01       	movw	r24, r14
    1b3c:	b6 01       	movw	r22, r12
    1b3e:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1b42:	20 e0       	ldi	r18, 0x00	; 0
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	48 ec       	ldi	r20, 0xC8	; 200
    1b48:	52 e4       	ldi	r21, 0x42	; 66
    1b4a:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1b4e:	0e 94 b5 14 	call	0x296a	; 0x296a <__fixsfsi>
    1b52:	9b 01       	movw	r18, r22
    1b54:	77 23       	and	r23, r23
    1b56:	24 f4       	brge	.+8      	; 0x1b60 <path_algorithm+0x4d8>
    1b58:	22 27       	eor	r18, r18
    1b5a:	33 27       	eor	r19, r19
    1b5c:	26 1b       	sub	r18, r22
    1b5e:	37 0b       	sbc	r19, r23
    1b60:	20 17       	cp	r18, r16
    1b62:	31 07       	cpc	r19, r17
    1b64:	dc f0       	brlt	.+54     	; 0x1b9c <path_algorithm+0x514>
		{
			sphere_x = 5;
			sphere_y = k*(x0-5)+y0;
    1b66:	2a 81       	ldd	r18, Y+2	; 0x02
    1b68:	3b 81       	ldd	r19, Y+3	; 0x03
    1b6a:	4c 81       	ldd	r20, Y+4	; 0x04
    1b6c:	5d 81       	ldd	r21, Y+5	; 0x05
    1b6e:	c5 01       	movw	r24, r10
    1b70:	b4 01       	movw	r22, r8
    1b72:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1b76:	6b 01       	movw	r12, r22
    1b78:	7c 01       	movw	r14, r24
    1b7a:	b3 01       	movw	r22, r6
    1b7c:	77 0c       	add	r7, r7
    1b7e:	88 0b       	sbc	r24, r24
    1b80:	99 0b       	sbc	r25, r25
    1b82:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1b86:	9b 01       	movw	r18, r22
    1b88:	ac 01       	movw	r20, r24
    1b8a:	c7 01       	movw	r24, r14
    1b8c:	b6 01       	movw	r22, r12
    1b8e:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1b92:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1b96:	f6 2e       	mov	r15, r22
	if ((dir == 1)&(k>0))
	{
		float temp=(float)(y0-60)/(x0-5);
		if(abs(k*100)<=abs(temp*100))
		{
			sphere_x = 5;
    1b98:	15 e0       	ldi	r17, 0x05	; 5
    1b9a:	1d c0       	rjmp	.+58     	; 0x1bd6 <path_algorithm+0x54e>
			sphere_y = k*(x0-5)+y0;
		}
		else
		{
			sphere_x = -(60-y0)/k+x0;
    1b9c:	a5 01       	movw	r20, r10
    1b9e:	94 01       	movw	r18, r8
    1ba0:	c7 01       	movw	r24, r14
    1ba2:	b6 01       	movw	r22, r12
    1ba4:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1ba8:	6b 01       	movw	r12, r22
    1baa:	7c 01       	movw	r14, r24
    1bac:	a8 85       	ldd	r26, Y+8	; 0x08
    1bae:	b9 85       	ldd	r27, Y+9	; 0x09
    1bb0:	bd 01       	movw	r22, r26
    1bb2:	bb 0f       	add	r27, r27
    1bb4:	88 0b       	sbc	r24, r24
    1bb6:	99 0b       	sbc	r25, r25
    1bb8:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1bbc:	9b 01       	movw	r18, r22
    1bbe:	ac 01       	movw	r20, r24
    1bc0:	c7 01       	movw	r24, r14
    1bc2:	b6 01       	movw	r22, r12
    1bc4:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1bc8:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    1bcc:	16 2f       	mov	r17, r22
			sphere_y = 60;
    1bce:	0f 2e       	mov	r0, r31
    1bd0:	fc e3       	ldi	r31, 0x3C	; 60
    1bd2:	ff 2e       	mov	r15, r31
    1bd4:	f0 2d       	mov	r31, r0
	//putnum(sphere_x );
	//putstring("   ");
	//putnum(sphere_y );
	//putstring("   ");
	//Generate X & Y arrays with all points for the sphere move
	detect(buff,x0, y0, sphere_x, sphere_y,0);
    1bd6:	e1 2c       	mov	r14, r1
    1bd8:	0f 2d       	mov	r16, r15
    1bda:	21 2f       	mov	r18, r17
    1bdc:	49 81       	ldd	r20, Y+1	; 0x01
    1bde:	62 2d       	mov	r22, r2
    1be0:	8e 81       	ldd	r24, Y+6	; 0x06
    1be2:	9f 81       	ldd	r25, Y+7	; 0x07
    1be4:	0e 94 49 0a 	call	0x1492	; 0x1492 <detect>
	//putnum(10*k );
	//putstring("   ");
	//putnum(dir);
	//putstring("   \n");

	ptr[0] = sphere_x;
    1be8:	61 2f       	mov	r22, r17
    1bea:	70 e0       	ldi	r23, 0x00	; 0
    1bec:	80 e0       	ldi	r24, 0x00	; 0
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <__floatunsisf>
    1bf4:	ed e7       	ldi	r30, 0x7D	; 125
    1bf6:	f5 e0       	ldi	r31, 0x05	; 5
    1bf8:	60 83       	st	Z, r22
    1bfa:	71 83       	std	Z+1, r23	; 0x01
    1bfc:	82 83       	std	Z+2, r24	; 0x02
    1bfe:	93 83       	std	Z+3, r25	; 0x03
	ptr[1] = sphere_y;
    1c00:	6f 2d       	mov	r22, r15
    1c02:	70 e0       	ldi	r23, 0x00	; 0
    1c04:	80 e0       	ldi	r24, 0x00	; 0
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <__floatunsisf>
    1c0c:	60 93 81 05 	sts	0x0581, r22	; 0x800581 <ptr+0x4>
    1c10:	70 93 82 05 	sts	0x0582, r23	; 0x800582 <ptr+0x5>
    1c14:	80 93 83 05 	sts	0x0583, r24	; 0x800583 <ptr+0x6>
    1c18:	90 93 84 05 	sts	0x0584, r25	; 0x800584 <ptr+0x7>
	ptr[2] = dir;
    1c1c:	63 2d       	mov	r22, r3
    1c1e:	70 e0       	ldi	r23, 0x00	; 0
    1c20:	80 e0       	ldi	r24, 0x00	; 0
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <__floatunsisf>
    1c28:	60 93 85 05 	sts	0x0585, r22	; 0x800585 <ptr+0x8>
    1c2c:	70 93 86 05 	sts	0x0586, r23	; 0x800586 <ptr+0x9>
    1c30:	80 93 87 05 	sts	0x0587, r24	; 0x800587 <ptr+0xa>
    1c34:	90 93 88 05 	sts	0x0588, r25	; 0x800588 <ptr+0xb>
	ptr[3] = k;
    1c38:	80 92 89 05 	sts	0x0589, r8	; 0x800589 <ptr+0xc>
    1c3c:	90 92 8a 05 	sts	0x058A, r9	; 0x80058a <ptr+0xd>
    1c40:	a0 92 8b 05 	sts	0x058B, r10	; 0x80058b <ptr+0xe>
    1c44:	b0 92 8c 05 	sts	0x058C, r11	; 0x80058c <ptr+0xf>
	
	return 0;
}
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	2c 96       	adiw	r28, 0x0c	; 12
    1c4c:	0f b6       	in	r0, 0x3f	; 63
    1c4e:	f8 94       	cli
    1c50:	de bf       	out	0x3e, r29	; 62
    1c52:	0f be       	out	0x3f, r0	; 63
    1c54:	cd bf       	out	0x3d, r28	; 61
    1c56:	df 91       	pop	r29
    1c58:	cf 91       	pop	r28
    1c5a:	1f 91       	pop	r17
    1c5c:	0f 91       	pop	r16
    1c5e:	ff 90       	pop	r15
    1c60:	ef 90       	pop	r14
    1c62:	df 90       	pop	r13
    1c64:	cf 90       	pop	r12
    1c66:	bf 90       	pop	r11
    1c68:	af 90       	pop	r10
    1c6a:	9f 90       	pop	r9
    1c6c:	8f 90       	pop	r8
    1c6e:	7f 90       	pop	r7
    1c70:	6f 90       	pop	r6
    1c72:	5f 90       	pop	r5
    1c74:	4f 90       	pop	r4
    1c76:	3f 90       	pop	r3
    1c78:	2f 90       	pop	r2
    1c7a:	08 95       	ret

00001c7c <read_adc_x>:

uint8_t read_adc_x()
{
	DDRC &= ~(1<<PORTC5);
    1c7c:	3d 98       	cbi	0x07, 5	; 7
	DDRC &= ~(1<<PORTC3);
    1c7e:	3b 98       	cbi	0x07, 3	; 7
	

	DDRC |= (1<<PORTC4) | (1<<PORTC2);//Y+,Y- output
    1c80:	87 b1       	in	r24, 0x07	; 7
    1c82:	84 61       	ori	r24, 0x14	; 20
    1c84:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1<<PORTC4);
    1c86:	44 9a       	sbi	0x08, 4	; 8
	
	adc_result = adc_read(5);//X-
    1c88:	85 e0       	ldi	r24, 0x05	; 5
    1c8a:	0e 94 28 03 	call	0x650	; 0x650 <adc_read>
    1c8e:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1c92:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
	if(adc_result>943)
    1c96:	80 3b       	cpi	r24, 0xB0	; 176
    1c98:	23 e0       	ldi	r18, 0x03	; 3
    1c9a:	92 07       	cpc	r25, r18
    1c9c:	e8 f0       	brcs	.+58     	; 0x1cd8 <read_adc_x+0x5c>
	{
		adc_result=943;
    1c9e:	8f ea       	ldi	r24, 0xAF	; 175
    1ca0:	93 e0       	ldi	r25, 0x03	; 3
    1ca2:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1ca6:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
	}
	if(adc_result<120)
	{
		adc_result=120;
	}
	xa = -adc_result*20/125+138;
    1caa:	24 e5       	ldi	r18, 0x54	; 84
    1cac:	36 eb       	ldi	r19, 0xB6	; 182
    1cae:	a5 e2       	ldi	r26, 0x25	; 37
    1cb0:	b6 e0       	ldi	r27, 0x06	; 6
    1cb2:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <__umulhisi3>
    1cb6:	28 1b       	sub	r18, r24
    1cb8:	39 0b       	sbc	r19, r25
    1cba:	36 95       	lsr	r19
    1cbc:	27 95       	ror	r18
    1cbe:	82 0f       	add	r24, r18
    1cc0:	93 1f       	adc	r25, r19
    1cc2:	00 24       	eor	r0, r0
    1cc4:	88 0f       	add	r24, r24
    1cc6:	99 1f       	adc	r25, r25
    1cc8:	00 1c       	adc	r0, r0
    1cca:	88 0f       	add	r24, r24
    1ccc:	99 1f       	adc	r25, r25
    1cce:	00 1c       	adc	r0, r0
    1cd0:	89 2f       	mov	r24, r25
    1cd2:	90 2d       	mov	r25, r0
    1cd4:	86 57       	subi	r24, 0x76	; 118
    1cd6:	20 c0       	rjmp	.+64     	; 0x1d18 <read_adc_x+0x9c>
	adc_result = adc_read(5);//X-
	if(adc_result>943)
	{
		adc_result=943;
	}
	if(adc_result<120)
    1cd8:	88 37       	cpi	r24, 0x78	; 120
    1cda:	91 05       	cpc	r25, r1
    1cdc:	38 f4       	brcc	.+14     	; 0x1cec <read_adc_x+0x70>
	{
		adc_result=120;
    1cde:	88 e7       	ldi	r24, 0x78	; 120
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1ce6:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
    1cea:	1a c0       	rjmp	.+52     	; 0x1d20 <read_adc_x+0xa4>
	}
	xa = -adc_result*20/125+138;
    1cec:	20 91 8d 05 	lds	r18, 0x058D	; 0x80058d <adc_result>
    1cf0:	30 91 8e 05 	lds	r19, 0x058E	; 0x80058e <adc_result+0x1>
    1cf4:	4c ee       	ldi	r20, 0xEC	; 236
    1cf6:	42 03       	mulsu	r20, r18
    1cf8:	c0 01       	movw	r24, r0
    1cfa:	43 9f       	mul	r20, r19
    1cfc:	90 0d       	add	r25, r0
    1cfe:	11 24       	eor	r1, r1
    1d00:	6d e7       	ldi	r22, 0x7D	; 125
    1d02:	70 e0       	ldi	r23, 0x00	; 0
    1d04:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__udivmodhi4>
    1d08:	8a e8       	ldi	r24, 0x8A	; 138
    1d0a:	86 0f       	add	r24, r22
	
	if(xa>120)
    1d0c:	89 37       	cpi	r24, 0x79	; 121
    1d0e:	24 f0       	brlt	.+8      	; 0x1d18 <read_adc_x+0x9c>
	{
		xa=120;
    1d10:	88 e7       	ldi	r24, 0x78	; 120
    1d12:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <xa>
    1d16:	06 c0       	rjmp	.+12     	; 0x1d24 <read_adc_x+0xa8>
	}
	if(adc_result<120)
	{
		adc_result=120;
	}
	xa = -adc_result*20/125+138;
    1d18:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <xa>
	
	if(xa>120)
	{
		xa=120;
	}
	if(xa<0)
    1d1c:	88 23       	and	r24, r24
    1d1e:	14 f4       	brge	.+4      	; 0x1d24 <read_adc_x+0xa8>
	{
		xa=0;
    1d20:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <xa>
	putnum(adc_result);
	putstring(" x:   ");
	putnum(x);
	putstring(" \n  ");*/
	return xa;
}
    1d24:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <xa>
    1d28:	08 95       	ret

00001d2a <read_adc_y>:

uint8_t read_adc_y()
{
	DDRC &= ~(1<<PORTC4);
    1d2a:	3c 98       	cbi	0x07, 4	; 7
	DDRC &= ~(1<<PORTC2);
    1d2c:	3a 98       	cbi	0x07, 2	; 7
	
	DDRC |= (1<<PORTC5) | (1<<PORTC3);//X+,X- output
    1d2e:	87 b1       	in	r24, 0x07	; 7
    1d30:	88 62       	ori	r24, 0x28	; 40
    1d32:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1<<PORTC3);
    1d34:	43 9a       	sbi	0x08, 3	; 8
	
	adc_result = adc_read(4);//Y-
    1d36:	84 e0       	ldi	r24, 0x04	; 4
    1d38:	0e 94 28 03 	call	0x650	; 0x650 <adc_read>
    1d3c:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1d40:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
	if(adc_result>764)
    1d44:	8d 3f       	cpi	r24, 0xFD	; 253
    1d46:	22 e0       	ldi	r18, 0x02	; 2
    1d48:	92 07       	cpc	r25, r18
    1d4a:	80 f0       	brcs	.+32     	; 0x1d6c <read_adc_y+0x42>
	{
		adc_result=764;
    1d4c:	8c ef       	ldi	r24, 0xFC	; 252
    1d4e:	92 e0       	ldi	r25, 0x02	; 2
    1d50:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1d54:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
	if(adc_result<176)
	{
		adc_result=176;
	}
	
	ya = adc_result*3/28-132/7;
    1d58:	2d e3       	ldi	r18, 0x3D	; 61
    1d5a:	32 e0       	ldi	r19, 0x02	; 2
    1d5c:	a5 e2       	ldi	r26, 0x25	; 37
    1d5e:	b9 e4       	ldi	r27, 0x49	; 73
    1d60:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <__umulhisi3>
    1d64:	96 95       	lsr	r25
    1d66:	87 95       	ror	r24
    1d68:	82 51       	subi	r24, 0x12	; 18
    1d6a:	21 c0       	rjmp	.+66     	; 0x1dae <read_adc_y+0x84>
	adc_result = adc_read(4);//Y-
	if(adc_result>764)
	{
		adc_result=764;
	}
	if(adc_result<176)
    1d6c:	80 3b       	cpi	r24, 0xB0	; 176
    1d6e:	91 05       	cpc	r25, r1
    1d70:	48 f4       	brcc	.+18     	; 0x1d84 <read_adc_y+0x5a>
	{
		adc_result=176;
    1d72:	80 eb       	ldi	r24, 0xB0	; 176
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	90 93 8e 05 	sts	0x058E, r25	; 0x80058e <adc_result+0x1>
    1d7a:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <adc_result>
	}
	
	ya = adc_result*3/28-132/7;
    1d7e:	10 92 7a 05 	sts	0x057A, r1	; 0x80057a <ya>
    1d82:	1b c0       	rjmp	.+54     	; 0x1dba <read_adc_y+0x90>
    1d84:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <adc_result>
    1d88:	90 91 8e 05 	lds	r25, 0x058E	; 0x80058e <adc_result+0x1>
    1d8c:	9c 01       	movw	r18, r24
    1d8e:	22 0f       	add	r18, r18
    1d90:	33 1f       	adc	r19, r19
    1d92:	82 0f       	add	r24, r18
    1d94:	93 1f       	adc	r25, r19
    1d96:	6c e1       	ldi	r22, 0x1C	; 28
    1d98:	70 e0       	ldi	r23, 0x00	; 0
    1d9a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__udivmodhi4>
    1d9e:	8e ee       	ldi	r24, 0xEE	; 238
    1da0:	86 0f       	add	r24, r22
	
	
	if(ya>63)
    1da2:	80 34       	cpi	r24, 0x40	; 64
    1da4:	24 f0       	brlt	.+8      	; 0x1dae <read_adc_y+0x84>
	{
		ya=63;
    1da6:	8f e3       	ldi	r24, 0x3F	; 63
    1da8:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <ya>
    1dac:	06 c0       	rjmp	.+12     	; 0x1dba <read_adc_y+0x90>
	if(adc_result<176)
	{
		adc_result=176;
	}
	
	ya = adc_result*3/28-132/7;
    1dae:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <ya>
	
	if(ya>63)
	{
		ya=63;
	}
	if(ya<0)
    1db2:	88 23       	and	r24, r24
    1db4:	14 f4       	brge	.+4      	; 0x1dba <read_adc_y+0x90>
	{
		ya=0;
    1db6:	10 92 7a 05 	sts	0x057A, r1	; 0x80057a <ya>
	}
	//putstring(" y_adc:    ");
	//putnum(adc_result);
	putstring(" y:   ");
    1dba:	8c e1       	ldi	r24, 0x1C	; 28
    1dbc:	95 e0       	ldi	r25, 0x05	; 5
    1dbe:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
	//putnum(ya);
	
	return ya;
}
    1dc2:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <ya>
    1dc6:	08 95       	ret

00001dc8 <main>:

int main(void)
{
    1dc8:	cf 93       	push	r28
    1dca:	df 93       	push	r29
    1dcc:	cd b7       	in	r28, 0x3d	; 61
    1dce:	de b7       	in	r29, 0x3e	; 62
    1dd0:	2d 97       	sbiw	r28, 0x0d	; 13
    1dd2:	0f b6       	in	r0, 0x3f	; 63
    1dd4:	f8 94       	cli
    1dd6:	de bf       	out	0x3e, r29	; 62
    1dd8:	0f be       	out	0x3f, r0	; 63
    1dda:	cd bf       	out	0x3d, r28	; 61
	//setting up the gpio for backlight
	DDRD |= 0x80;
    1ddc:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
    1dde:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
    1de0:	8b b1       	in	r24, 0x0b	; 11
    1de2:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x01;
    1de4:	20 9a       	sbi	0x04, 0	; 4
	PORTB &= ~0x01;
    1de6:	28 98       	cbi	0x05, 0	; 5
	PORTB |= 0x00;
    1de8:	85 b1       	in	r24, 0x05	; 5
    1dea:	85 b9       	out	0x05, r24	; 5
	int x0 = 0, y0 = 0,mode = 0;
	int acc0 = 0,acc = 0;
	
	//lcd initialisation
	lcd_init();
    1dec:	0e 94 4a 03 	call	0x694	; 0x694 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
    1df0:	8f ea       	ldi	r24, 0xAF	; 175
    1df2:	0e 94 34 03 	call	0x668	; 0x668 <lcd_command>
	lcd_set_brightness(0x18);
    1df6:	88 e1       	ldi	r24, 0x18	; 24
    1df8:	0e 94 a2 03 	call	0x744	; 0x744 <lcd_set_brightness>
	write_buffer(buff);
    1dfc:	84 e0       	ldi	r24, 0x04	; 4
    1dfe:	91 e0       	ldi	r25, 0x01	; 1
    1e00:	0e 94 ad 03 	call	0x75a	; 0x75a <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1e04:	2f ef       	ldi	r18, 0xFF	; 255
    1e06:	33 ed       	ldi	r19, 0xD3	; 211
    1e08:	80 e3       	ldi	r24, 0x30	; 48
    1e0a:	21 50       	subi	r18, 0x01	; 1
    1e0c:	30 40       	sbci	r19, 0x00	; 0
    1e0e:	80 40       	sbci	r24, 0x00	; 0
    1e10:	e1 f7       	brne	.-8      	; 0x1e0a <main+0x42>
    1e12:	00 c0       	rjmp	.+0      	; 0x1e14 <main+0x4c>
    1e14:	00 00       	nop
	_delay_ms(1000);
	clear_buffer(buff);
    1e16:	84 e0       	ldi	r24, 0x04	; 4
    1e18:	91 e0       	ldi	r25, 0x01	; 1
    1e1a:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
	

	adc_init();// initialize adc
    1e1e:	0e 94 04 03 	call	0x608	; 0x608 <adc_init>
	
	DDRB |= (1 << PORTB1);
    1e22:	21 9a       	sbi	0x04, 1	; 4
	
	//initialize  interrupt
	TCCR1A = (1 << WGM10); //Set PWM Bit
    1e24:	81 e0       	ldi	r24, 0x01	; 1
    1e26:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (1 << WGM12);
    1e2a:	e1 e8       	ldi	r30, 0x81	; 129
    1e2c:	f0 e0       	ldi	r31, 0x00	; 0
    1e2e:	88 e0       	ldi	r24, 0x08	; 8
    1e30:	80 83       	st	Z, r24
	sei();
    1e32:	78 94       	sei
	TCCR1B |=  (1 << CS10) | (1 << CS11);
    1e34:	80 81       	ld	r24, Z
    1e36:	83 60       	ori	r24, 0x03	; 3
    1e38:	80 83       	st	Z, r24
	DDRB |= (1 << PORTB3);
    1e3a:	23 9a       	sbi	0x04, 3	; 4
	PORTD |= 0x00;
	
	DDRB |= 0x01;
	PORTB &= ~0x01;
	PORTB |= 0x00;
	int x0 = 0, y0 = 0,mode = 0;
    1e3c:	61 2c       	mov	r6, r1
    1e3e:	71 2c       	mov	r7, r1
    1e40:	81 2c       	mov	r8, r1
    1e42:	91 2c       	mov	r9, r1
		putnum(y);
		putstring("   ");
		putnum(x);
		putstring("   \n");
		
		if((x>=43)&(x<=43+40)&(((y>=12)&(y<=22))||((y>=24)&(y<32))||((y>=38)&(y<48))))
    1e44:	33 24       	eor	r3, r3
    1e46:	33 94       	inc	r3
    1e48:	41 2c       	mov	r4, r1
    1e4a:	3a 86       	std	Y+10, r3	; 0x0a
    1e4c:	4b 86       	std	Y+11, r4	; 0x0b
    1e4e:	22 24       	eor	r2, r2
    1e50:	23 94       	inc	r2
    1e52:	18 86       	std	Y+8, r1	; 0x08
    1e54:	1f 82       	std	Y+7, r1	; 0x07
    1e56:	19 86       	std	Y+9, r1	; 0x09

	
	while(1)
	{
		acc0 = 0;
		drawstring(buff, 43, 2, "1 Player");
    1e58:	23 e2       	ldi	r18, 0x23	; 35
    1e5a:	35 e0       	ldi	r19, 0x05	; 5
    1e5c:	42 e0       	ldi	r20, 0x02	; 2
    1e5e:	6b e2       	ldi	r22, 0x2B	; 43
    1e60:	84 e0       	ldi	r24, 0x04	; 4
    1e62:	91 e0       	ldi	r25, 0x01	; 1
    1e64:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		drawstring(buff, 43, 4, "2 Players");
    1e68:	2c e2       	ldi	r18, 0x2C	; 44
    1e6a:	35 e0       	ldi	r19, 0x05	; 5
    1e6c:	44 e0       	ldi	r20, 0x04	; 4
    1e6e:	6b e2       	ldi	r22, 0x2B	; 43
    1e70:	84 e0       	ldi	r24, 0x04	; 4
    1e72:	91 e0       	ldi	r25, 0x01	; 1
    1e74:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		drawstring(buff, 43, 6, "Acc Mode");
    1e78:	26 e3       	ldi	r18, 0x36	; 54
    1e7a:	35 e0       	ldi	r19, 0x05	; 5
    1e7c:	46 e0       	ldi	r20, 0x06	; 6
    1e7e:	6b e2       	ldi	r22, 0x2B	; 43
    1e80:	84 e0       	ldi	r24, 0x04	; 4
    1e82:	91 e0       	ldi	r25, 0x01	; 1
    1e84:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
		
		
		y = read_adc_y();
    1e88:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <read_adc_y>
    1e8c:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <y>
		x = read_adc_x();
    1e90:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <read_adc_x>
    1e94:	80 93 79 05 	sts	0x0579, r24	; 0x800579 <x>
		putnum(y);
    1e98:	80 91 78 05 	lds	r24, 0x0578	; 0x800578 <y>
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	0e 94 e7 02 	call	0x5ce	; 0x5ce <putnum>
		putstring("   ");
    1ea2:	8f e1       	ldi	r24, 0x1F	; 31
    1ea4:	95 e0       	ldi	r25, 0x05	; 5
    1ea6:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
		putnum(x);
    1eaa:	80 91 79 05 	lds	r24, 0x0579	; 0x800579 <x>
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	0e 94 e7 02 	call	0x5ce	; 0x5ce <putnum>
		putstring("   \n");
    1eb4:	8f e3       	ldi	r24, 0x3F	; 63
    1eb6:	95 e0       	ldi	r25, 0x05	; 5
    1eb8:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
		
		if((x>=43)&(x<=43+40)&(((y>=12)&(y<=22))||((y>=24)&(y<32))||((y>=38)&(y<48))))
    1ebc:	80 91 79 05 	lds	r24, 0x0579	; 0x800579 <x>
    1ec0:	8b 52       	subi	r24, 0x2B	; 43
    1ec2:	5a 85       	ldd	r21, Y+10	; 0x0a
    1ec4:	89 32       	cpi	r24, 0x29	; 41
    1ec6:	08 f0       	brcs	.+2      	; 0x1eca <main+0x102>
    1ec8:	5b 85       	ldd	r21, Y+11	; 0x0b
    1eca:	25 2f       	mov	r18, r21
    1ecc:	30 e0       	ldi	r19, 0x00	; 0
    1ece:	40 91 78 05 	lds	r20, 0x0578	; 0x800578 <y>
    1ed2:	64 ef       	ldi	r22, 0xF4	; 244
    1ed4:	64 0f       	add	r22, r20
    1ed6:	6b 30       	cpi	r22, 0x0B	; 11
    1ed8:	78 f0       	brcs	.+30     	; 0x1ef8 <main+0x130>
    1eda:	88 ee       	ldi	r24, 0xE8	; 232
    1edc:	84 0f       	add	r24, r20
    1ede:	88 30       	cpi	r24, 0x08	; 8
    1ee0:	70 f0       	brcs	.+28     	; 0x1efe <main+0x136>
    1ee2:	e2 2d       	mov	r30, r2
    1ee4:	78 85       	ldd	r23, Y+8	; 0x08
    1ee6:	8a ed       	ldi	r24, 0xDA	; 218
    1ee8:	84 0f       	add	r24, r20
    1eea:	8a 30       	cpi	r24, 0x0A	; 10
    1eec:	10 f0       	brcs	.+4      	; 0x1ef2 <main+0x12a>
    1eee:	ef 81       	ldd	r30, Y+7	; 0x07
    1ef0:	79 85       	ldd	r23, Y+9	; 0x09
    1ef2:	8e 2f       	mov	r24, r30
    1ef4:	97 2f       	mov	r25, r23
    1ef6:	05 c0       	rjmp	.+10     	; 0x1f02 <main+0x13a>
    1ef8:	82 2d       	mov	r24, r2
    1efa:	98 85       	ldd	r25, Y+8	; 0x08
    1efc:	02 c0       	rjmp	.+4      	; 0x1f02 <main+0x13a>
    1efe:	82 2d       	mov	r24, r2
    1f00:	98 85       	ldd	r25, Y+8	; 0x08
    1f02:	82 23       	and	r24, r18
    1f04:	93 23       	and	r25, r19
    1f06:	89 2b       	or	r24, r25
    1f08:	09 f4       	brne	.+2      	; 0x1f0c <main+0x144>
    1f0a:	a6 cf       	rjmp	.-180    	; 0x1e58 <main+0x90>
		{
			if((x>=43)&(x<=43+40)&(y>=12)&(y<22))
    1f0c:	83 2d       	mov	r24, r3
    1f0e:	6a 30       	cpi	r22, 0x0A	; 10
    1f10:	08 f0       	brcs	.+2      	; 0x1f14 <main+0x14c>
    1f12:	84 2d       	mov	r24, r4
    1f14:	88 23       	and	r24, r24
    1f16:	29 f0       	breq	.+10     	; 0x1f22 <main+0x15a>
    1f18:	55 23       	and	r21, r21
    1f1a:	19 f0       	breq	.+6      	; 0x1f22 <main+0x15a>
			{
				mode = 1;
    1f1c:	66 24       	eor	r6, r6
    1f1e:	63 94       	inc	r6
    1f20:	71 2c       	mov	r7, r1
			}
			if((x>=43)&(x<=43+40)&(y>=24)&(y<32))
    1f22:	93 2d       	mov	r25, r3
    1f24:	88 ee       	ldi	r24, 0xE8	; 232
    1f26:	84 0f       	add	r24, r20
    1f28:	88 30       	cpi	r24, 0x08	; 8
    1f2a:	08 f0       	brcs	.+2      	; 0x1f2e <main+0x166>
    1f2c:	94 2d       	mov	r25, r4
    1f2e:	99 23       	and	r25, r25
    1f30:	09 f4       	brne	.+2      	; 0x1f34 <main+0x16c>
    1f32:	12 c4       	rjmp	.+2084   	; 0x2758 <main+0x990>
    1f34:	55 23       	and	r21, r21
    1f36:	09 f4       	brne	.+2      	; 0x1f3a <main+0x172>
    1f38:	0f c4       	rjmp	.+2078   	; 0x2758 <main+0x990>
			{
				mode = 0;
			}
			if((x>=43)&(x<=43+40)&(y>=38)&(y<48))
    1f3a:	46 52       	subi	r20, 0x26	; 38
    1f3c:	83 2d       	mov	r24, r3
    1f3e:	4a 30       	cpi	r20, 0x0A	; 10
    1f40:	08 f0       	brcs	.+2      	; 0x1f44 <main+0x17c>
    1f42:	84 2d       	mov	r24, r4
    1f44:	88 23       	and	r24, r24
    1f46:	49 f1       	breq	.+82     	; 0x1f9a <main+0x1d2>
    1f48:	55 23       	and	r21, r21
    1f4a:	39 f1       	breq	.+78     	; 0x1f9a <main+0x1d2>
    1f4c:	02 e3       	ldi	r16, 0x32	; 50
    1f4e:	10 e0       	ldi	r17, 0x00	; 0
    1f50:	1a 82       	std	Y+2, r1	; 0x02
    1f52:	19 82       	std	Y+1, r1	; 0x01
    1f54:	04 c0       	rjmp	.+8      	; 0x1f5e <main+0x196>
    1f56:	02 e3       	ldi	r16, 0x32	; 50
    1f58:	10 e0       	ldi	r17, 0x00	; 0
    1f5a:	1a 82       	std	Y+2, r1	; 0x02
    1f5c:	19 82       	std	Y+1, r1	; 0x01
			{
				mode = 2;
				for(int i=0;i<50;i++)
				{
					
					acc0 += adc_read(1);
    1f5e:	83 2d       	mov	r24, r3
    1f60:	0e 94 28 03 	call	0x650	; 0x650 <adc_read>
    1f64:	e9 81       	ldd	r30, Y+1	; 0x01
    1f66:	fa 81       	ldd	r31, Y+2	; 0x02
    1f68:	e8 0f       	add	r30, r24
    1f6a:	f9 1f       	adc	r31, r25
    1f6c:	fa 83       	std	Y+2, r31	; 0x02
    1f6e:	e9 83       	std	Y+1, r30	; 0x01
					//putnum(adc_read(1));
					putstring("   \n");
    1f70:	8f e3       	ldi	r24, 0x3F	; 63
    1f72:	95 e0       	ldi	r25, 0x05	; 5
    1f74:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
    1f78:	01 50       	subi	r16, 0x01	; 1
    1f7a:	11 09       	sbc	r17, r1
				mode = 0;
			}
			if((x>=43)&(x<=43+40)&(y>=38)&(y<48))
			{
				mode = 2;
				for(int i=0;i<50;i++)
    1f7c:	81 f7       	brne	.-32     	; 0x1f5e <main+0x196>
    1f7e:	29 81       	ldd	r18, Y+1	; 0x01
    1f80:	3a 81       	ldd	r19, Y+2	; 0x02
					//putnum(adc_read(1));
					putstring("   \n");
					
					
				}
				acc0 /= 50;
    1f82:	c9 01       	movw	r24, r18
    1f84:	62 e3       	ldi	r22, 0x32	; 50
    1f86:	70 e0       	ldi	r23, 0x00	; 0
    1f88:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    1f8c:	7a 83       	std	Y+2, r23	; 0x02
    1f8e:	69 83       	std	Y+1, r22	; 0x01
			{
				mode = 0;
			}
			if((x>=43)&(x<=43+40)&(y>=38)&(y<48))
			{
				mode = 2;
    1f90:	68 94       	set
    1f92:	66 24       	eor	r6, r6
    1f94:	61 f8       	bld	r6, 1
    1f96:	71 2c       	mov	r7, r1
    1f98:	04 c0       	rjmp	.+8      	; 0x1fa2 <main+0x1da>
	

	
	while(1)
	{
		acc0 = 0;
    1f9a:	19 82       	std	Y+1, r1	; 0x01
    1f9c:	1a 82       	std	Y+2, r1	; 0x02
			{
				mode = 1;
			}
			if((x>=43)&(x<=43+40)&(y>=24)&(y<32))
			{
				mode = 0;
    1f9e:	61 2c       	mov	r6, r1
    1fa0:	71 2c       	mov	r7, r1
					
					
				}
				acc0 /= 50;
			}
			clear_buffer(buff);
    1fa2:	84 e0       	ldi	r24, 0x04	; 4
    1fa4:	91 e0       	ldi	r25, 0x01	; 1
    1fa6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
			drawbackground();
    1faa:	0e 94 74 08 	call	0x10e8	; 0x10e8 <drawbackground>
			
			slope = rand()%100;
    1fae:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
			slope = 9*slope/500 +0.5;
    1fb2:	64 e6       	ldi	r22, 0x64	; 100
    1fb4:	70 e0       	ldi	r23, 0x00	; 0
    1fb6:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    1fba:	bc 01       	movw	r22, r24
    1fbc:	99 0f       	add	r25, r25
    1fbe:	88 0b       	sbc	r24, r24
    1fc0:	99 0b       	sbc	r25, r25
    1fc2:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	40 e1       	ldi	r20, 0x10	; 16
    1fcc:	51 e4       	ldi	r21, 0x41	; 65
    1fce:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    1fd2:	20 e0       	ldi	r18, 0x00	; 0
    1fd4:	30 e0       	ldi	r19, 0x00	; 0
    1fd6:	4a ef       	ldi	r20, 0xFA	; 250
    1fd8:	53 e4       	ldi	r21, 0x43	; 67
    1fda:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	40 e0       	ldi	r20, 0x00	; 0
    1fe4:	5f e3       	ldi	r21, 0x3F	; 63
    1fe6:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    1fea:	60 93 13 06 	sts	0x0613, r22	; 0x800613 <slope>
    1fee:	70 93 14 06 	sts	0x0614, r23	; 0x800614 <slope+0x1>
    1ff2:	80 93 15 06 	sts	0x0615, r24	; 0x800615 <slope+0x2>
    1ff6:	90 93 16 06 	sts	0x0616, r25	; 0x800616 <slope+0x3>
			dr = rand()%2;
    1ffa:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    1ffe:	81 70       	andi	r24, 0x01	; 1
    2000:	90 78       	andi	r25, 0x80	; 128
    2002:	99 23       	and	r25, r25
    2004:	24 f4       	brge	.+8      	; 0x200e <main+0x246>
    2006:	01 97       	sbiw	r24, 0x01	; 1
    2008:	8e 6f       	ori	r24, 0xFE	; 254
    200a:	9f 6f       	ori	r25, 0xFF	; 255
    200c:	01 96       	adiw	r24, 0x01	; 1
    200e:	90 93 12 06 	sts	0x0612, r25	; 0x800612 <dr+0x1>
    2012:	80 93 11 06 	sts	0x0611, r24	; 0x800611 <dr>
			kk = rand()%3;
    2016:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    201a:	63 e0       	ldi	r22, 0x03	; 3
    201c:	70 e0       	ldi	r23, 0x00	; 0
    201e:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    2022:	90 93 10 06 	sts	0x0610, r25	; 0x800610 <kk+0x1>
    2026:	80 93 0f 06 	sts	0x060F, r24	; 0x80060f <kk>
			if((kk==0) || (kk==2))
    202a:	8d 7f       	andi	r24, 0xFD	; 253
    202c:	89 2b       	or	r24, r25
    202e:	89 f4       	brne	.+34     	; 0x2052 <main+0x28a>
			{
				slope = -slope;
    2030:	80 91 13 06 	lds	r24, 0x0613	; 0x800613 <slope>
    2034:	90 91 14 06 	lds	r25, 0x0614	; 0x800614 <slope+0x1>
    2038:	a0 91 15 06 	lds	r26, 0x0615	; 0x800615 <slope+0x2>
    203c:	b0 91 16 06 	lds	r27, 0x0616	; 0x800616 <slope+0x3>
    2040:	b0 58       	subi	r27, 0x80	; 128
    2042:	80 93 13 06 	sts	0x0613, r24	; 0x800613 <slope>
    2046:	90 93 14 06 	sts	0x0614, r25	; 0x800614 <slope+0x1>
    204a:	a0 93 15 06 	sts	0x0615, r26	; 0x800615 <slope+0x2>
    204e:	b0 93 16 06 	sts	0x0616, r27	; 0x800616 <slope+0x3>
			}
			path_algorithm(buff,63, 32, 2  ,dr,slope);
    2052:	c0 90 13 06 	lds	r12, 0x0613	; 0x800613 <slope>
    2056:	d0 90 14 06 	lds	r13, 0x0614	; 0x800614 <slope+0x1>
    205a:	e0 90 15 06 	lds	r14, 0x0615	; 0x800615 <slope+0x2>
    205e:	f0 90 16 06 	lds	r15, 0x0616	; 0x800616 <slope+0x3>
    2062:	e1 e1       	ldi	r30, 0x11	; 17
    2064:	f6 e0       	ldi	r31, 0x06	; 6
    2066:	00 81       	ld	r16, Z
    2068:	22 e0       	ldi	r18, 0x02	; 2
    206a:	40 e2       	ldi	r20, 0x20	; 32
    206c:	6f e3       	ldi	r22, 0x3F	; 63
    206e:	84 e0       	ldi	r24, 0x04	; 4
    2070:	91 e0       	ldi	r25, 0x01	; 1
    2072:	0e 94 44 0b 	call	0x1688	; 0x1688 <path_algorithm>
			
			int i = 0,flag = 1;
    2076:	1d 86       	std	Y+13, r1	; 0x0d
    2078:	1c 86       	std	Y+12, r1	; 0x0c
					acc = adc_read(1);
					putnum(acc0);
					putstring("  ");
					putnum(acc);
					putstring(" \n  ");
					if(acc<(acc0-10))
    207a:	29 81       	ldd	r18, Y+1	; 0x01
    207c:	3a 81       	ldd	r19, Y+2	; 0x02
    207e:	2a 50       	subi	r18, 0x0A	; 10
    2080:	31 09       	sbc	r19, r1
    2082:	3c 83       	std	Y+4, r19	; 0x04
    2084:	2b 83       	std	Y+3, r18	; 0x03
					{
						pad_c0 = movepad0(buff,pad_c0,62,1);
						putstring("flag1 \n  ");
					}
					if(acc>(acc0+10))
    2086:	89 81       	ldd	r24, Y+1	; 0x01
    2088:	9a 81       	ldd	r25, Y+2	; 0x02
    208a:	0a 96       	adiw	r24, 0x0a	; 10
    208c:	9e 83       	std	Y+6, r25	; 0x06
    208e:	8d 83       	std	Y+5, r24	; 0x05
					}
					else if(((x0==122)||(x0==5))&((y0<pad_c1+7)||(y0>pad_c1-7)))
					{
						path_algorithm(buff,x0, y0, 2 ,ptr[2],ptr[3]);
						OCR1A = 120;
						TIMSK1 |= (1 << OCIE1A);
    2090:	0f 2e       	mov	r0, r31
    2092:	ff e6       	ldi	r31, 0x6F	; 111
    2094:	af 2e       	mov	r10, r31
    2096:	b1 2c       	mov	r11, r1
    2098:	f0 2d       	mov	r31, r0
				slope = -slope;
			}
			path_algorithm(buff,63, 32, 2  ,dr,slope);
			
			int i = 0,flag = 1;
			while (flag)
    209a:	50 c3       	rjmp	.+1696   	; 0x273c <main+0x974>
				record2(count2);
				
				
				for(int i=0;i<63;i+=6)
				{
					drawline(buff,63,i,63,i+3,0);
    209c:	03 e0       	ldi	r16, 0x03	; 3
    209e:	01 0f       	add	r16, r17
    20a0:	e4 2c       	mov	r14, r4
    20a2:	2f e3       	ldi	r18, 0x3F	; 63
    20a4:	41 2f       	mov	r20, r17
    20a6:	6f e3       	ldi	r22, 0x3F	; 63
    20a8:	84 e0       	ldi	r24, 0x04	; 4
    20aa:	91 e0       	ldi	r25, 0x01	; 1
    20ac:	0e 94 28 07 	call	0xe50	; 0xe50 <drawline>
    20b0:	1a 5f       	subi	r17, 0xFA	; 250
				
				record1(count1);
				record2(count2);
				
				
				for(int i=0;i<63;i+=6)
    20b2:	12 34       	cpi	r17, 0x42	; 66
    20b4:	99 f7       	brne	.-26     	; 0x209c <main+0x2d4>
				{
					drawline(buff,63,i,63,i+3,0);
				}
				
				
				switch(mode)
    20b6:	31 e0       	ldi	r19, 0x01	; 1
    20b8:	63 16       	cp	r6, r19
    20ba:	71 04       	cpc	r7, r1
    20bc:	49 f1       	breq	.+82     	; 0x2110 <main+0x348>
    20be:	82 e0       	ldi	r24, 0x02	; 2
    20c0:	68 16       	cp	r6, r24
    20c2:	71 04       	cpc	r7, r1
    20c4:	09 f4       	brne	.+2      	; 0x20c8 <main+0x300>
    20c6:	57 c0       	rjmp	.+174    	; 0x2176 <main+0x3ae>
    20c8:	61 14       	cp	r6, r1
    20ca:	71 04       	cpc	r7, r1
    20cc:	09 f0       	breq	.+2      	; 0x20d0 <main+0x308>
    20ce:	aa c0       	rjmp	.+340    	; 0x2224 <main+0x45c>
				{
					case 0:
					
					y = read_adc_y();
    20d0:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <read_adc_y>
    20d4:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <y>
					x = read_adc_x();
    20d8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <read_adc_x>
    20dc:	80 93 79 05 	sts	0x0579, r24	; 0x800579 <x>
					pad_c0 = movepad0(buff,pad_c0,x,y);
    20e0:	20 91 78 05 	lds	r18, 0x0578	; 0x800578 <y>
    20e4:	48 2f       	mov	r20, r24
    20e6:	60 91 15 05 	lds	r22, 0x0515	; 0x800515 <pad_c0>
    20ea:	84 e0       	ldi	r24, 0x04	; 4
    20ec:	91 e0       	ldi	r25, 0x01	; 1
    20ee:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <movepad0>
    20f2:	80 93 15 05 	sts	0x0515, r24	; 0x800515 <pad_c0>
					pad_c1 = movepad1(buff,pad_c1,x,y);
    20f6:	20 91 78 05 	lds	r18, 0x0578	; 0x800578 <y>
    20fa:	40 91 79 05 	lds	r20, 0x0579	; 0x800579 <x>
    20fe:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <pad_c1>
    2102:	84 e0       	ldi	r24, 0x04	; 4
    2104:	91 e0       	ldi	r25, 0x01	; 1
    2106:	0e 94 34 09 	call	0x1268	; 0x1268 <movepad1>
    210a:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <pad_c1>
					
					break;
    210e:	8a c0       	rjmp	.+276    	; 0x2224 <main+0x45c>
					case 1:
					
					y = read_adc_y();
    2110:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <read_adc_y>
    2114:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <y>
					x = read_adc_x();
    2118:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <read_adc_x>
    211c:	80 93 79 05 	sts	0x0579, r24	; 0x800579 <x>
					pad_c0 = movepad0(buff,pad_c0,x,y);
    2120:	20 91 78 05 	lds	r18, 0x0578	; 0x800578 <y>
    2124:	48 2f       	mov	r20, r24
    2126:	60 91 15 05 	lds	r22, 0x0515	; 0x800515 <pad_c0>
    212a:	84 e0       	ldi	r24, 0x04	; 4
    212c:	91 e0       	ldi	r25, 0x01	; 1
    212e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <movepad0>
    2132:	80 93 15 05 	sts	0x0515, r24	; 0x800515 <pad_c0>
					if(pad_c1>y0)
    2136:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <pad_c1>
    213a:	86 2f       	mov	r24, r22
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	88 16       	cp	r8, r24
    2140:	99 06       	cpc	r9, r25
    2142:	44 f4       	brge	.+16     	; 0x2154 <main+0x38c>
					{
						pad_c1 = movepad1(buff,pad_c1,64,1);
    2144:	23 2d       	mov	r18, r3
    2146:	40 e4       	ldi	r20, 0x40	; 64
    2148:	84 e0       	ldi	r24, 0x04	; 4
    214a:	91 e0       	ldi	r25, 0x01	; 1
    214c:	0e 94 34 09 	call	0x1268	; 0x1268 <movepad1>
    2150:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <pad_c1>
					}
					if(pad_c1<y0)
    2154:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <pad_c1>
    2158:	86 2f       	mov	r24, r22
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	88 15       	cp	r24, r8
    215e:	99 05       	cpc	r25, r9
    2160:	0c f0       	brlt	.+2      	; 0x2164 <main+0x39c>
    2162:	60 c0       	rjmp	.+192    	; 0x2224 <main+0x45c>
					{
						pad_c1 = movepad1(buff,pad_c1,64,62);
    2164:	2e e3       	ldi	r18, 0x3E	; 62
    2166:	40 e4       	ldi	r20, 0x40	; 64
    2168:	84 e0       	ldi	r24, 0x04	; 4
    216a:	91 e0       	ldi	r25, 0x01	; 1
    216c:	0e 94 34 09 	call	0x1268	; 0x1268 <movepad1>
    2170:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <pad_c1>
    2174:	57 c0       	rjmp	.+174    	; 0x2224 <main+0x45c>
					}
					
					
					break;
					case 2:
					acc = adc_read(1);
    2176:	83 2d       	mov	r24, r3
    2178:	0e 94 28 03 	call	0x650	; 0x650 <adc_read>
    217c:	8c 01       	movw	r16, r24
					putnum(acc0);
    217e:	89 81       	ldd	r24, Y+1	; 0x01
    2180:	9a 81       	ldd	r25, Y+2	; 0x02
    2182:	0e 94 e7 02 	call	0x5ce	; 0x5ce <putnum>
					putstring("  ");
    2186:	8b e4       	ldi	r24, 0x4B	; 75
    2188:	95 e0       	ldi	r25, 0x05	; 5
    218a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
					putnum(acc);
    218e:	c8 01       	movw	r24, r16
    2190:	0e 94 e7 02 	call	0x5ce	; 0x5ce <putnum>
					putstring(" \n  ");
    2194:	89 e4       	ldi	r24, 0x49	; 73
    2196:	95 e0       	ldi	r25, 0x05	; 5
    2198:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
					if(acc<(acc0-10))
    219c:	eb 81       	ldd	r30, Y+3	; 0x03
    219e:	fc 81       	ldd	r31, Y+4	; 0x04
    21a0:	0e 17       	cp	r16, r30
    21a2:	1f 07       	cpc	r17, r31
    21a4:	74 f4       	brge	.+28     	; 0x21c2 <main+0x3fa>
					{
						pad_c0 = movepad0(buff,pad_c0,62,1);
    21a6:	23 2d       	mov	r18, r3
    21a8:	4e e3       	ldi	r20, 0x3E	; 62
    21aa:	60 91 15 05 	lds	r22, 0x0515	; 0x800515 <pad_c0>
    21ae:	84 e0       	ldi	r24, 0x04	; 4
    21b0:	91 e0       	ldi	r25, 0x01	; 1
    21b2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <movepad0>
    21b6:	80 93 15 05 	sts	0x0515, r24	; 0x800515 <pad_c0>
						putstring("flag1 \n  ");
    21ba:	84 e4       	ldi	r24, 0x44	; 68
    21bc:	95 e0       	ldi	r25, 0x05	; 5
    21be:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
					}
					if(acc>(acc0+10))
    21c2:	2d 81       	ldd	r18, Y+5	; 0x05
    21c4:	3e 81       	ldd	r19, Y+6	; 0x06
    21c6:	20 17       	cp	r18, r16
    21c8:	31 07       	cpc	r19, r17
    21ca:	74 f4       	brge	.+28     	; 0x21e8 <main+0x420>
					{
						pad_c0 = movepad0(buff,pad_c0,62,62);
    21cc:	2e e3       	ldi	r18, 0x3E	; 62
    21ce:	4e e3       	ldi	r20, 0x3E	; 62
    21d0:	60 91 15 05 	lds	r22, 0x0515	; 0x800515 <pad_c0>
    21d4:	84 e0       	ldi	r24, 0x04	; 4
    21d6:	91 e0       	ldi	r25, 0x01	; 1
    21d8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <movepad0>
    21dc:	80 93 15 05 	sts	0x0515, r24	; 0x800515 <pad_c0>
						putstring("flag2 \n  ");
    21e0:	8e e4       	ldi	r24, 0x4E	; 78
    21e2:	95 e0       	ldi	r25, 0x05	; 5
    21e4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <putstring>
					}
					if(pad_c1>y0)
    21e8:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <pad_c1>
    21ec:	86 2f       	mov	r24, r22
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	88 16       	cp	r8, r24
    21f2:	99 06       	cpc	r9, r25
    21f4:	44 f4       	brge	.+16     	; 0x2206 <main+0x43e>
					{
						pad_c1 = movepad1(buff,pad_c1,64,1);
    21f6:	23 2d       	mov	r18, r3
    21f8:	40 e4       	ldi	r20, 0x40	; 64
    21fa:	84 e0       	ldi	r24, 0x04	; 4
    21fc:	91 e0       	ldi	r25, 0x01	; 1
    21fe:	0e 94 34 09 	call	0x1268	; 0x1268 <movepad1>
    2202:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <pad_c1>
					}
					if(pad_c1<y0)
    2206:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <pad_c1>
    220a:	86 2f       	mov	r24, r22
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	88 15       	cp	r24, r8
    2210:	99 05       	cpc	r25, r9
    2212:	44 f4       	brge	.+16     	; 0x2224 <main+0x45c>
					{
						pad_c1 = movepad1(buff,pad_c1,64,62);
    2214:	2e e3       	ldi	r18, 0x3E	; 62
    2216:	40 e4       	ldi	r20, 0x40	; 64
    2218:	84 e0       	ldi	r24, 0x04	; 4
    221a:	91 e0       	ldi	r25, 0x01	; 1
    221c:	0e 94 34 09 	call	0x1268	; 0x1268 <movepad1>
    2220:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <pad_c1>
					}
					break;
				}

				write_buffer(buff);
    2224:	84 e0       	ldi	r24, 0x04	; 4
    2226:	91 e0       	ldi	r25, 0x01	; 1
    2228:	0e 94 ad 03 	call	0x75a	; 0x75a <write_buffer>
				//putnum(y);
				//putstring("   ");
				//putnum(x);
				//putstring("   \n");
				
				clearcircle(buff,X[i], Y[i], 2,0);
    222c:	04 2d       	mov	r16, r4
    222e:	22 e0       	ldi	r18, 0x02	; 2
    2230:	ec 85       	ldd	r30, Y+12	; 0x0c
    2232:	fd 85       	ldd	r31, Y+13	; 0x0d
    2234:	e1 57       	subi	r30, 0x71	; 113
    2236:	fa 4f       	sbci	r31, 0xFA	; 250
    2238:	40 81       	ld	r20, Z
    223a:	ec 85       	ldd	r30, Y+12	; 0x0c
    223c:	fd 85       	ldd	r31, Y+13	; 0x0d
    223e:	e9 5e       	subi	r30, 0xE9	; 233
    2240:	f9 4f       	sbci	r31, 0xF9	; 249
    2242:	60 81       	ld	r22, Z
    2244:	84 e0       	ldi	r24, 0x04	; 4
    2246:	91 e0       	ldi	r25, 0x01	; 1
    2248:	0e 94 73 06 	call	0xce6	; 0xce6 <clearcircle>
				write_buffer(buff);
    224c:	84 e0       	ldi	r24, 0x04	; 4
    224e:	91 e0       	ldi	r25, 0x01	; 1
    2250:	0e 94 ad 03 	call	0x75a	; 0x75a <write_buffer>
				if (i < length-1 )
    2254:	80 91 7c 05 	lds	r24, 0x057C	; 0x80057c <length>
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	01 97       	sbiw	r24, 0x01	; 1
    225c:	ec 85       	ldd	r30, Y+12	; 0x0c
    225e:	fd 85       	ldd	r31, Y+13	; 0x0d
    2260:	e8 17       	cp	r30, r24
    2262:	f9 07       	cpc	r31, r25
    2264:	1c f4       	brge	.+6      	; 0x226c <main+0x4a4>
				{
					i++;
    2266:	31 96       	adiw	r30, 0x01	; 1
    2268:	fd 87       	std	Y+13, r31	; 0x0d
    226a:	ec 87       	std	Y+12, r30	; 0x0c
				}
				
				fillcircle(buff,X[i], Y[i], 2,0);
    226c:	04 2d       	mov	r16, r4
    226e:	22 e0       	ldi	r18, 0x02	; 2
    2270:	8c 85       	ldd	r24, Y+12	; 0x0c
    2272:	9d 85       	ldd	r25, Y+13	; 0x0d
    2274:	81 57       	subi	r24, 0x71	; 113
    2276:	9a 4f       	sbci	r25, 0xFA	; 250
    2278:	7c 01       	movw	r14, r24
    227a:	fc 01       	movw	r30, r24
    227c:	40 81       	ld	r20, Z
    227e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2280:	9d 85       	ldd	r25, Y+13	; 0x0d
    2282:	89 5e       	subi	r24, 0xE9	; 233
    2284:	99 4f       	sbci	r25, 0xF9	; 249
    2286:	6c 01       	movw	r12, r24
    2288:	fc 01       	movw	r30, r24
    228a:	60 81       	ld	r22, Z
    228c:	84 e0       	ldi	r24, 0x04	; 4
    228e:	91 e0       	ldi	r25, 0x01	; 1
    2290:	0e 94 40 05 	call	0xa80	; 0xa80 <fillcircle>
				x0 = X[i]; y0 = Y[i];
    2294:	f6 01       	movw	r30, r12
    2296:	50 80       	ld	r5, Z
    2298:	f7 01       	movw	r30, r14
    229a:	10 81       	ld	r17, Z
    229c:	81 2e       	mov	r8, r17
    229e:	91 2c       	mov	r9, r1
				//putnum(X[i] );
				//putstring("   ");
				//putnum(Y[i] );
				//putstring("   \n");
				
				write_buffer(buff);
    22a0:	84 e0       	ldi	r24, 0x04	; 4
    22a2:	91 e0       	ldi	r25, 0x01	; 1
    22a4:	0e 94 ad 03 	call	0x75a	; 0x75a <write_buffer>
				if (i == length-1 )
    22a8:	80 91 7c 05 	lds	r24, 0x057C	; 0x80057c <length>
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	01 97       	sbiw	r24, 0x01	; 1
    22b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    22b2:	3d 85       	ldd	r19, Y+13	; 0x0d
    22b4:	28 17       	cp	r18, r24
    22b6:	39 07       	cpc	r19, r25
    22b8:	09 f0       	breq	.+2      	; 0x22bc <main+0x4f4>
    22ba:	40 c2       	rjmp	.+1152   	; 0x273c <main+0x974>
				{
					i++;
				}
				
				fillcircle(buff,X[i], Y[i], 2,0);
				x0 = X[i]; y0 = Y[i];
    22bc:	25 2d       	mov	r18, r5
    22be:	30 e0       	ldi	r19, 0x00	; 0
				//putstring("   \n");
				
				write_buffer(buff);
				if (i == length-1 )
				{
					if((x0==5)&((y0>=pad_c0+7)||(y0<=pad_c0-7)))
    22c0:	43 2d       	mov	r20, r3
    22c2:	25 30       	cpi	r18, 0x05	; 5
    22c4:	31 05       	cpc	r19, r1
    22c6:	09 f0       	breq	.+2      	; 0x22ca <main+0x502>
    22c8:	44 2d       	mov	r20, r4
    22ca:	80 91 15 05 	lds	r24, 0x0515	; 0x800515 <pad_c0>
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	bc 01       	movw	r22, r24
    22d2:	69 5f       	subi	r22, 0xF9	; 249
    22d4:	7f 4f       	sbci	r23, 0xFF	; 255
    22d6:	86 16       	cp	r8, r22
    22d8:	97 06       	cpc	r9, r23
    22da:	44 f4       	brge	.+16     	; 0x22ec <main+0x524>
    22dc:	07 97       	sbiw	r24, 0x07	; 7
    22de:	52 2d       	mov	r21, r2
    22e0:	88 15       	cp	r24, r8
    22e2:	99 05       	cpc	r25, r9
    22e4:	0c f4       	brge	.+2      	; 0x22e8 <main+0x520>
    22e6:	5f 81       	ldd	r21, Y+7	; 0x07
    22e8:	85 2f       	mov	r24, r21
    22ea:	01 c0       	rjmp	.+2      	; 0x22ee <main+0x526>
    22ec:	83 2d       	mov	r24, r3
    22ee:	80 ff       	sbrs	r24, 0
    22f0:	c2 c0       	rjmp	.+388    	; 0x2476 <main+0x6ae>
    22f2:	44 23       	and	r20, r20
    22f4:	09 f4       	brne	.+2      	; 0x22f8 <main+0x530>
    22f6:	bf c0       	rjmp	.+382    	; 0x2476 <main+0x6ae>
					{
						clearcircle(buff,X[i], Y[i], 2,0);
    22f8:	ec 85       	ldd	r30, Y+12	; 0x0c
    22fa:	fd 85       	ldd	r31, Y+13	; 0x0d
    22fc:	e1 57       	subi	r30, 0x71	; 113
    22fe:	fa 4f       	sbci	r31, 0xFA	; 250
    2300:	8c 85       	ldd	r24, Y+12	; 0x0c
    2302:	9d 85       	ldd	r25, Y+13	; 0x0d
    2304:	89 5e       	subi	r24, 0xE9	; 233
    2306:	99 4f       	sbci	r25, 0xF9	; 249
    2308:	04 2d       	mov	r16, r4
    230a:	22 e0       	ldi	r18, 0x02	; 2
    230c:	40 81       	ld	r20, Z
    230e:	fc 01       	movw	r30, r24
    2310:	60 81       	ld	r22, Z
    2312:	84 e0       	ldi	r24, 0x04	; 4
    2314:	91 e0       	ldi	r25, 0x01	; 1
    2316:	0e 94 73 06 	call	0xce6	; 0xce6 <clearcircle>
						OCR1A = 107;
    231a:	8b e6       	ldi	r24, 0x6B	; 107
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	e8 e8       	ldi	r30, 0x88	; 136
    2320:	f0 e0       	ldi	r31, 0x00	; 0
    2322:	91 83       	std	Z+1, r25	; 0x01
    2324:	80 83       	st	Z, r24
						TIMSK1 |= (1 << OCIE1A);
    2326:	f5 01       	movw	r30, r10
    2328:	80 81       	ld	r24, Z
    232a:	82 60       	ori	r24, 0x02	; 2
    232c:	80 83       	st	Z, r24
						blink_white();
    232e:	0e 94 9f 09 	call	0x133e	; 0x133e <blink_white>
    2332:	ff ef       	ldi	r31, 0xFF	; 255
    2334:	23 ec       	ldi	r18, 0xC3	; 195
    2336:	39 e0       	ldi	r19, 0x09	; 9
    2338:	f1 50       	subi	r31, 0x01	; 1
    233a:	20 40       	sbci	r18, 0x00	; 0
    233c:	30 40       	sbci	r19, 0x00	; 0
    233e:	e1 f7       	brne	.-8      	; 0x2338 <main+0x570>
    2340:	00 c0       	rjmp	.+0      	; 0x2342 <main+0x57a>
    2342:	00 00       	nop
						_delay_ms(200);
						blink_white();
    2344:	0e 94 9f 09 	call	0x133e	; 0x133e <blink_white>
						TIMSK1 &= ~(1 << OCIE1A);
    2348:	f5 01       	movw	r30, r10
    234a:	80 81       	ld	r24, Z
    234c:	8d 7f       	andi	r24, 0xFD	; 253
    234e:	80 83       	st	Z, r24
						PORTB &= ~(1 << PORTB3);
    2350:	2b 98       	cbi	0x05, 3	; 5
						
						slope = rand()%100;
    2352:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
						slope = 9*slope/500 +0.5;
    2356:	64 e6       	ldi	r22, 0x64	; 100
    2358:	70 e0       	ldi	r23, 0x00	; 0
    235a:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    235e:	bc 01       	movw	r22, r24
    2360:	99 0f       	add	r25, r25
    2362:	88 0b       	sbc	r24, r24
    2364:	99 0b       	sbc	r25, r25
    2366:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    236a:	20 e0       	ldi	r18, 0x00	; 0
    236c:	30 e0       	ldi	r19, 0x00	; 0
    236e:	40 e1       	ldi	r20, 0x10	; 16
    2370:	51 e4       	ldi	r21, 0x41	; 65
    2372:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	30 e0       	ldi	r19, 0x00	; 0
    237a:	4a ef       	ldi	r20, 0xFA	; 250
    237c:	53 e4       	ldi	r21, 0x43	; 67
    237e:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	30 e0       	ldi	r19, 0x00	; 0
    2386:	40 e0       	ldi	r20, 0x00	; 0
    2388:	5f e3       	ldi	r21, 0x3F	; 63
    238a:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    238e:	60 93 13 06 	sts	0x0613, r22	; 0x800613 <slope>
    2392:	70 93 14 06 	sts	0x0614, r23	; 0x800614 <slope+0x1>
    2396:	80 93 15 06 	sts	0x0615, r24	; 0x800615 <slope+0x2>
    239a:	90 93 16 06 	sts	0x0616, r25	; 0x800616 <slope+0x3>
						dr = rand()%2;
    239e:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    23a2:	81 70       	andi	r24, 0x01	; 1
    23a4:	90 78       	andi	r25, 0x80	; 128
    23a6:	99 23       	and	r25, r25
    23a8:	24 f4       	brge	.+8      	; 0x23b2 <main+0x5ea>
    23aa:	01 97       	sbiw	r24, 0x01	; 1
    23ac:	8e 6f       	ori	r24, 0xFE	; 254
    23ae:	9f 6f       	ori	r25, 0xFF	; 255
    23b0:	01 96       	adiw	r24, 0x01	; 1
    23b2:	90 93 12 06 	sts	0x0612, r25	; 0x800612 <dr+0x1>
    23b6:	80 93 11 06 	sts	0x0611, r24	; 0x800611 <dr>
						kk = rand()%3;
    23ba:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    23be:	63 e0       	ldi	r22, 0x03	; 3
    23c0:	70 e0       	ldi	r23, 0x00	; 0
    23c2:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    23c6:	90 93 10 06 	sts	0x0610, r25	; 0x800610 <kk+0x1>
    23ca:	80 93 0f 06 	sts	0x060F, r24	; 0x80060f <kk>
						if((kk==0) || (kk==2))
    23ce:	8d 7f       	andi	r24, 0xFD	; 253
    23d0:	89 2b       	or	r24, r25
    23d2:	89 f4       	brne	.+34     	; 0x23f6 <main+0x62e>
						{
							slope = -slope;
    23d4:	80 91 13 06 	lds	r24, 0x0613	; 0x800613 <slope>
    23d8:	90 91 14 06 	lds	r25, 0x0614	; 0x800614 <slope+0x1>
    23dc:	a0 91 15 06 	lds	r26, 0x0615	; 0x800615 <slope+0x2>
    23e0:	b0 91 16 06 	lds	r27, 0x0616	; 0x800616 <slope+0x3>
    23e4:	b0 58       	subi	r27, 0x80	; 128
    23e6:	80 93 13 06 	sts	0x0613, r24	; 0x800613 <slope>
    23ea:	90 93 14 06 	sts	0x0614, r25	; 0x800614 <slope+0x1>
    23ee:	a0 93 15 06 	sts	0x0615, r26	; 0x800615 <slope+0x2>
    23f2:	b0 93 16 06 	sts	0x0616, r27	; 0x800616 <slope+0x3>
						}
						path_algorithm(buff,63, 32, 2  ,dr,slope);
    23f6:	c0 90 13 06 	lds	r12, 0x0613	; 0x800613 <slope>
    23fa:	d0 90 14 06 	lds	r13, 0x0614	; 0x800614 <slope+0x1>
    23fe:	e0 90 15 06 	lds	r14, 0x0615	; 0x800615 <slope+0x2>
    2402:	f0 90 16 06 	lds	r15, 0x0616	; 0x800616 <slope+0x3>
    2406:	e1 e1       	ldi	r30, 0x11	; 17
    2408:	f6 e0       	ldi	r31, 0x06	; 6
    240a:	00 81       	ld	r16, Z
    240c:	22 e0       	ldi	r18, 0x02	; 2
    240e:	40 e2       	ldi	r20, 0x20	; 32
    2410:	6f e3       	ldi	r22, 0x3F	; 63
    2412:	84 e0       	ldi	r24, 0x04	; 4
    2414:	91 e0       	ldi	r25, 0x01	; 1
    2416:	0e 94 44 0b 	call	0x1688	; 0x1688 <path_algorithm>
						
						count2++;
    241a:	80 91 74 05 	lds	r24, 0x0574	; 0x800574 <__data_end>
    241e:	90 91 75 05 	lds	r25, 0x0575	; 0x800575 <__data_end+0x1>
    2422:	01 96       	adiw	r24, 0x01	; 1
    2424:	90 93 75 05 	sts	0x0575, r25	; 0x800575 <__data_end+0x1>
    2428:	80 93 74 05 	sts	0x0574, r24	; 0x800574 <__data_end>
						if(count2>=3)
    242c:	03 97       	sbiw	r24, 0x03	; 3
    242e:	0c f4       	brge	.+2      	; 0x2432 <main+0x66a>
    2430:	80 c1       	rjmp	.+768    	; 0x2732 <main+0x96a>
						{
							count1 = 0;
    2432:	10 92 76 05 	sts	0x0576, r1	; 0x800576 <count1>
    2436:	10 92 77 05 	sts	0x0577, r1	; 0x800577 <count1+0x1>
							count2 = 0;
    243a:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <__data_end>
    243e:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <__data_end+0x1>
							flag = 0;
							clear_buffer(buff);
    2442:	84 e0       	ldi	r24, 0x04	; 4
    2444:	91 e0       	ldi	r25, 0x01	; 1
    2446:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
							drawstring(buff, 33, 2, "Player 2 Win!");
    244a:	28 e5       	ldi	r18, 0x58	; 88
    244c:	35 e0       	ldi	r19, 0x05	; 5
    244e:	42 e0       	ldi	r20, 0x02	; 2
    2450:	61 e2       	ldi	r22, 0x21	; 33
    2452:	84 e0       	ldi	r24, 0x04	; 4
    2454:	91 e0       	ldi	r25, 0x01	; 1
    2456:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
    245a:	ff ef       	ldi	r31, 0xFF	; 255
    245c:	29 e6       	ldi	r18, 0x69	; 105
    245e:	38 e1       	ldi	r19, 0x18	; 24
    2460:	f1 50       	subi	r31, 0x01	; 1
    2462:	20 40       	sbci	r18, 0x00	; 0
    2464:	30 40       	sbci	r19, 0x00	; 0
    2466:	e1 f7       	brne	.-8      	; 0x2460 <main+0x698>
    2468:	00 c0       	rjmp	.+0      	; 0x246a <main+0x6a2>
    246a:	00 00       	nop
							_delay_ms(500);
							clear_buffer(buff);
    246c:	84 e0       	ldi	r24, 0x04	; 4
    246e:	91 e0       	ldi	r25, 0x01	; 1
    2470:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
							break;
    2474:	f1 cc       	rjmp	.-1566   	; 0x1e58 <main+0x90>
						}
						
					}
					else if((x0==122)&((y0>=pad_c1+7)||(y0<=pad_c1-7)))
    2476:	a3 2d       	mov	r26, r3
    2478:	2a 37       	cpi	r18, 0x7A	; 122
    247a:	31 05       	cpc	r19, r1
    247c:	09 f0       	breq	.+2      	; 0x2480 <main+0x6b8>
    247e:	a4 2d       	mov	r26, r4
    2480:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <pad_c1>
    2484:	90 e0       	ldi	r25, 0x00	; 0
    2486:	bc 01       	movw	r22, r24
    2488:	69 5f       	subi	r22, 0xF9	; 249
    248a:	7f 4f       	sbci	r23, 0xFF	; 255
    248c:	86 16       	cp	r8, r22
    248e:	97 06       	cpc	r9, r23
    2490:	44 f4       	brge	.+16     	; 0x24a2 <main+0x6da>
    2492:	52 2d       	mov	r21, r2
    2494:	fc 01       	movw	r30, r24
    2496:	37 97       	sbiw	r30, 0x07	; 7
    2498:	e8 15       	cp	r30, r8
    249a:	f9 05       	cpc	r31, r9
    249c:	1c f4       	brge	.+6      	; 0x24a4 <main+0x6dc>
    249e:	5f 81       	ldd	r21, Y+7	; 0x07
    24a0:	01 c0       	rjmp	.+2      	; 0x24a4 <main+0x6dc>
    24a2:	53 2d       	mov	r21, r3
    24a4:	50 ff       	sbrs	r21, 0
    24a6:	c2 c0       	rjmp	.+388    	; 0x262c <main+0x864>
    24a8:	aa 23       	and	r26, r26
    24aa:	09 f4       	brne	.+2      	; 0x24ae <main+0x6e6>
    24ac:	bf c0       	rjmp	.+382    	; 0x262c <main+0x864>
					{
						clearcircle(buff,X[i], Y[i], 2,0);
    24ae:	ec 85       	ldd	r30, Y+12	; 0x0c
    24b0:	fd 85       	ldd	r31, Y+13	; 0x0d
    24b2:	e1 57       	subi	r30, 0x71	; 113
    24b4:	fa 4f       	sbci	r31, 0xFA	; 250
    24b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    24b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    24ba:	89 5e       	subi	r24, 0xE9	; 233
    24bc:	99 4f       	sbci	r25, 0xF9	; 249
    24be:	04 2d       	mov	r16, r4
    24c0:	22 e0       	ldi	r18, 0x02	; 2
    24c2:	40 81       	ld	r20, Z
    24c4:	fc 01       	movw	r30, r24
    24c6:	60 81       	ld	r22, Z
    24c8:	84 e0       	ldi	r24, 0x04	; 4
    24ca:	91 e0       	ldi	r25, 0x01	; 1
    24cc:	0e 94 73 06 	call	0xce6	; 0xce6 <clearcircle>
						OCR1A = 60;
    24d0:	2c e3       	ldi	r18, 0x3C	; 60
    24d2:	30 e0       	ldi	r19, 0x00	; 0
    24d4:	e8 e8       	ldi	r30, 0x88	; 136
    24d6:	f0 e0       	ldi	r31, 0x00	; 0
    24d8:	31 83       	std	Z+1, r19	; 0x01
    24da:	20 83       	st	Z, r18
						TIMSK1 |= (1 << OCIE1A);
    24dc:	f5 01       	movw	r30, r10
    24de:	80 81       	ld	r24, Z
    24e0:	82 60       	ori	r24, 0x02	; 2
    24e2:	80 83       	st	Z, r24
						blink_purple();
    24e4:	0e 94 75 09 	call	0x12ea	; 0x12ea <blink_purple>
    24e8:	ff ef       	ldi	r31, 0xFF	; 255
    24ea:	23 ec       	ldi	r18, 0xC3	; 195
    24ec:	39 e0       	ldi	r19, 0x09	; 9
    24ee:	f1 50       	subi	r31, 0x01	; 1
    24f0:	20 40       	sbci	r18, 0x00	; 0
    24f2:	30 40       	sbci	r19, 0x00	; 0
    24f4:	e1 f7       	brne	.-8      	; 0x24ee <main+0x726>
    24f6:	00 c0       	rjmp	.+0      	; 0x24f8 <main+0x730>
    24f8:	00 00       	nop
						_delay_ms(200);
						blink_purple();
    24fa:	0e 94 75 09 	call	0x12ea	; 0x12ea <blink_purple>
						TIMSK1 &= ~(1 << OCIE1A);
    24fe:	f5 01       	movw	r30, r10
    2500:	80 81       	ld	r24, Z
    2502:	8d 7f       	andi	r24, 0xFD	; 253
    2504:	80 83       	st	Z, r24
						PORTB &= ~(1 << PORTB3);
    2506:	2b 98       	cbi	0x05, 3	; 5
						
						slope = rand()%100;
    2508:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
						slope = 9*slope/500 +0.5;
    250c:	64 e6       	ldi	r22, 0x64	; 100
    250e:	70 e0       	ldi	r23, 0x00	; 0
    2510:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    2514:	bc 01       	movw	r22, r24
    2516:	99 0f       	add	r25, r25
    2518:	88 0b       	sbc	r24, r24
    251a:	99 0b       	sbc	r25, r25
    251c:	0e 94 ed 14 	call	0x29da	; 0x29da <__floatsisf>
    2520:	20 e0       	ldi	r18, 0x00	; 0
    2522:	30 e0       	ldi	r19, 0x00	; 0
    2524:	40 e1       	ldi	r20, 0x10	; 16
    2526:	51 e4       	ldi	r21, 0x41	; 65
    2528:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__mulsf3>
    252c:	20 e0       	ldi	r18, 0x00	; 0
    252e:	30 e0       	ldi	r19, 0x00	; 0
    2530:	4a ef       	ldi	r20, 0xFA	; 250
    2532:	53 e4       	ldi	r21, 0x43	; 67
    2534:	0e 94 43 14 	call	0x2886	; 0x2886 <__divsf3>
    2538:	20 e0       	ldi	r18, 0x00	; 0
    253a:	30 e0       	ldi	r19, 0x00	; 0
    253c:	40 e0       	ldi	r20, 0x00	; 0
    253e:	5f e3       	ldi	r21, 0x3F	; 63
    2540:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__addsf3>
    2544:	60 93 13 06 	sts	0x0613, r22	; 0x800613 <slope>
    2548:	70 93 14 06 	sts	0x0614, r23	; 0x800614 <slope+0x1>
    254c:	80 93 15 06 	sts	0x0615, r24	; 0x800615 <slope+0x2>
    2550:	90 93 16 06 	sts	0x0616, r25	; 0x800616 <slope+0x3>
						dr = rand()%2;
    2554:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    2558:	81 70       	andi	r24, 0x01	; 1
    255a:	90 78       	andi	r25, 0x80	; 128
    255c:	99 23       	and	r25, r25
    255e:	24 f4       	brge	.+8      	; 0x2568 <main+0x7a0>
    2560:	01 97       	sbiw	r24, 0x01	; 1
    2562:	8e 6f       	ori	r24, 0xFE	; 254
    2564:	9f 6f       	ori	r25, 0xFF	; 255
    2566:	01 96       	adiw	r24, 0x01	; 1
    2568:	90 93 12 06 	sts	0x0612, r25	; 0x800612 <dr+0x1>
    256c:	80 93 11 06 	sts	0x0611, r24	; 0x800611 <dr>
						kk = rand()%3;
    2570:	0e 94 92 16 	call	0x2d24	; 0x2d24 <rand>
    2574:	63 e0       	ldi	r22, 0x03	; 3
    2576:	70 e0       	ldi	r23, 0x00	; 0
    2578:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__divmodhi4>
    257c:	90 93 10 06 	sts	0x0610, r25	; 0x800610 <kk+0x1>
    2580:	80 93 0f 06 	sts	0x060F, r24	; 0x80060f <kk>
						if((kk==0) || (kk==2))
    2584:	8d 7f       	andi	r24, 0xFD	; 253
    2586:	89 2b       	or	r24, r25
    2588:	89 f4       	brne	.+34     	; 0x25ac <main+0x7e4>
						{
							slope = -slope;
    258a:	80 91 13 06 	lds	r24, 0x0613	; 0x800613 <slope>
    258e:	90 91 14 06 	lds	r25, 0x0614	; 0x800614 <slope+0x1>
    2592:	a0 91 15 06 	lds	r26, 0x0615	; 0x800615 <slope+0x2>
    2596:	b0 91 16 06 	lds	r27, 0x0616	; 0x800616 <slope+0x3>
    259a:	b0 58       	subi	r27, 0x80	; 128
    259c:	80 93 13 06 	sts	0x0613, r24	; 0x800613 <slope>
    25a0:	90 93 14 06 	sts	0x0614, r25	; 0x800614 <slope+0x1>
    25a4:	a0 93 15 06 	sts	0x0615, r26	; 0x800615 <slope+0x2>
    25a8:	b0 93 16 06 	sts	0x0616, r27	; 0x800616 <slope+0x3>
						}
						path_algorithm(buff,63, 32, 2  ,dr,slope);
    25ac:	c0 90 13 06 	lds	r12, 0x0613	; 0x800613 <slope>
    25b0:	d0 90 14 06 	lds	r13, 0x0614	; 0x800614 <slope+0x1>
    25b4:	e0 90 15 06 	lds	r14, 0x0615	; 0x800615 <slope+0x2>
    25b8:	f0 90 16 06 	lds	r15, 0x0616	; 0x800616 <slope+0x3>
    25bc:	e1 e1       	ldi	r30, 0x11	; 17
    25be:	f6 e0       	ldi	r31, 0x06	; 6
    25c0:	00 81       	ld	r16, Z
    25c2:	22 e0       	ldi	r18, 0x02	; 2
    25c4:	40 e2       	ldi	r20, 0x20	; 32
    25c6:	6f e3       	ldi	r22, 0x3F	; 63
    25c8:	84 e0       	ldi	r24, 0x04	; 4
    25ca:	91 e0       	ldi	r25, 0x01	; 1
    25cc:	0e 94 44 0b 	call	0x1688	; 0x1688 <path_algorithm>
						
						count1++;
    25d0:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <count1>
    25d4:	90 91 77 05 	lds	r25, 0x0577	; 0x800577 <count1+0x1>
    25d8:	01 96       	adiw	r24, 0x01	; 1
    25da:	90 93 77 05 	sts	0x0577, r25	; 0x800577 <count1+0x1>
    25de:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <count1>
						if(count1>=3)
    25e2:	03 97       	sbiw	r24, 0x03	; 3
    25e4:	0c f4       	brge	.+2      	; 0x25e8 <main+0x820>
    25e6:	a8 c0       	rjmp	.+336    	; 0x2738 <main+0x970>
						{
							count1 = 0;
    25e8:	10 92 76 05 	sts	0x0576, r1	; 0x800576 <count1>
    25ec:	10 92 77 05 	sts	0x0577, r1	; 0x800577 <count1+0x1>
							count2 = 0;
    25f0:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <__data_end>
    25f4:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <__data_end+0x1>
							flag = 0;
							clear_buffer(buff);
    25f8:	84 e0       	ldi	r24, 0x04	; 4
    25fa:	91 e0       	ldi	r25, 0x01	; 1
    25fc:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
							drawstring(buff, 33, 2, "Player 1 Win!");
    2600:	26 e6       	ldi	r18, 0x66	; 102
    2602:	35 e0       	ldi	r19, 0x05	; 5
    2604:	42 e0       	ldi	r20, 0x02	; 2
    2606:	61 e2       	ldi	r22, 0x21	; 33
    2608:	84 e0       	ldi	r24, 0x04	; 4
    260a:	91 e0       	ldi	r25, 0x01	; 1
    260c:	0e 94 30 04 	call	0x860	; 0x860 <drawstring>
    2610:	ff ef       	ldi	r31, 0xFF	; 255
    2612:	29 e6       	ldi	r18, 0x69	; 105
    2614:	38 e1       	ldi	r19, 0x18	; 24
    2616:	f1 50       	subi	r31, 0x01	; 1
    2618:	20 40       	sbci	r18, 0x00	; 0
    261a:	30 40       	sbci	r19, 0x00	; 0
    261c:	e1 f7       	brne	.-8      	; 0x2616 <main+0x84e>
    261e:	00 c0       	rjmp	.+0      	; 0x2620 <main+0x858>
    2620:	00 00       	nop
							_delay_ms(500);
							clear_buffer(buff);
    2622:	84 e0       	ldi	r24, 0x04	; 4
    2624:	91 e0       	ldi	r25, 0x01	; 1
    2626:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <clear_buffer>
							break;
    262a:	16 cc       	rjmp	.-2004   	; 0x1e58 <main+0x90>
							
						}
					}
					else if(((x0==122)||(x0==5))&((y0<pad_c1+7)||(y0>pad_c1-7)))
    262c:	2a 37       	cpi	r18, 0x7A	; 122
    262e:	31 05       	cpc	r19, r1
    2630:	09 f4       	brne	.+2      	; 0x2634 <main+0x86c>
    2632:	9e c0       	rjmp	.+316    	; 0x2770 <main+0x9a8>
    2634:	50 e0       	ldi	r21, 0x00	; 0
    2636:	86 16       	cp	r8, r22
    2638:	97 06       	cpc	r9, r23
    263a:	5c f0       	brlt	.+22     	; 0x2652 <main+0x88a>
    263c:	07 97       	sbiw	r24, 0x07	; 7
    263e:	32 2d       	mov	r19, r2
    2640:	28 85       	ldd	r18, Y+8	; 0x08
    2642:	88 15       	cp	r24, r8
    2644:	99 05       	cpc	r25, r9
    2646:	14 f0       	brlt	.+4      	; 0x264c <main+0x884>
    2648:	3f 81       	ldd	r19, Y+7	; 0x07
    264a:	29 85       	ldd	r18, Y+9	; 0x09
    264c:	83 2f       	mov	r24, r19
    264e:	92 2f       	mov	r25, r18
    2650:	02 c0       	rjmp	.+4      	; 0x2656 <main+0x88e>
    2652:	82 2d       	mov	r24, r2
    2654:	98 85       	ldd	r25, Y+8	; 0x08
    2656:	84 23       	and	r24, r20
    2658:	95 23       	and	r25, r21
    265a:	80 ff       	sbrs	r24, 0
    265c:	35 c0       	rjmp	.+106    	; 0x26c8 <main+0x900>
					{
						path_algorithm(buff,x0, y0, 2 ,ptr[2],ptr[3]);
    265e:	c0 90 89 05 	lds	r12, 0x0589	; 0x800589 <ptr+0xc>
    2662:	d0 90 8a 05 	lds	r13, 0x058A	; 0x80058a <ptr+0xd>
    2666:	e0 90 8b 05 	lds	r14, 0x058B	; 0x80058b <ptr+0xe>
    266a:	f0 90 8c 05 	lds	r15, 0x058C	; 0x80058c <ptr+0xf>
    266e:	60 91 85 05 	lds	r22, 0x0585	; 0x800585 <ptr+0x8>
    2672:	70 91 86 05 	lds	r23, 0x0586	; 0x800586 <ptr+0x9>
    2676:	80 91 87 05 	lds	r24, 0x0587	; 0x800587 <ptr+0xa>
    267a:	90 91 88 05 	lds	r25, 0x0588	; 0x800588 <ptr+0xb>
    267e:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    2682:	06 2f       	mov	r16, r22
    2684:	22 e0       	ldi	r18, 0x02	; 2
    2686:	41 2f       	mov	r20, r17
    2688:	65 2d       	mov	r22, r5
    268a:	84 e0       	ldi	r24, 0x04	; 4
    268c:	91 e0       	ldi	r25, 0x01	; 1
    268e:	0e 94 44 0b 	call	0x1688	; 0x1688 <path_algorithm>
						OCR1A = 120;
    2692:	28 e7       	ldi	r18, 0x78	; 120
    2694:	30 e0       	ldi	r19, 0x00	; 0
    2696:	e8 e8       	ldi	r30, 0x88	; 136
    2698:	f0 e0       	ldi	r31, 0x00	; 0
    269a:	31 83       	std	Z+1, r19	; 0x01
    269c:	20 83       	st	Z, r18
						TIMSK1 |= (1 << OCIE1A);
    269e:	f5 01       	movw	r30, r10
    26a0:	80 81       	ld	r24, Z
    26a2:	82 60       	ori	r24, 0x02	; 2
    26a4:	80 83       	st	Z, r24
    26a6:	ff ef       	ldi	r31, 0xFF	; 255
    26a8:	29 ef       	ldi	r18, 0xF9	; 249
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	f1 50       	subi	r31, 0x01	; 1
    26ae:	20 40       	sbci	r18, 0x00	; 0
    26b0:	30 40       	sbci	r19, 0x00	; 0
    26b2:	e1 f7       	brne	.-8      	; 0x26ac <main+0x8e4>
    26b4:	00 c0       	rjmp	.+0      	; 0x26b6 <main+0x8ee>
    26b6:	00 00       	nop
						_delay_ms(20);
						TIMSK1 &= ~(1 << OCIE1A);
    26b8:	f5 01       	movw	r30, r10
    26ba:	80 81       	ld	r24, Z
    26bc:	8d 7f       	andi	r24, 0xFD	; 253
    26be:	80 83       	st	Z, r24
						PORTB &= ~(1 << PORTB3);
    26c0:	2b 98       	cbi	0x05, 3	; 5
						_delay_ms(20);
						TIMSK1 &= ~(1 << OCIE1A);
						PORTB &= ~(1 << PORTB3);
					}
					
					i = 0;
    26c2:	1d 86       	std	Y+13, r1	; 0x0d
    26c4:	1c 86       	std	Y+12, r1	; 0x0c
    26c6:	3a c0       	rjmp	.+116    	; 0x273c <main+0x974>
						TIMSK1 &= ~(1 << OCIE1A);
						PORTB &= ~(1 << PORTB3);
					}
					else
					{
						path_algorithm(buff,x0, y0, 2 ,ptr[2],ptr[3]);
    26c8:	c0 90 89 05 	lds	r12, 0x0589	; 0x800589 <ptr+0xc>
    26cc:	d0 90 8a 05 	lds	r13, 0x058A	; 0x80058a <ptr+0xd>
    26d0:	e0 90 8b 05 	lds	r14, 0x058B	; 0x80058b <ptr+0xe>
    26d4:	f0 90 8c 05 	lds	r15, 0x058C	; 0x80058c <ptr+0xf>
    26d8:	60 91 85 05 	lds	r22, 0x0585	; 0x800585 <ptr+0x8>
    26dc:	70 91 86 05 	lds	r23, 0x0586	; 0x800586 <ptr+0x9>
    26e0:	80 91 87 05 	lds	r24, 0x0587	; 0x800587 <ptr+0xa>
    26e4:	90 91 88 05 	lds	r25, 0x0588	; 0x800588 <ptr+0xb>
    26e8:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    26ec:	06 2f       	mov	r16, r22
    26ee:	22 e0       	ldi	r18, 0x02	; 2
    26f0:	41 2f       	mov	r20, r17
    26f2:	65 2d       	mov	r22, r5
    26f4:	84 e0       	ldi	r24, 0x04	; 4
    26f6:	91 e0       	ldi	r25, 0x01	; 1
    26f8:	0e 94 44 0b 	call	0x1688	; 0x1688 <path_algorithm>
						OCR1A = 80;
    26fc:	20 e5       	ldi	r18, 0x50	; 80
    26fe:	30 e0       	ldi	r19, 0x00	; 0
    2700:	e8 e8       	ldi	r30, 0x88	; 136
    2702:	f0 e0       	ldi	r31, 0x00	; 0
    2704:	31 83       	std	Z+1, r19	; 0x01
    2706:	20 83       	st	Z, r18
						TIMSK1 |= (1 << OCIE1A);
    2708:	f5 01       	movw	r30, r10
    270a:	80 81       	ld	r24, Z
    270c:	82 60       	ori	r24, 0x02	; 2
    270e:	80 83       	st	Z, r24
    2710:	ff ef       	ldi	r31, 0xFF	; 255
    2712:	29 ef       	ldi	r18, 0xF9	; 249
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	f1 50       	subi	r31, 0x01	; 1
    2718:	20 40       	sbci	r18, 0x00	; 0
    271a:	30 40       	sbci	r19, 0x00	; 0
    271c:	e1 f7       	brne	.-8      	; 0x2716 <main+0x94e>
    271e:	00 c0       	rjmp	.+0      	; 0x2720 <main+0x958>
    2720:	00 00       	nop
						_delay_ms(20);
						TIMSK1 &= ~(1 << OCIE1A);
    2722:	f5 01       	movw	r30, r10
    2724:	80 81       	ld	r24, Z
    2726:	8d 7f       	andi	r24, 0xFD	; 253
    2728:	80 83       	st	Z, r24
						PORTB &= ~(1 << PORTB3);
    272a:	2b 98       	cbi	0x05, 3	; 5
					}
					
					i = 0;
    272c:	1d 86       	std	Y+13, r1	; 0x0d
    272e:	1c 86       	std	Y+12, r1	; 0x0c
    2730:	05 c0       	rjmp	.+10     	; 0x273c <main+0x974>
    2732:	1d 86       	std	Y+13, r1	; 0x0d
    2734:	1c 86       	std	Y+12, r1	; 0x0c
    2736:	02 c0       	rjmp	.+4      	; 0x273c <main+0x974>
    2738:	1d 86       	std	Y+13, r1	; 0x0d
    273a:	1c 86       	std	Y+12, r1	; 0x0c
			
			int i = 0,flag = 1;
			while (flag)
			{
				
				record1(count1);
    273c:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <count1>
    2740:	90 91 77 05 	lds	r25, 0x0577	; 0x800577 <count1+0x1>
    2744:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <record1>
				record2(count2);
    2748:	80 91 74 05 	lds	r24, 0x0574	; 0x800574 <__data_end>
    274c:	90 91 75 05 	lds	r25, 0x0575	; 0x800575 <__data_end+0x1>
    2750:	0e 94 0d 0a 	call	0x141a	; 0x141a <record2>
    2754:	10 e0       	ldi	r17, 0x00	; 0
    2756:	a2 cc       	rjmp	.-1724   	; 0x209c <main+0x2d4>
			}
			if((x>=43)&(x<=43+40)&(y>=24)&(y<32))
			{
				mode = 0;
			}
			if((x>=43)&(x<=43+40)&(y>=38)&(y<48))
    2758:	46 52       	subi	r20, 0x26	; 38
    275a:	83 2d       	mov	r24, r3
    275c:	4a 30       	cpi	r20, 0x0A	; 10
    275e:	08 f0       	brcs	.+2      	; 0x2762 <main+0x99a>
    2760:	84 2d       	mov	r24, r4
    2762:	88 23       	and	r24, r24
    2764:	11 f0       	breq	.+4      	; 0x276a <main+0x9a2>
    2766:	51 11       	cpse	r21, r1
    2768:	f6 cb       	rjmp	.-2068   	; 0x1f56 <main+0x18e>
	

	
	while(1)
	{
		acc0 = 0;
    276a:	19 82       	std	Y+1, r1	; 0x01
    276c:	1a 82       	std	Y+2, r1	; 0x02
    276e:	19 cc       	rjmp	.-1998   	; 0x1fa2 <main+0x1da>
							clear_buffer(buff);
							break;
							
						}
					}
					else if(((x0==122)||(x0==5))&((y0<pad_c1+7)||(y0>pad_c1-7)))
    2770:	86 16       	cp	r8, r22
    2772:	97 06       	cpc	r9, r23
    2774:	0c f4       	brge	.+2      	; 0x2778 <main+0x9b0>
    2776:	73 cf       	rjmp	.-282    	; 0x265e <main+0x896>
    2778:	42 2d       	mov	r20, r2
    277a:	58 85       	ldd	r21, Y+8	; 0x08
    277c:	5f cf       	rjmp	.-322    	; 0x263c <main+0x874>

0000277e <__vector_11>:
	
	
}

ISR(TIMER1_COMPA_vect)
{
    277e:	1f 92       	push	r1
    2780:	0f 92       	push	r0
    2782:	0f b6       	in	r0, 0x3f	; 63
    2784:	0f 92       	push	r0
    2786:	11 24       	eor	r1, r1
    2788:	8f 93       	push	r24
    278a:	9f 93       	push	r25
	//toggle port to generate pulses
	PORTB ^= (1 << PORTB3);
    278c:	95 b1       	in	r25, 0x05	; 5
    278e:	88 e0       	ldi	r24, 0x08	; 8
    2790:	89 27       	eor	r24, r25
    2792:	85 b9       	out	0x05, r24	; 5
    2794:	9f 91       	pop	r25
    2796:	8f 91       	pop	r24
    2798:	0f 90       	pop	r0
    279a:	0f be       	out	0x3f, r0	; 63
    279c:	0f 90       	pop	r0
    279e:	1f 90       	pop	r1
    27a0:	18 95       	reti

000027a2 <__subsf3>:
    27a2:	50 58       	subi	r21, 0x80	; 128

000027a4 <__addsf3>:
    27a4:	bb 27       	eor	r27, r27
    27a6:	aa 27       	eor	r26, r26
    27a8:	0e 94 e9 13 	call	0x27d2	; 0x27d2 <__addsf3x>
    27ac:	0c 94 63 15 	jmp	0x2ac6	; 0x2ac6 <__fp_round>
    27b0:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <__fp_pscA>
    27b4:	38 f0       	brcs	.+14     	; 0x27c4 <__addsf3+0x20>
    27b6:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__fp_pscB>
    27ba:	20 f0       	brcs	.+8      	; 0x27c4 <__addsf3+0x20>
    27bc:	39 f4       	brne	.+14     	; 0x27cc <__addsf3+0x28>
    27be:	9f 3f       	cpi	r25, 0xFF	; 255
    27c0:	19 f4       	brne	.+6      	; 0x27c8 <__addsf3+0x24>
    27c2:	26 f4       	brtc	.+8      	; 0x27cc <__addsf3+0x28>
    27c4:	0c 94 52 15 	jmp	0x2aa4	; 0x2aa4 <__fp_nan>
    27c8:	0e f4       	brtc	.+2      	; 0x27cc <__addsf3+0x28>
    27ca:	e0 95       	com	r30
    27cc:	e7 fb       	bst	r30, 7
    27ce:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__fp_inf>

000027d2 <__addsf3x>:
    27d2:	e9 2f       	mov	r30, r25
    27d4:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <__fp_split3>
    27d8:	58 f3       	brcs	.-42     	; 0x27b0 <__addsf3+0xc>
    27da:	ba 17       	cp	r27, r26
    27dc:	62 07       	cpc	r22, r18
    27de:	73 07       	cpc	r23, r19
    27e0:	84 07       	cpc	r24, r20
    27e2:	95 07       	cpc	r25, r21
    27e4:	20 f0       	brcs	.+8      	; 0x27ee <__addsf3x+0x1c>
    27e6:	79 f4       	brne	.+30     	; 0x2806 <__addsf3x+0x34>
    27e8:	a6 f5       	brtc	.+104    	; 0x2852 <__addsf3x+0x80>
    27ea:	0c 94 96 15 	jmp	0x2b2c	; 0x2b2c <__fp_zero>
    27ee:	0e f4       	brtc	.+2      	; 0x27f2 <__addsf3x+0x20>
    27f0:	e0 95       	com	r30
    27f2:	0b 2e       	mov	r0, r27
    27f4:	ba 2f       	mov	r27, r26
    27f6:	a0 2d       	mov	r26, r0
    27f8:	0b 01       	movw	r0, r22
    27fa:	b9 01       	movw	r22, r18
    27fc:	90 01       	movw	r18, r0
    27fe:	0c 01       	movw	r0, r24
    2800:	ca 01       	movw	r24, r20
    2802:	a0 01       	movw	r20, r0
    2804:	11 24       	eor	r1, r1
    2806:	ff 27       	eor	r31, r31
    2808:	59 1b       	sub	r21, r25
    280a:	99 f0       	breq	.+38     	; 0x2832 <__addsf3x+0x60>
    280c:	59 3f       	cpi	r21, 0xF9	; 249
    280e:	50 f4       	brcc	.+20     	; 0x2824 <__addsf3x+0x52>
    2810:	50 3e       	cpi	r21, 0xE0	; 224
    2812:	68 f1       	brcs	.+90     	; 0x286e <__addsf3x+0x9c>
    2814:	1a 16       	cp	r1, r26
    2816:	f0 40       	sbci	r31, 0x00	; 0
    2818:	a2 2f       	mov	r26, r18
    281a:	23 2f       	mov	r18, r19
    281c:	34 2f       	mov	r19, r20
    281e:	44 27       	eor	r20, r20
    2820:	58 5f       	subi	r21, 0xF8	; 248
    2822:	f3 cf       	rjmp	.-26     	; 0x280a <__addsf3x+0x38>
    2824:	46 95       	lsr	r20
    2826:	37 95       	ror	r19
    2828:	27 95       	ror	r18
    282a:	a7 95       	ror	r26
    282c:	f0 40       	sbci	r31, 0x00	; 0
    282e:	53 95       	inc	r21
    2830:	c9 f7       	brne	.-14     	; 0x2824 <__addsf3x+0x52>
    2832:	7e f4       	brtc	.+30     	; 0x2852 <__addsf3x+0x80>
    2834:	1f 16       	cp	r1, r31
    2836:	ba 0b       	sbc	r27, r26
    2838:	62 0b       	sbc	r22, r18
    283a:	73 0b       	sbc	r23, r19
    283c:	84 0b       	sbc	r24, r20
    283e:	ba f0       	brmi	.+46     	; 0x286e <__addsf3x+0x9c>
    2840:	91 50       	subi	r25, 0x01	; 1
    2842:	a1 f0       	breq	.+40     	; 0x286c <__addsf3x+0x9a>
    2844:	ff 0f       	add	r31, r31
    2846:	bb 1f       	adc	r27, r27
    2848:	66 1f       	adc	r22, r22
    284a:	77 1f       	adc	r23, r23
    284c:	88 1f       	adc	r24, r24
    284e:	c2 f7       	brpl	.-16     	; 0x2840 <__addsf3x+0x6e>
    2850:	0e c0       	rjmp	.+28     	; 0x286e <__addsf3x+0x9c>
    2852:	ba 0f       	add	r27, r26
    2854:	62 1f       	adc	r22, r18
    2856:	73 1f       	adc	r23, r19
    2858:	84 1f       	adc	r24, r20
    285a:	48 f4       	brcc	.+18     	; 0x286e <__addsf3x+0x9c>
    285c:	87 95       	ror	r24
    285e:	77 95       	ror	r23
    2860:	67 95       	ror	r22
    2862:	b7 95       	ror	r27
    2864:	f7 95       	ror	r31
    2866:	9e 3f       	cpi	r25, 0xFE	; 254
    2868:	08 f0       	brcs	.+2      	; 0x286c <__addsf3x+0x9a>
    286a:	b0 cf       	rjmp	.-160    	; 0x27cc <__addsf3+0x28>
    286c:	93 95       	inc	r25
    286e:	88 0f       	add	r24, r24
    2870:	08 f0       	brcs	.+2      	; 0x2874 <__addsf3x+0xa2>
    2872:	99 27       	eor	r25, r25
    2874:	ee 0f       	add	r30, r30
    2876:	97 95       	ror	r25
    2878:	87 95       	ror	r24
    287a:	08 95       	ret

0000287c <__cmpsf2>:
    287c:	0e 94 28 15 	call	0x2a50	; 0x2a50 <__fp_cmp>
    2880:	08 f4       	brcc	.+2      	; 0x2884 <__cmpsf2+0x8>
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	08 95       	ret

00002886 <__divsf3>:
    2886:	0e 94 57 14 	call	0x28ae	; 0x28ae <__divsf3x>
    288a:	0c 94 63 15 	jmp	0x2ac6	; 0x2ac6 <__fp_round>
    288e:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__fp_pscB>
    2892:	58 f0       	brcs	.+22     	; 0x28aa <__divsf3+0x24>
    2894:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <__fp_pscA>
    2898:	40 f0       	brcs	.+16     	; 0x28aa <__divsf3+0x24>
    289a:	29 f4       	brne	.+10     	; 0x28a6 <__divsf3+0x20>
    289c:	5f 3f       	cpi	r21, 0xFF	; 255
    289e:	29 f0       	breq	.+10     	; 0x28aa <__divsf3+0x24>
    28a0:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__fp_inf>
    28a4:	51 11       	cpse	r21, r1
    28a6:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <__fp_szero>
    28aa:	0c 94 52 15 	jmp	0x2aa4	; 0x2aa4 <__fp_nan>

000028ae <__divsf3x>:
    28ae:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <__fp_split3>
    28b2:	68 f3       	brcs	.-38     	; 0x288e <__divsf3+0x8>

000028b4 <__divsf3_pse>:
    28b4:	99 23       	and	r25, r25
    28b6:	b1 f3       	breq	.-20     	; 0x28a4 <__divsf3+0x1e>
    28b8:	55 23       	and	r21, r21
    28ba:	91 f3       	breq	.-28     	; 0x28a0 <__divsf3+0x1a>
    28bc:	95 1b       	sub	r25, r21
    28be:	55 0b       	sbc	r21, r21
    28c0:	bb 27       	eor	r27, r27
    28c2:	aa 27       	eor	r26, r26
    28c4:	62 17       	cp	r22, r18
    28c6:	73 07       	cpc	r23, r19
    28c8:	84 07       	cpc	r24, r20
    28ca:	38 f0       	brcs	.+14     	; 0x28da <__divsf3_pse+0x26>
    28cc:	9f 5f       	subi	r25, 0xFF	; 255
    28ce:	5f 4f       	sbci	r21, 0xFF	; 255
    28d0:	22 0f       	add	r18, r18
    28d2:	33 1f       	adc	r19, r19
    28d4:	44 1f       	adc	r20, r20
    28d6:	aa 1f       	adc	r26, r26
    28d8:	a9 f3       	breq	.-22     	; 0x28c4 <__divsf3_pse+0x10>
    28da:	35 d0       	rcall	.+106    	; 0x2946 <__divsf3_pse+0x92>
    28dc:	0e 2e       	mov	r0, r30
    28de:	3a f0       	brmi	.+14     	; 0x28ee <__divsf3_pse+0x3a>
    28e0:	e0 e8       	ldi	r30, 0x80	; 128
    28e2:	32 d0       	rcall	.+100    	; 0x2948 <__divsf3_pse+0x94>
    28e4:	91 50       	subi	r25, 0x01	; 1
    28e6:	50 40       	sbci	r21, 0x00	; 0
    28e8:	e6 95       	lsr	r30
    28ea:	00 1c       	adc	r0, r0
    28ec:	ca f7       	brpl	.-14     	; 0x28e0 <__divsf3_pse+0x2c>
    28ee:	2b d0       	rcall	.+86     	; 0x2946 <__divsf3_pse+0x92>
    28f0:	fe 2f       	mov	r31, r30
    28f2:	29 d0       	rcall	.+82     	; 0x2946 <__divsf3_pse+0x92>
    28f4:	66 0f       	add	r22, r22
    28f6:	77 1f       	adc	r23, r23
    28f8:	88 1f       	adc	r24, r24
    28fa:	bb 1f       	adc	r27, r27
    28fc:	26 17       	cp	r18, r22
    28fe:	37 07       	cpc	r19, r23
    2900:	48 07       	cpc	r20, r24
    2902:	ab 07       	cpc	r26, r27
    2904:	b0 e8       	ldi	r27, 0x80	; 128
    2906:	09 f0       	breq	.+2      	; 0x290a <__divsf3_pse+0x56>
    2908:	bb 0b       	sbc	r27, r27
    290a:	80 2d       	mov	r24, r0
    290c:	bf 01       	movw	r22, r30
    290e:	ff 27       	eor	r31, r31
    2910:	93 58       	subi	r25, 0x83	; 131
    2912:	5f 4f       	sbci	r21, 0xFF	; 255
    2914:	3a f0       	brmi	.+14     	; 0x2924 <__divsf3_pse+0x70>
    2916:	9e 3f       	cpi	r25, 0xFE	; 254
    2918:	51 05       	cpc	r21, r1
    291a:	78 f0       	brcs	.+30     	; 0x293a <__divsf3_pse+0x86>
    291c:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__fp_inf>
    2920:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <__fp_szero>
    2924:	5f 3f       	cpi	r21, 0xFF	; 255
    2926:	e4 f3       	brlt	.-8      	; 0x2920 <__divsf3_pse+0x6c>
    2928:	98 3e       	cpi	r25, 0xE8	; 232
    292a:	d4 f3       	brlt	.-12     	; 0x2920 <__divsf3_pse+0x6c>
    292c:	86 95       	lsr	r24
    292e:	77 95       	ror	r23
    2930:	67 95       	ror	r22
    2932:	b7 95       	ror	r27
    2934:	f7 95       	ror	r31
    2936:	9f 5f       	subi	r25, 0xFF	; 255
    2938:	c9 f7       	brne	.-14     	; 0x292c <__divsf3_pse+0x78>
    293a:	88 0f       	add	r24, r24
    293c:	91 1d       	adc	r25, r1
    293e:	96 95       	lsr	r25
    2940:	87 95       	ror	r24
    2942:	97 f9       	bld	r25, 7
    2944:	08 95       	ret
    2946:	e1 e0       	ldi	r30, 0x01	; 1
    2948:	66 0f       	add	r22, r22
    294a:	77 1f       	adc	r23, r23
    294c:	88 1f       	adc	r24, r24
    294e:	bb 1f       	adc	r27, r27
    2950:	62 17       	cp	r22, r18
    2952:	73 07       	cpc	r23, r19
    2954:	84 07       	cpc	r24, r20
    2956:	ba 07       	cpc	r27, r26
    2958:	20 f0       	brcs	.+8      	; 0x2962 <__divsf3_pse+0xae>
    295a:	62 1b       	sub	r22, r18
    295c:	73 0b       	sbc	r23, r19
    295e:	84 0b       	sbc	r24, r20
    2960:	ba 0b       	sbc	r27, r26
    2962:	ee 1f       	adc	r30, r30
    2964:	88 f7       	brcc	.-30     	; 0x2948 <__divsf3_pse+0x94>
    2966:	e0 95       	com	r30
    2968:	08 95       	ret

0000296a <__fixsfsi>:
    296a:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fixunssfsi>
    296e:	68 94       	set
    2970:	b1 11       	cpse	r27, r1
    2972:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <__fp_szero>
    2976:	08 95       	ret

00002978 <__fixunssfsi>:
    2978:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__fp_splitA>
    297c:	88 f0       	brcs	.+34     	; 0x29a0 <__fixunssfsi+0x28>
    297e:	9f 57       	subi	r25, 0x7F	; 127
    2980:	98 f0       	brcs	.+38     	; 0x29a8 <__fixunssfsi+0x30>
    2982:	b9 2f       	mov	r27, r25
    2984:	99 27       	eor	r25, r25
    2986:	b7 51       	subi	r27, 0x17	; 23
    2988:	b0 f0       	brcs	.+44     	; 0x29b6 <__fixunssfsi+0x3e>
    298a:	e1 f0       	breq	.+56     	; 0x29c4 <__fixunssfsi+0x4c>
    298c:	66 0f       	add	r22, r22
    298e:	77 1f       	adc	r23, r23
    2990:	88 1f       	adc	r24, r24
    2992:	99 1f       	adc	r25, r25
    2994:	1a f0       	brmi	.+6      	; 0x299c <__fixunssfsi+0x24>
    2996:	ba 95       	dec	r27
    2998:	c9 f7       	brne	.-14     	; 0x298c <__fixunssfsi+0x14>
    299a:	14 c0       	rjmp	.+40     	; 0x29c4 <__fixunssfsi+0x4c>
    299c:	b1 30       	cpi	r27, 0x01	; 1
    299e:	91 f0       	breq	.+36     	; 0x29c4 <__fixunssfsi+0x4c>
    29a0:	0e 94 96 15 	call	0x2b2c	; 0x2b2c <__fp_zero>
    29a4:	b1 e0       	ldi	r27, 0x01	; 1
    29a6:	08 95       	ret
    29a8:	0c 94 96 15 	jmp	0x2b2c	; 0x2b2c <__fp_zero>
    29ac:	67 2f       	mov	r22, r23
    29ae:	78 2f       	mov	r23, r24
    29b0:	88 27       	eor	r24, r24
    29b2:	b8 5f       	subi	r27, 0xF8	; 248
    29b4:	39 f0       	breq	.+14     	; 0x29c4 <__fixunssfsi+0x4c>
    29b6:	b9 3f       	cpi	r27, 0xF9	; 249
    29b8:	cc f3       	brlt	.-14     	; 0x29ac <__fixunssfsi+0x34>
    29ba:	86 95       	lsr	r24
    29bc:	77 95       	ror	r23
    29be:	67 95       	ror	r22
    29c0:	b3 95       	inc	r27
    29c2:	d9 f7       	brne	.-10     	; 0x29ba <__fixunssfsi+0x42>
    29c4:	3e f4       	brtc	.+14     	; 0x29d4 <__fixunssfsi+0x5c>
    29c6:	90 95       	com	r25
    29c8:	80 95       	com	r24
    29ca:	70 95       	com	r23
    29cc:	61 95       	neg	r22
    29ce:	7f 4f       	sbci	r23, 0xFF	; 255
    29d0:	8f 4f       	sbci	r24, 0xFF	; 255
    29d2:	9f 4f       	sbci	r25, 0xFF	; 255
    29d4:	08 95       	ret

000029d6 <__floatunsisf>:
    29d6:	e8 94       	clt
    29d8:	09 c0       	rjmp	.+18     	; 0x29ec <__floatsisf+0x12>

000029da <__floatsisf>:
    29da:	97 fb       	bst	r25, 7
    29dc:	3e f4       	brtc	.+14     	; 0x29ec <__floatsisf+0x12>
    29de:	90 95       	com	r25
    29e0:	80 95       	com	r24
    29e2:	70 95       	com	r23
    29e4:	61 95       	neg	r22
    29e6:	7f 4f       	sbci	r23, 0xFF	; 255
    29e8:	8f 4f       	sbci	r24, 0xFF	; 255
    29ea:	9f 4f       	sbci	r25, 0xFF	; 255
    29ec:	99 23       	and	r25, r25
    29ee:	a9 f0       	breq	.+42     	; 0x2a1a <__floatsisf+0x40>
    29f0:	f9 2f       	mov	r31, r25
    29f2:	96 e9       	ldi	r25, 0x96	; 150
    29f4:	bb 27       	eor	r27, r27
    29f6:	93 95       	inc	r25
    29f8:	f6 95       	lsr	r31
    29fa:	87 95       	ror	r24
    29fc:	77 95       	ror	r23
    29fe:	67 95       	ror	r22
    2a00:	b7 95       	ror	r27
    2a02:	f1 11       	cpse	r31, r1
    2a04:	f8 cf       	rjmp	.-16     	; 0x29f6 <__floatsisf+0x1c>
    2a06:	fa f4       	brpl	.+62     	; 0x2a46 <__floatsisf+0x6c>
    2a08:	bb 0f       	add	r27, r27
    2a0a:	11 f4       	brne	.+4      	; 0x2a10 <__floatsisf+0x36>
    2a0c:	60 ff       	sbrs	r22, 0
    2a0e:	1b c0       	rjmp	.+54     	; 0x2a46 <__floatsisf+0x6c>
    2a10:	6f 5f       	subi	r22, 0xFF	; 255
    2a12:	7f 4f       	sbci	r23, 0xFF	; 255
    2a14:	8f 4f       	sbci	r24, 0xFF	; 255
    2a16:	9f 4f       	sbci	r25, 0xFF	; 255
    2a18:	16 c0       	rjmp	.+44     	; 0x2a46 <__floatsisf+0x6c>
    2a1a:	88 23       	and	r24, r24
    2a1c:	11 f0       	breq	.+4      	; 0x2a22 <__floatsisf+0x48>
    2a1e:	96 e9       	ldi	r25, 0x96	; 150
    2a20:	11 c0       	rjmp	.+34     	; 0x2a44 <__floatsisf+0x6a>
    2a22:	77 23       	and	r23, r23
    2a24:	21 f0       	breq	.+8      	; 0x2a2e <__floatsisf+0x54>
    2a26:	9e e8       	ldi	r25, 0x8E	; 142
    2a28:	87 2f       	mov	r24, r23
    2a2a:	76 2f       	mov	r23, r22
    2a2c:	05 c0       	rjmp	.+10     	; 0x2a38 <__floatsisf+0x5e>
    2a2e:	66 23       	and	r22, r22
    2a30:	71 f0       	breq	.+28     	; 0x2a4e <__floatsisf+0x74>
    2a32:	96 e8       	ldi	r25, 0x86	; 134
    2a34:	86 2f       	mov	r24, r22
    2a36:	70 e0       	ldi	r23, 0x00	; 0
    2a38:	60 e0       	ldi	r22, 0x00	; 0
    2a3a:	2a f0       	brmi	.+10     	; 0x2a46 <__floatsisf+0x6c>
    2a3c:	9a 95       	dec	r25
    2a3e:	66 0f       	add	r22, r22
    2a40:	77 1f       	adc	r23, r23
    2a42:	88 1f       	adc	r24, r24
    2a44:	da f7       	brpl	.-10     	; 0x2a3c <__floatsisf+0x62>
    2a46:	88 0f       	add	r24, r24
    2a48:	96 95       	lsr	r25
    2a4a:	87 95       	ror	r24
    2a4c:	97 f9       	bld	r25, 7
    2a4e:	08 95       	ret

00002a50 <__fp_cmp>:
    2a50:	99 0f       	add	r25, r25
    2a52:	00 08       	sbc	r0, r0
    2a54:	55 0f       	add	r21, r21
    2a56:	aa 0b       	sbc	r26, r26
    2a58:	e0 e8       	ldi	r30, 0x80	; 128
    2a5a:	fe ef       	ldi	r31, 0xFE	; 254
    2a5c:	16 16       	cp	r1, r22
    2a5e:	17 06       	cpc	r1, r23
    2a60:	e8 07       	cpc	r30, r24
    2a62:	f9 07       	cpc	r31, r25
    2a64:	c0 f0       	brcs	.+48     	; 0x2a96 <__fp_cmp+0x46>
    2a66:	12 16       	cp	r1, r18
    2a68:	13 06       	cpc	r1, r19
    2a6a:	e4 07       	cpc	r30, r20
    2a6c:	f5 07       	cpc	r31, r21
    2a6e:	98 f0       	brcs	.+38     	; 0x2a96 <__fp_cmp+0x46>
    2a70:	62 1b       	sub	r22, r18
    2a72:	73 0b       	sbc	r23, r19
    2a74:	84 0b       	sbc	r24, r20
    2a76:	95 0b       	sbc	r25, r21
    2a78:	39 f4       	brne	.+14     	; 0x2a88 <__fp_cmp+0x38>
    2a7a:	0a 26       	eor	r0, r26
    2a7c:	61 f0       	breq	.+24     	; 0x2a96 <__fp_cmp+0x46>
    2a7e:	23 2b       	or	r18, r19
    2a80:	24 2b       	or	r18, r20
    2a82:	25 2b       	or	r18, r21
    2a84:	21 f4       	brne	.+8      	; 0x2a8e <__fp_cmp+0x3e>
    2a86:	08 95       	ret
    2a88:	0a 26       	eor	r0, r26
    2a8a:	09 f4       	brne	.+2      	; 0x2a8e <__fp_cmp+0x3e>
    2a8c:	a1 40       	sbci	r26, 0x01	; 1
    2a8e:	a6 95       	lsr	r26
    2a90:	8f ef       	ldi	r24, 0xFF	; 255
    2a92:	81 1d       	adc	r24, r1
    2a94:	81 1d       	adc	r24, r1
    2a96:	08 95       	ret

00002a98 <__fp_inf>:
    2a98:	97 f9       	bld	r25, 7
    2a9a:	9f 67       	ori	r25, 0x7F	; 127
    2a9c:	80 e8       	ldi	r24, 0x80	; 128
    2a9e:	70 e0       	ldi	r23, 0x00	; 0
    2aa0:	60 e0       	ldi	r22, 0x00	; 0
    2aa2:	08 95       	ret

00002aa4 <__fp_nan>:
    2aa4:	9f ef       	ldi	r25, 0xFF	; 255
    2aa6:	80 ec       	ldi	r24, 0xC0	; 192
    2aa8:	08 95       	ret

00002aaa <__fp_pscA>:
    2aaa:	00 24       	eor	r0, r0
    2aac:	0a 94       	dec	r0
    2aae:	16 16       	cp	r1, r22
    2ab0:	17 06       	cpc	r1, r23
    2ab2:	18 06       	cpc	r1, r24
    2ab4:	09 06       	cpc	r0, r25
    2ab6:	08 95       	ret

00002ab8 <__fp_pscB>:
    2ab8:	00 24       	eor	r0, r0
    2aba:	0a 94       	dec	r0
    2abc:	12 16       	cp	r1, r18
    2abe:	13 06       	cpc	r1, r19
    2ac0:	14 06       	cpc	r1, r20
    2ac2:	05 06       	cpc	r0, r21
    2ac4:	08 95       	ret

00002ac6 <__fp_round>:
    2ac6:	09 2e       	mov	r0, r25
    2ac8:	03 94       	inc	r0
    2aca:	00 0c       	add	r0, r0
    2acc:	11 f4       	brne	.+4      	; 0x2ad2 <__fp_round+0xc>
    2ace:	88 23       	and	r24, r24
    2ad0:	52 f0       	brmi	.+20     	; 0x2ae6 <__fp_round+0x20>
    2ad2:	bb 0f       	add	r27, r27
    2ad4:	40 f4       	brcc	.+16     	; 0x2ae6 <__fp_round+0x20>
    2ad6:	bf 2b       	or	r27, r31
    2ad8:	11 f4       	brne	.+4      	; 0x2ade <__fp_round+0x18>
    2ada:	60 ff       	sbrs	r22, 0
    2adc:	04 c0       	rjmp	.+8      	; 0x2ae6 <__fp_round+0x20>
    2ade:	6f 5f       	subi	r22, 0xFF	; 255
    2ae0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae2:	8f 4f       	sbci	r24, 0xFF	; 255
    2ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae6:	08 95       	ret

00002ae8 <__fp_split3>:
    2ae8:	57 fd       	sbrc	r21, 7
    2aea:	90 58       	subi	r25, 0x80	; 128
    2aec:	44 0f       	add	r20, r20
    2aee:	55 1f       	adc	r21, r21
    2af0:	59 f0       	breq	.+22     	; 0x2b08 <__fp_splitA+0x10>
    2af2:	5f 3f       	cpi	r21, 0xFF	; 255
    2af4:	71 f0       	breq	.+28     	; 0x2b12 <__fp_splitA+0x1a>
    2af6:	47 95       	ror	r20

00002af8 <__fp_splitA>:
    2af8:	88 0f       	add	r24, r24
    2afa:	97 fb       	bst	r25, 7
    2afc:	99 1f       	adc	r25, r25
    2afe:	61 f0       	breq	.+24     	; 0x2b18 <__fp_splitA+0x20>
    2b00:	9f 3f       	cpi	r25, 0xFF	; 255
    2b02:	79 f0       	breq	.+30     	; 0x2b22 <__fp_splitA+0x2a>
    2b04:	87 95       	ror	r24
    2b06:	08 95       	ret
    2b08:	12 16       	cp	r1, r18
    2b0a:	13 06       	cpc	r1, r19
    2b0c:	14 06       	cpc	r1, r20
    2b0e:	55 1f       	adc	r21, r21
    2b10:	f2 cf       	rjmp	.-28     	; 0x2af6 <__fp_split3+0xe>
    2b12:	46 95       	lsr	r20
    2b14:	f1 df       	rcall	.-30     	; 0x2af8 <__fp_splitA>
    2b16:	08 c0       	rjmp	.+16     	; 0x2b28 <__fp_splitA+0x30>
    2b18:	16 16       	cp	r1, r22
    2b1a:	17 06       	cpc	r1, r23
    2b1c:	18 06       	cpc	r1, r24
    2b1e:	99 1f       	adc	r25, r25
    2b20:	f1 cf       	rjmp	.-30     	; 0x2b04 <__fp_splitA+0xc>
    2b22:	86 95       	lsr	r24
    2b24:	71 05       	cpc	r23, r1
    2b26:	61 05       	cpc	r22, r1
    2b28:	08 94       	sec
    2b2a:	08 95       	ret

00002b2c <__fp_zero>:
    2b2c:	e8 94       	clt

00002b2e <__fp_szero>:
    2b2e:	bb 27       	eor	r27, r27
    2b30:	66 27       	eor	r22, r22
    2b32:	77 27       	eor	r23, r23
    2b34:	cb 01       	movw	r24, r22
    2b36:	97 f9       	bld	r25, 7
    2b38:	08 95       	ret

00002b3a <__gesf2>:
    2b3a:	0e 94 28 15 	call	0x2a50	; 0x2a50 <__fp_cmp>
    2b3e:	08 f4       	brcc	.+2      	; 0x2b42 <__gesf2+0x8>
    2b40:	8f ef       	ldi	r24, 0xFF	; 255
    2b42:	08 95       	ret

00002b44 <__mulsf3>:
    2b44:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <__mulsf3x>
    2b48:	0c 94 63 15 	jmp	0x2ac6	; 0x2ac6 <__fp_round>
    2b4c:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <__fp_pscA>
    2b50:	38 f0       	brcs	.+14     	; 0x2b60 <__mulsf3+0x1c>
    2b52:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__fp_pscB>
    2b56:	20 f0       	brcs	.+8      	; 0x2b60 <__mulsf3+0x1c>
    2b58:	95 23       	and	r25, r21
    2b5a:	11 f0       	breq	.+4      	; 0x2b60 <__mulsf3+0x1c>
    2b5c:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__fp_inf>
    2b60:	0c 94 52 15 	jmp	0x2aa4	; 0x2aa4 <__fp_nan>
    2b64:	11 24       	eor	r1, r1
    2b66:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <__fp_szero>

00002b6a <__mulsf3x>:
    2b6a:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <__fp_split3>
    2b6e:	70 f3       	brcs	.-36     	; 0x2b4c <__mulsf3+0x8>

00002b70 <__mulsf3_pse>:
    2b70:	95 9f       	mul	r25, r21
    2b72:	c1 f3       	breq	.-16     	; 0x2b64 <__mulsf3+0x20>
    2b74:	95 0f       	add	r25, r21
    2b76:	50 e0       	ldi	r21, 0x00	; 0
    2b78:	55 1f       	adc	r21, r21
    2b7a:	62 9f       	mul	r22, r18
    2b7c:	f0 01       	movw	r30, r0
    2b7e:	72 9f       	mul	r23, r18
    2b80:	bb 27       	eor	r27, r27
    2b82:	f0 0d       	add	r31, r0
    2b84:	b1 1d       	adc	r27, r1
    2b86:	63 9f       	mul	r22, r19
    2b88:	aa 27       	eor	r26, r26
    2b8a:	f0 0d       	add	r31, r0
    2b8c:	b1 1d       	adc	r27, r1
    2b8e:	aa 1f       	adc	r26, r26
    2b90:	64 9f       	mul	r22, r20
    2b92:	66 27       	eor	r22, r22
    2b94:	b0 0d       	add	r27, r0
    2b96:	a1 1d       	adc	r26, r1
    2b98:	66 1f       	adc	r22, r22
    2b9a:	82 9f       	mul	r24, r18
    2b9c:	22 27       	eor	r18, r18
    2b9e:	b0 0d       	add	r27, r0
    2ba0:	a1 1d       	adc	r26, r1
    2ba2:	62 1f       	adc	r22, r18
    2ba4:	73 9f       	mul	r23, r19
    2ba6:	b0 0d       	add	r27, r0
    2ba8:	a1 1d       	adc	r26, r1
    2baa:	62 1f       	adc	r22, r18
    2bac:	83 9f       	mul	r24, r19
    2bae:	a0 0d       	add	r26, r0
    2bb0:	61 1d       	adc	r22, r1
    2bb2:	22 1f       	adc	r18, r18
    2bb4:	74 9f       	mul	r23, r20
    2bb6:	33 27       	eor	r19, r19
    2bb8:	a0 0d       	add	r26, r0
    2bba:	61 1d       	adc	r22, r1
    2bbc:	23 1f       	adc	r18, r19
    2bbe:	84 9f       	mul	r24, r20
    2bc0:	60 0d       	add	r22, r0
    2bc2:	21 1d       	adc	r18, r1
    2bc4:	82 2f       	mov	r24, r18
    2bc6:	76 2f       	mov	r23, r22
    2bc8:	6a 2f       	mov	r22, r26
    2bca:	11 24       	eor	r1, r1
    2bcc:	9f 57       	subi	r25, 0x7F	; 127
    2bce:	50 40       	sbci	r21, 0x00	; 0
    2bd0:	9a f0       	brmi	.+38     	; 0x2bf8 <__mulsf3_pse+0x88>
    2bd2:	f1 f0       	breq	.+60     	; 0x2c10 <__mulsf3_pse+0xa0>
    2bd4:	88 23       	and	r24, r24
    2bd6:	4a f0       	brmi	.+18     	; 0x2bea <__mulsf3_pse+0x7a>
    2bd8:	ee 0f       	add	r30, r30
    2bda:	ff 1f       	adc	r31, r31
    2bdc:	bb 1f       	adc	r27, r27
    2bde:	66 1f       	adc	r22, r22
    2be0:	77 1f       	adc	r23, r23
    2be2:	88 1f       	adc	r24, r24
    2be4:	91 50       	subi	r25, 0x01	; 1
    2be6:	50 40       	sbci	r21, 0x00	; 0
    2be8:	a9 f7       	brne	.-22     	; 0x2bd4 <__mulsf3_pse+0x64>
    2bea:	9e 3f       	cpi	r25, 0xFE	; 254
    2bec:	51 05       	cpc	r21, r1
    2bee:	80 f0       	brcs	.+32     	; 0x2c10 <__mulsf3_pse+0xa0>
    2bf0:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__fp_inf>
    2bf4:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <__fp_szero>
    2bf8:	5f 3f       	cpi	r21, 0xFF	; 255
    2bfa:	e4 f3       	brlt	.-8      	; 0x2bf4 <__mulsf3_pse+0x84>
    2bfc:	98 3e       	cpi	r25, 0xE8	; 232
    2bfe:	d4 f3       	brlt	.-12     	; 0x2bf4 <__mulsf3_pse+0x84>
    2c00:	86 95       	lsr	r24
    2c02:	77 95       	ror	r23
    2c04:	67 95       	ror	r22
    2c06:	b7 95       	ror	r27
    2c08:	f7 95       	ror	r31
    2c0a:	e7 95       	ror	r30
    2c0c:	9f 5f       	subi	r25, 0xFF	; 255
    2c0e:	c1 f7       	brne	.-16     	; 0x2c00 <__mulsf3_pse+0x90>
    2c10:	fe 2b       	or	r31, r30
    2c12:	88 0f       	add	r24, r24
    2c14:	91 1d       	adc	r25, r1
    2c16:	96 95       	lsr	r25
    2c18:	87 95       	ror	r24
    2c1a:	97 f9       	bld	r25, 7
    2c1c:	08 95       	ret

00002c1e <__udivmodhi4>:
    2c1e:	aa 1b       	sub	r26, r26
    2c20:	bb 1b       	sub	r27, r27
    2c22:	51 e1       	ldi	r21, 0x11	; 17
    2c24:	07 c0       	rjmp	.+14     	; 0x2c34 <__udivmodhi4_ep>

00002c26 <__udivmodhi4_loop>:
    2c26:	aa 1f       	adc	r26, r26
    2c28:	bb 1f       	adc	r27, r27
    2c2a:	a6 17       	cp	r26, r22
    2c2c:	b7 07       	cpc	r27, r23
    2c2e:	10 f0       	brcs	.+4      	; 0x2c34 <__udivmodhi4_ep>
    2c30:	a6 1b       	sub	r26, r22
    2c32:	b7 0b       	sbc	r27, r23

00002c34 <__udivmodhi4_ep>:
    2c34:	88 1f       	adc	r24, r24
    2c36:	99 1f       	adc	r25, r25
    2c38:	5a 95       	dec	r21
    2c3a:	a9 f7       	brne	.-22     	; 0x2c26 <__udivmodhi4_loop>
    2c3c:	80 95       	com	r24
    2c3e:	90 95       	com	r25
    2c40:	bc 01       	movw	r22, r24
    2c42:	cd 01       	movw	r24, r26
    2c44:	08 95       	ret

00002c46 <__divmodhi4>:
    2c46:	97 fb       	bst	r25, 7
    2c48:	07 2e       	mov	r0, r23
    2c4a:	16 f4       	brtc	.+4      	; 0x2c50 <__divmodhi4+0xa>
    2c4c:	00 94       	com	r0
    2c4e:	07 d0       	rcall	.+14     	; 0x2c5e <__divmodhi4_neg1>
    2c50:	77 fd       	sbrc	r23, 7
    2c52:	09 d0       	rcall	.+18     	; 0x2c66 <__divmodhi4_neg2>
    2c54:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__udivmodhi4>
    2c58:	07 fc       	sbrc	r0, 7
    2c5a:	05 d0       	rcall	.+10     	; 0x2c66 <__divmodhi4_neg2>
    2c5c:	3e f4       	brtc	.+14     	; 0x2c6c <__divmodhi4_exit>

00002c5e <__divmodhi4_neg1>:
    2c5e:	90 95       	com	r25
    2c60:	81 95       	neg	r24
    2c62:	9f 4f       	sbci	r25, 0xFF	; 255
    2c64:	08 95       	ret

00002c66 <__divmodhi4_neg2>:
    2c66:	70 95       	com	r23
    2c68:	61 95       	neg	r22
    2c6a:	7f 4f       	sbci	r23, 0xFF	; 255

00002c6c <__divmodhi4_exit>:
    2c6c:	08 95       	ret

00002c6e <__umulhisi3>:
    2c6e:	a2 9f       	mul	r26, r18
    2c70:	b0 01       	movw	r22, r0
    2c72:	b3 9f       	mul	r27, r19
    2c74:	c0 01       	movw	r24, r0
    2c76:	a3 9f       	mul	r26, r19
    2c78:	70 0d       	add	r23, r0
    2c7a:	81 1d       	adc	r24, r1
    2c7c:	11 24       	eor	r1, r1
    2c7e:	91 1d       	adc	r25, r1
    2c80:	b2 9f       	mul	r27, r18
    2c82:	70 0d       	add	r23, r0
    2c84:	81 1d       	adc	r24, r1
    2c86:	11 24       	eor	r1, r1
    2c88:	91 1d       	adc	r25, r1
    2c8a:	08 95       	ret

00002c8c <do_rand>:
    2c8c:	8f 92       	push	r8
    2c8e:	9f 92       	push	r9
    2c90:	af 92       	push	r10
    2c92:	bf 92       	push	r11
    2c94:	cf 92       	push	r12
    2c96:	df 92       	push	r13
    2c98:	ef 92       	push	r14
    2c9a:	ff 92       	push	r15
    2c9c:	cf 93       	push	r28
    2c9e:	df 93       	push	r29
    2ca0:	ec 01       	movw	r28, r24
    2ca2:	68 81       	ld	r22, Y
    2ca4:	79 81       	ldd	r23, Y+1	; 0x01
    2ca6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca8:	9b 81       	ldd	r25, Y+3	; 0x03
    2caa:	61 15       	cp	r22, r1
    2cac:	71 05       	cpc	r23, r1
    2cae:	81 05       	cpc	r24, r1
    2cb0:	91 05       	cpc	r25, r1
    2cb2:	21 f4       	brne	.+8      	; 0x2cbc <do_rand+0x30>
    2cb4:	64 e2       	ldi	r22, 0x24	; 36
    2cb6:	79 ed       	ldi	r23, 0xD9	; 217
    2cb8:	8b e5       	ldi	r24, 0x5B	; 91
    2cba:	97 e0       	ldi	r25, 0x07	; 7
    2cbc:	2d e1       	ldi	r18, 0x1D	; 29
    2cbe:	33 ef       	ldi	r19, 0xF3	; 243
    2cc0:	41 e0       	ldi	r20, 0x01	; 1
    2cc2:	50 e0       	ldi	r21, 0x00	; 0
    2cc4:	0e 94 d7 16 	call	0x2dae	; 0x2dae <__divmodsi4>
    2cc8:	49 01       	movw	r8, r18
    2cca:	5a 01       	movw	r10, r20
    2ccc:	9b 01       	movw	r18, r22
    2cce:	ac 01       	movw	r20, r24
    2cd0:	a7 ea       	ldi	r26, 0xA7	; 167
    2cd2:	b1 e4       	ldi	r27, 0x41	; 65
    2cd4:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__muluhisi3>
    2cd8:	6b 01       	movw	r12, r22
    2cda:	7c 01       	movw	r14, r24
    2cdc:	ac ee       	ldi	r26, 0xEC	; 236
    2cde:	b4 ef       	ldi	r27, 0xF4	; 244
    2ce0:	a5 01       	movw	r20, r10
    2ce2:	94 01       	movw	r18, r8
    2ce4:	0e 94 04 17 	call	0x2e08	; 0x2e08 <__mulohisi3>
    2ce8:	dc 01       	movw	r26, r24
    2cea:	cb 01       	movw	r24, r22
    2cec:	8c 0d       	add	r24, r12
    2cee:	9d 1d       	adc	r25, r13
    2cf0:	ae 1d       	adc	r26, r14
    2cf2:	bf 1d       	adc	r27, r15
    2cf4:	b7 ff       	sbrs	r27, 7
    2cf6:	03 c0       	rjmp	.+6      	; 0x2cfe <do_rand+0x72>
    2cf8:	01 97       	sbiw	r24, 0x01	; 1
    2cfa:	a1 09       	sbc	r26, r1
    2cfc:	b0 48       	sbci	r27, 0x80	; 128
    2cfe:	88 83       	st	Y, r24
    2d00:	99 83       	std	Y+1, r25	; 0x01
    2d02:	aa 83       	std	Y+2, r26	; 0x02
    2d04:	bb 83       	std	Y+3, r27	; 0x03
    2d06:	9f 77       	andi	r25, 0x7F	; 127
    2d08:	df 91       	pop	r29
    2d0a:	cf 91       	pop	r28
    2d0c:	ff 90       	pop	r15
    2d0e:	ef 90       	pop	r14
    2d10:	df 90       	pop	r13
    2d12:	cf 90       	pop	r12
    2d14:	bf 90       	pop	r11
    2d16:	af 90       	pop	r10
    2d18:	9f 90       	pop	r9
    2d1a:	8f 90       	pop	r8
    2d1c:	08 95       	ret

00002d1e <rand_r>:
    2d1e:	0e 94 46 16 	call	0x2c8c	; 0x2c8c <do_rand>
    2d22:	08 95       	ret

00002d24 <rand>:
    2d24:	80 e0       	ldi	r24, 0x00	; 0
    2d26:	91 e0       	ldi	r25, 0x01	; 1
    2d28:	0e 94 46 16 	call	0x2c8c	; 0x2c8c <do_rand>
    2d2c:	08 95       	ret

00002d2e <srand>:
    2d2e:	a0 e0       	ldi	r26, 0x00	; 0
    2d30:	b0 e0       	ldi	r27, 0x00	; 0
    2d32:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2d36:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2d3a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    2d3e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    2d42:	08 95       	ret

00002d44 <__itoa_ncheck>:
    2d44:	bb 27       	eor	r27, r27
    2d46:	4a 30       	cpi	r20, 0x0A	; 10
    2d48:	31 f4       	brne	.+12     	; 0x2d56 <__itoa_ncheck+0x12>
    2d4a:	99 23       	and	r25, r25
    2d4c:	22 f4       	brpl	.+8      	; 0x2d56 <__itoa_ncheck+0x12>
    2d4e:	bd e2       	ldi	r27, 0x2D	; 45
    2d50:	90 95       	com	r25
    2d52:	81 95       	neg	r24
    2d54:	9f 4f       	sbci	r25, 0xFF	; 255
    2d56:	0c 94 ae 16 	jmp	0x2d5c	; 0x2d5c <__utoa_common>

00002d5a <__utoa_ncheck>:
    2d5a:	bb 27       	eor	r27, r27

00002d5c <__utoa_common>:
    2d5c:	fb 01       	movw	r30, r22
    2d5e:	55 27       	eor	r21, r21
    2d60:	aa 27       	eor	r26, r26
    2d62:	88 0f       	add	r24, r24
    2d64:	99 1f       	adc	r25, r25
    2d66:	aa 1f       	adc	r26, r26
    2d68:	a4 17       	cp	r26, r20
    2d6a:	10 f0       	brcs	.+4      	; 0x2d70 <__utoa_common+0x14>
    2d6c:	a4 1b       	sub	r26, r20
    2d6e:	83 95       	inc	r24
    2d70:	50 51       	subi	r21, 0x10	; 16
    2d72:	b9 f7       	brne	.-18     	; 0x2d62 <__utoa_common+0x6>
    2d74:	a0 5d       	subi	r26, 0xD0	; 208
    2d76:	aa 33       	cpi	r26, 0x3A	; 58
    2d78:	08 f0       	brcs	.+2      	; 0x2d7c <__utoa_common+0x20>
    2d7a:	a9 5d       	subi	r26, 0xD9	; 217
    2d7c:	a1 93       	st	Z+, r26
    2d7e:	00 97       	sbiw	r24, 0x00	; 0
    2d80:	79 f7       	brne	.-34     	; 0x2d60 <__utoa_common+0x4>
    2d82:	b1 11       	cpse	r27, r1
    2d84:	b1 93       	st	Z+, r27
    2d86:	11 92       	st	Z+, r1
    2d88:	cb 01       	movw	r24, r22
    2d8a:	0c 94 c7 16 	jmp	0x2d8e	; 0x2d8e <strrev>

00002d8e <strrev>:
    2d8e:	dc 01       	movw	r26, r24
    2d90:	fc 01       	movw	r30, r24
    2d92:	67 2f       	mov	r22, r23
    2d94:	71 91       	ld	r23, Z+
    2d96:	77 23       	and	r23, r23
    2d98:	e1 f7       	brne	.-8      	; 0x2d92 <strrev+0x4>
    2d9a:	32 97       	sbiw	r30, 0x02	; 2
    2d9c:	04 c0       	rjmp	.+8      	; 0x2da6 <strrev+0x18>
    2d9e:	7c 91       	ld	r23, X
    2da0:	6d 93       	st	X+, r22
    2da2:	70 83       	st	Z, r23
    2da4:	62 91       	ld	r22, -Z
    2da6:	ae 17       	cp	r26, r30
    2da8:	bf 07       	cpc	r27, r31
    2daa:	c8 f3       	brcs	.-14     	; 0x2d9e <strrev+0x10>
    2dac:	08 95       	ret

00002dae <__divmodsi4>:
    2dae:	05 2e       	mov	r0, r21
    2db0:	97 fb       	bst	r25, 7
    2db2:	1e f4       	brtc	.+6      	; 0x2dba <__divmodsi4+0xc>
    2db4:	00 94       	com	r0
    2db6:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <__negsi2>
    2dba:	57 fd       	sbrc	r21, 7
    2dbc:	07 d0       	rcall	.+14     	; 0x2dcc <__divmodsi4_neg2>
    2dbe:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__udivmodsi4>
    2dc2:	07 fc       	sbrc	r0, 7
    2dc4:	03 d0       	rcall	.+6      	; 0x2dcc <__divmodsi4_neg2>
    2dc6:	4e f4       	brtc	.+18     	; 0x2dda <__divmodsi4_exit>
    2dc8:	0c 94 ee 16 	jmp	0x2ddc	; 0x2ddc <__negsi2>

00002dcc <__divmodsi4_neg2>:
    2dcc:	50 95       	com	r21
    2dce:	40 95       	com	r20
    2dd0:	30 95       	com	r19
    2dd2:	21 95       	neg	r18
    2dd4:	3f 4f       	sbci	r19, 0xFF	; 255
    2dd6:	4f 4f       	sbci	r20, 0xFF	; 255
    2dd8:	5f 4f       	sbci	r21, 0xFF	; 255

00002dda <__divmodsi4_exit>:
    2dda:	08 95       	ret

00002ddc <__negsi2>:
    2ddc:	90 95       	com	r25
    2dde:	80 95       	com	r24
    2de0:	70 95       	com	r23
    2de2:	61 95       	neg	r22
    2de4:	7f 4f       	sbci	r23, 0xFF	; 255
    2de6:	8f 4f       	sbci	r24, 0xFF	; 255
    2de8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dea:	08 95       	ret

00002dec <__muluhisi3>:
    2dec:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <__umulhisi3>
    2df0:	a5 9f       	mul	r26, r21
    2df2:	90 0d       	add	r25, r0
    2df4:	b4 9f       	mul	r27, r20
    2df6:	90 0d       	add	r25, r0
    2df8:	a4 9f       	mul	r26, r20
    2dfa:	80 0d       	add	r24, r0
    2dfc:	91 1d       	adc	r25, r1
    2dfe:	11 24       	eor	r1, r1
    2e00:	08 95       	ret

00002e02 <__mulshisi3>:
    2e02:	b7 ff       	sbrs	r27, 7
    2e04:	0c 94 f6 16 	jmp	0x2dec	; 0x2dec <__muluhisi3>

00002e08 <__mulohisi3>:
    2e08:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__muluhisi3>
    2e0c:	82 1b       	sub	r24, r18
    2e0e:	93 0b       	sbc	r25, r19
    2e10:	08 95       	ret

00002e12 <__udivmodsi4>:
    2e12:	a1 e2       	ldi	r26, 0x21	; 33
    2e14:	1a 2e       	mov	r1, r26
    2e16:	aa 1b       	sub	r26, r26
    2e18:	bb 1b       	sub	r27, r27
    2e1a:	fd 01       	movw	r30, r26
    2e1c:	0d c0       	rjmp	.+26     	; 0x2e38 <__udivmodsi4_ep>

00002e1e <__udivmodsi4_loop>:
    2e1e:	aa 1f       	adc	r26, r26
    2e20:	bb 1f       	adc	r27, r27
    2e22:	ee 1f       	adc	r30, r30
    2e24:	ff 1f       	adc	r31, r31
    2e26:	a2 17       	cp	r26, r18
    2e28:	b3 07       	cpc	r27, r19
    2e2a:	e4 07       	cpc	r30, r20
    2e2c:	f5 07       	cpc	r31, r21
    2e2e:	20 f0       	brcs	.+8      	; 0x2e38 <__udivmodsi4_ep>
    2e30:	a2 1b       	sub	r26, r18
    2e32:	b3 0b       	sbc	r27, r19
    2e34:	e4 0b       	sbc	r30, r20
    2e36:	f5 0b       	sbc	r31, r21

00002e38 <__udivmodsi4_ep>:
    2e38:	66 1f       	adc	r22, r22
    2e3a:	77 1f       	adc	r23, r23
    2e3c:	88 1f       	adc	r24, r24
    2e3e:	99 1f       	adc	r25, r25
    2e40:	1a 94       	dec	r1
    2e42:	69 f7       	brne	.-38     	; 0x2e1e <__udivmodsi4_loop>
    2e44:	60 95       	com	r22
    2e46:	70 95       	com	r23
    2e48:	80 95       	com	r24
    2e4a:	90 95       	com	r25
    2e4c:	9b 01       	movw	r18, r22
    2e4e:	ac 01       	movw	r20, r24
    2e50:	bd 01       	movw	r22, r26
    2e52:	cf 01       	movw	r24, r30
    2e54:	08 95       	ret

00002e56 <_exit>:
    2e56:	f8 94       	cli

00002e58 <__stop_program>:
    2e58:	ff cf       	rjmp	.-2      	; 0x2e58 <__stop_program>
